19th of January 2017
---------------------
Version 1.11

new: 
- vecci: added very basic support to export vector lists to SVG (lines only)
- vedi: variables scanned respect capital and non capital letters
- vedi: vectorpanel, has the option of "upscaling" an image (partial image)
- assi: added option to enable warning on multiple "defines" of same symbol (default is ON)
- vedi: added tooltip to "tab" that shows the full path of the edited file
- vedi: added dialog if "injection" is chosen, and the running file has a different name
- dissi: variable panel "table" is now sortable
- dissi: variable panel, 8bit and 16 bit columns can be edited (and are written to memory)
         therefor, double click on 16 bit column does not invoke dumpi, to invoke dumpy now
         shift+double click is needed
- vecxi: added configuration for "zeroing divider"
- vecxi: added some thoughts about "zero retain"
- vecxi: disabled emulation options I think are "wrongly" implemented (overflow and zero retain)
- vedi: added scheduler, that updates var definitions every 30 seconds
- vedi: enabled saveAll button
- vedi+assi: added "visual breakpoints", click on line number in vedi toggles breakpoint for that line 
        (background of linenumber changes to red), technically a "hey dissi "break"" is added at compile time
- raster: fixed a bug with generating "shiftreg9 bug" compatible raster lists
- vedi: editor remembers the position of open and recent files
- vedi: added a table to display all bookmarks (double click jumps to bookmark)
- vedi: added a table to display all breakpoints (double click also jumps to breakpoints)
- vecxi: added options to rotate display in 90° steps
- vecxi: added in config a new combo box next to the "vectrex generation" to chose the "delay variant"

BugFix:
- dissi: possible crash when watches were "open" and vecxi was closed
- all: a couple of size corrections in various windows
- vedi: sizing of split panel in vedi "corrected"
- vedi: vectorPanel, image is now in a scrollpane and can not "outsize" the dialog anymore
- all: some spelling corrections
- dumpi: possible crash in dumpy removed, where addresses could be negative
- vedi: scan and jump to include files in subdirectories were not processed correctly

25th of December 2016
---------------------
Version 1.10

new: 
- vecxi: Added another emulation to DS2430A "DS2430_READ_REGISTER", Alex Herberts original ProtectorLE reads values from
         the chip, that were "write once" only written to it by him. With the above DS2430A instruction those values can be read.
         (Edit of those internal values is possible in the "carti" window of dissi)
- carti: added some more internal registers to DS2431 window
- dissi: added "do not force iconify on run" as option
- raster: added "invert" button
- raster: for trial added some support for vertical lines
- raster: added mirror settings
- raster: added "fixed" for sizes
- dissi: add 2 complement to cli calculator
- vedi: add 2 complement to cli calculator
- vecxi shortcuts added (1->save, 2->load, b->toggle ringbuffer)
- dissi: windows which are already opened, pop to front if corresponding button is pressed in dissi
- Vedi: First VecFever support. Ejecting of USB devices for now only working under Win and Mac.
        I have no "native" linux system atm, and all experiments using emulators have not worked out well.
        Also I would love a way to eject the VecFever RAMDISK without a "sudo".  
        This is not a MAJOR hassel, Linux users must press one button more on the vectrex side - thats all!
 - config: LAF editor callable from config
 - dissi: added watches, watches can be defined in source "hey dissi "watch $someVariable 0|1|2|3|4|5,x""
          add via command line, add via popup
          remove via command line/popup
 - dumpi: memory locations can be directly edited in dumpi "table"
 - dissi hey dissi "print $var [8|16]" - accepts additional parameter to display 16 bit vars
 - vedi: immediate access to larger font selection
 - vedi: changed line numbering implementation 
 - vide: tried to "fix" vide to support larger font "lafs"
 - many: many windows support larger font sizes (and still look sort of ok'ish)
         To change windows to at least be workable with variable sized fonts was hard work, every
         window was edited multiple times to accomodate Mac and Windows (did not check Linux)
         While not all windows have been processed (some dissi panels were left out)
         Most seem to work, awaiting bug reports about which other windows should be done, or corrected)
- assi: output control files of assembled sources include "length" of data sections
- vec32: added maximum (200,000) of files in tree -> prevent Vec32 from stalling
- vedi: added example code generation in "Project" for eEprom2431
- codelib: added VecZ

BugFix:
- vecxi: Thomas discovered a bug in Vide, RTI instruction was falsely emulated, the CC register was 
         pulled after E-Flag check, should have been pulled before!
- vedi: TAB for indent was not working correctly -> fixed
- vedi: convenience added, CMD/F (or CTRL) now not only focuses the search textfield, but also selects the text
- vecxi: fixed bug where it was possible in vecxi that the integration variables (doubles) could 
         be NaN, once that was reached, no other value could be set, -> blank screen
- vecxi: shift register timing for modes with T2 timer were also only half the original -> corrected
- vedi: removed a bug where the syntax colorer, could be initiated twice - that was potentialy using to much CPU power
- vide: image cache is per default switched off, images might load slower, but the "standing" memory usage is reduced by
       about 200MB. Cache can be switched on in Application configuration though.
       This should get rid of most OOM situations, noe even with starter open, the memory imprint is about 16MB.
- vecxi: keyboard "O" for overlay switch, now also loads overlays if they weren't previously loaded

27th of November 2016
---------------------
Version 1.09

new: 
- vecci: added menu entry "switch orientation" for a selected vector
- vecci: split where needed with need edit value
- vecci: remove point (join two neighbouring vectors)
- tracki: added delete button
- tracki: added view to current cycle count (number based)
- tracki: now ignores "0" minimum values, also skips unrealistic high values in min/max/avg
- ym: three convenient buttons, to swap voices from one channel to another
- ym: added option to multiply an amplitude of a channel
- regi: added output of current running cycle count
- dissi: added breakpoint ability in write access to ROM (only from CLI in dissi)
- dissi: added to 'hey dissi "break"' an optional additional parameter 'once' -> 'hey dissi "break once"'
- assi: option to output unused (but defined) symbols to CNT file
- vecxi: added emulation of DS2431

BugFix:
- vecci: saving of vectorlist did not correctly respect double/single usage of vertex
         using seperate vertex with the same position resulted in a single vertex after load -> fixed
         (Vertex have now an ID tag in the xml - due to processing loading of xml files without id tag
          takes a bit longer)
- dissi: enlarging from iconified state sometimes did not update the table (== crooked display)
         -> possibly fixed 
- vecci: another bug fixed with vectorlist loaded, where different single vertex with the same coordinates
         were falsely connected after a load from file
- vecxi: corrected false state loading, where Keyboard 0 could be unset

14th of November 2016
---------------------
Version 1.08

BugFix:
- vecci: Bug where joining of vectors could lose some vectors 

14th of November 2016
---------------------
Version 1.07

new: 
- vecxi: added timing parameters for T1 and SHIFT - I am getting more and more unhappy with the current delay emulation features (see blog).
         With the current emulation NOT in all circumstances (the more timing critical the more inaccurate) the results are like the real machine!
- config: window is now scrollable
- vecxi: HotKey Buttons "P" Pause/Unpause and "O" Overlay on/off
- library: added/changed some documents

BugFix:
- vecci: removed <another> possible deadlock scenarion in vecci with the animation preview (Thread) - damn that is annoying 
- vecci: fixed another vectorlist clone bug (vecci), that prevented (upon other things) to do a correct preview in the monitor
- vecxi: "manual" setting of CB2 through the via control register is only possible if shift is not output to PB2, this
         was not correctly emulated before
- vecxi: changed drift emulation slightly
- vecxi: efficiency emulation is now switched on per default

18th of October 2016
--------------------
Version 1.06
new: 
- vedi: upon closing of an editor, the corresponding file in the tree gets unselected

BugFix:
- vecci: images converted to vector, had a bad "border", when only a partial image was used
- vecci: HLR z = -z
- vecci: fixed bug, where "join here" resulted in a "lost" vertex
- ym: fix to playing AYFX with disabled noise (was choppy) 
- ym: streaming detecting of voice usage was flawd (always using 0 as target)

14th of October 2016
--------------------
Version 1.05
new:
- vecx: psg emulation, changed internal data generation to 16 bit + oversampling
- vecx: sound "lines" now inherent to psg section, not vecx, this makes it 
        easier to update the output to the lines directly when psg registers change,
        should be more acurate 
- ym: added "import" of ym data lines (from ascii file)
- dissi: added an ym 'line' to ayi
- vecx: added all neccessary code to implement the LED of "BinaryStars" Xmas Cart 2015
        to actually see the emulation, you need a ROM dump of the card, the "free" version does
        not contain the corresponding code sections.
- dissi: added to "hey dissi" #reg to print registers, e.g.: hey dissi "print #a #b", also $intx and $inty
- ym: added asm vectrex player for "streamed" data, also enhanced coder,
      streamed coder now analyses ym data and only encodes needed data, player is configured
      to only decode needed data with "if" statements.
      The player is without doubt the fastest, but also the one that does not - NOT pack very well...
- vecci: added a button for an extra editor window, that window displays the standard "editor" and is resizable, so
      larger editor areas are now available
- vecci: settings are now persistent (grid and scale)
- vecci: added a small scroll button section, you can now "move" in the editor window
      sideways (displacement width = gridwidth)
- all: allow open of multiple instances of vedi/codi/vecci (shift menu entry)
- vecci: included settings for output, db/fcb, hex/dec

BugFix:
- vedi: the list of last opened files could get scrambled - fixed

3rd of October 2016
-------------------
Version 1.04
new:
 - dissi: added 2 complement to register tooltip in reggi
 - dissi: added enhanced tooltip to CC in reggi
 - ym: added "player" mode
 - ym: shift double click on column textfield, sets the value to the complete (register) column
 - allow of envelopes in YM-file generation (in general)

bugfixes:
 - vedi: <again> seemingly fixed a bug, where the coloror was disabled
 - ym: possible Nullpointer Exception fixed
 - corrected ym-file generation output to respect reg13 as 0xff if no changes happened
 - corrected ym player in respect to that as well (both on the java side in YMSound and asm player in generation (only the new one))
 - corrected PSG emulation to correctly emulate envelope generation
   (although someday I have to enhance sample rates, as it is it emulation sounds quite terrible!)

1st of October 2016
-------------------
Version 1.03
new:
 - tracki: now also shows the average of the current timings
 - ym: added a new mode to export, this one is the new preffered export "module"
       also did bugfixing
       "preprocessing" of ym files as options, default is off, whether it is worth switching these
       on depends on the ym files themself

bugfixes:
- vecci: the last fixes disabled most of the source exports, this had to be fixed :-)

27th of Septmber 2016
---------------------
Version 1.02
new:
- vec32: added a "utility" window to support editing/saving/running of Vectres32 (BASIC) programs
         including editor (+ syntax highlighting) and a terminal
- vecci: added support to import Wavefront OBJ files
- vecci: support for hidden line removal and definition of faces
- vecci: points can be selected (deselected) by clicking on the corresponding columns in the vectorlist table
- vecci: export status reflects order of vectorlists
- vecci: added export for vectorlists to BASIC (Draw_VL_Mode only)
- vecxi: added emulation for the phenomenon, that integration is possible during "zero enable",
         also added emulation that zeroing is not spontanous but a going down to zero over time
- ym: added support to export data to BASIC (uncompressed only, and only "all" registers)
- doc: documentation for most of the mentioned changes/enhancements
- template: updated vectorlist templates to handle vectorlists > 8bit (length)
- template: templates for BASIC YM-Play and vectorlist display

bugfixes:
- vecci: deadlock in animation fixed
- vecci: shortcut buttons "order", "split", "connect" do not produce garbage when called with "deformed" vectorlists
         (deformed here: vertice that are "relative"- used by more than two vectors)
- dissi: CNT files a bit more robust in respect to "SPACES"
- vedi: possibly solved another deadlock with syntax highlighting
- vedi: bug where line numbering was not updated after "pasting" 
- sound: added log output to TinySound
- vecx: checks that TinySound is initialized (befor null pointer exceptions were thrown)

7th of Septmber 2016
--------------------
Version 1.01
bugfixes:
- dissi: double click on address row for small 16bit addresses did not work as intended


6th of September 2016
---------------------
Vide version 1.0 release