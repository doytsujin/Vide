/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.malban.gui.dialogs;

import java.awt.Dimension;
import java.io.File;
import java.net.URL;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import javax.swing.text.Document;

/**
 *
 * @author malban
 */
public class QuickHelpTopFrame extends javax.swing.JFrame {

    static QuickHelpTopFrame frame=null;
    /**
     * Creates new form QuickHelpTopFrame
     */
    private QuickHelpTopFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();

        setAlwaysOnTop(true);

        jScrollPane1.setBorder(null);

        jEditorPane1.setBorder(null);
        jEditorPane1.setContentType("text/html"); // NOI18N
        jEditorPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jEditorPane1ComponentResized(evt);
            }
        });
        jScrollPane1.setViewportView(jEditorPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jEditorPane1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jEditorPane1ComponentResized
    }//GEN-LAST:event_jEditorPane1ComponentResized

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private static boolean ensureDialog()
    {
        if (frame!=null) return true;
        
        
        
        frame = new QuickHelpTopFrame();
        frame.setTitle("Help");

        // Size frame
        frame.setBounds(0,0, 500, 400);
        frame.setResizable(true);
        
        
        frame.jEditorPane1.setContentType("text/html");
        frame.jEditorPane1.setEditable(false);
        frame.jEditorPane1.addHyperlinkListener(new HyperlinkListener() 
        {
            @Override
            public void hyperlinkUpdate(HyperlinkEvent e) 
            {
                if(e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) 
                {
                    URL url = e.getURL();
                    try
                    {
                        frame.jEditorPane1.setPage(url);
                    }
                    catch (Throwable ex)
                    {
                        
                    }
                   // Do something with e.getURL() here
                }
            }
        });        
        return true;
    }
    
    public static void showHelpHtmlFile(String page)
    {
        if (!ensureDialog()) return;

        try
        {
            frame.jEditorPane1.setPage(page);
        }
        catch (Throwable e)
        {
            try
            {
                File file = new File (page);
                URL url = file.toURI().toURL();
                frame.jEditorPane1.setContentType("text/html");
                frame.jEditorPane1.setPage(url);
            }
            catch (Throwable ee)
            {
                frame.jEditorPane1.setContentType("text/plain");
                frame.jEditorPane1.setText("CanÂ´t display page:\n"+page);
            }
        }

        frame.setVisible(true);
    }
    public static void showHelpPNGFile(String imageName)
    {
        if (!ensureDialog()) return;

        try
        {
            URL url = new File(imageName).toURI().toURL();
            String help = "";
            help += "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"> ";
            help += "<html> <head>   ";
            help += "<title>Test </title> </head>";
            help += "<body>";
            help += "<img src=\""+url.toString()+"\"  />";
            help += "</body>";
            help += "</html>";
            de.malban.util.UtilityString.writeToTextFile(help, new File("tmp"+File.separator+"tmp.html"));

                File file = new File("tmp"+File.separator+"tmp.html");
                URL url2 = file.toURI().toURL();
                frame.jEditorPane1.setContentType("text/html");
Document doc = frame.jEditorPane1.getDocument();
doc.putProperty(Document.StreamDescriptionProperty, null);
                frame.jEditorPane1.setPage(url2);
/*            
            frame.jEditorPane1.setContentType("text/html");
            frame.jEditorPane1.setPage(help);
        */
        }
        catch (Throwable e)
        {
            e.printStackTrace();
        }

        frame.setVisible(true);
    }
}
