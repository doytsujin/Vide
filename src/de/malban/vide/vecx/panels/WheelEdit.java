/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.malban.vide.vecx.panels;

import de.malban.Global;
import de.malban.config.Configuration;
import de.malban.gui.components.ModalInternalFrame;
import de.malban.gui.panels.LogPanel;
import static de.malban.gui.panels.LogPanel.INFO;
import static de.malban.gui.panels.LogPanel.WARN;
import de.malban.vide.vecx.devices.WheelData;
import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;

/**
 *
 * @author malban
 */
public class WheelEdit extends javax.swing.JPanel {

    transient LogPanel log = (LogPanel) Configuration.getConfiguration().getDebugEntity();
    private int mClassSetting=0;
    boolean newFile = true;
    WheelData currentWheel = WheelData.createNewWheel();
    /**
     * Creates new form WheelEdit
     */
    public WheelEdit() {
        initComponents();
        initWheelList();
        loadSelectedWheel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField46 = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jSlider3 = new javax.swing.JSlider();
        imagerWheel1 = new de.malban.vide.vecx.devices.ImagerWheel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxWheelList = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jButtonNew1 = new javax.swing.JButton();
        jButtonColor1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel51.setText("sync hole");

        jSlider3.setMajorTickSpacing(10);
        jSlider3.setMaximum(360);
        jSlider3.setMinorTickSpacing(1);
        jSlider3.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider3.setPaintTicks(true);
        jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider3StateChanged(evt);
            }
        });

        javax.swing.GroupLayout imagerWheel1Layout = new javax.swing.GroupLayout(imagerWheel1);
        imagerWheel1.setLayout(imagerWheel1Layout);
        imagerWheel1Layout.setHorizontalGroup(
            imagerWheel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        imagerWheel1Layout.setVerticalGroup(
            imagerWheel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 250));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jScrollPane1.setViewportView(jPanel1);

        jLabel1.setText("Name");

        jLabel2.setText("Id");

        jLabel3.setText("default Frequency");

        jComboBoxWheelList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxWheelListActionPerformed(evt);
            }
        });

        jLabel4.setText("Name");

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/page_save.png"))); // NOI18N
        jButtonSave.setToolTipText("Save File (with shift - > save as)");
        jButtonSave.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonNew1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/new.png"))); // NOI18N
        jButtonNew1.setToolTipText("new Project");
        jButtonNew1.setMargin(new java.awt.Insets(0, 1, 0, -1));
        jButtonNew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNew1ActionPerformed(evt);
            }
        });

        jButtonColor1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/malban/vide/images/add.png"))); // NOI18N
        jButtonColor1.setToolTipText("add color");
        jButtonColor1.setMargin(new java.awt.Insets(0, 0, 0, -1));
        jButtonColor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonColor1ActionPerformed(evt);
            }
        });

        jButton1.setText("close");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel51))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButtonColor1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField46, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxWheelList, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonNew1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imagerWheel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel51)
                        .addGap(4, 4, 4)
                        .addComponent(jTextField46, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButtonColor1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxWheelList, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSave)
                            .addComponent(jButtonNew1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(imagerWheel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSlider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider3StateChanged
        if (currentWheel==null) return;
        if (mClassSetting == 0)
            currentWheel.indexAngle = jSlider3.getValue();
        jTextField46.setText(""+jSlider3.getValue());
        imagerWheel1.repaintWheel();
    }//GEN-LAST:event_jSlider3StateChanged

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        getFields();
        saveCurrentWheel();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jComboBoxWheelListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxWheelListActionPerformed
        if (mClassSetting>0) return;
        loadSelectedWheel();
        
    }//GEN-LAST:event_jComboBoxWheelListActionPerformed

    private void jButtonNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNew1ActionPerformed
        currentWheel = WheelData.createNewWheel();
        currentWheel.id = 3;
        currentWheel.name += "_clone";
        setAllFields();
        newFile = true;
    }//GEN-LAST:event_jButtonNew1ActionPerformed

    private void jButtonColor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonColor1ActionPerformed
        if (currentWheel == null) return;

        currentWheel.addSection(Color.YELLOW);
        OneWheelColorPanel owc = new OneWheelColorPanel(currentWheel, currentWheel.colors.length-1, this);
        owc.setBounds(0,0,59, 246);
        
        jPanel1.add(owc);
        invalidate();
        validate();
        repaint();
    }//GEN-LAST:event_jButtonColor1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.malban.vide.vecx.devices.ImagerWheel imagerWheel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonColor1;
    private javax.swing.JButton jButtonNew1;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox jComboBoxWheelList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField46;
    // End of variables declaration//GEN-END:variables

    void initWheelList()
    {
        mClassSetting++;
        String path = Global.mainPathPrefix+"xml"+File.separator+"wheels";
        ArrayList<String> files = de.malban.util.UtilityFiles.getXMLFileList(path);
        jComboBoxWheelList.removeAllItems();
        for (String name: files)
        {
            jComboBoxWheelList.addItem(de.malban.util.UtilityString.replace(name.toLowerCase(), ".xml", ""));
        }
        mClassSetting--;
    }
    void setAllFields()
    {
        mClassSetting++;
        imagerWheel1.setWheel(currentWheel);
        jSlider3.setValue((int)currentWheel.indexAngle);
        jTextField46.setText(""+(int)currentWheel.indexAngle);

        jTextField1.setText(currentWheel.name);
        jTextField2.setText(""+currentWheel.id);
        jTextField3.setText(""+String.format("%.4f", currentWheel.defaultFrequency));
        
        redoSections();
        mClassSetting--;
    }
        
    void loadSelectedWheel()
    {
        int i = jComboBoxWheelList.getSelectedIndex();
        if (i<0) 
        {
            log.addLog("No entry selected - can't load.", WARN);
            return;
        }
        String fname = jComboBoxWheelList.getSelectedItem().toString()+".xml";
        String path = Global.mainPathPrefix+"xml"+File.separator+"wheels"+File.separator+fname;
        WheelData loadedWheel = WheelData.loadWheel(path);
        if (loadedWheel==null) 
        {
            log.addLog("Wheel not loaded.", WARN);
            return;
        }
        currentWheel = loadedWheel;
        setAllFields();
        newFile = false;
        log.addLog("Wheel "+currentWheel.name+" loaded.", INFO);
    }
    void saveCurrentWheel()
    {
        if (currentWheel==null) 
        {
            log.addLog("No wheel - can't save.", WARN);
            return;
        }
        if (currentWheel.name.trim().length()==0) 
        {
            log.addLog("No wheel name - can't save.", WARN);
            return;
        }
        String fname = currentWheel.name.trim().toLowerCase()+".xml";
        String path = Global.mainPathPrefix+"xml"+File.separator+"wheels"+File.separator+fname;
        boolean ok = currentWheel.saveAsXML(path);
        if (!ok) 
        {
            log.addLog("Wheel not saved.", WARN);
            return;
        }
        
        correctComboAfterSave();
        newFile = false;
        log.addLog("Wheel "+currentWheel.name+" saved.", INFO);
    }
    void correctComboAfterSave()
    {
        if (!newFile) return;
        String currentName = de.malban.util.UtilityString.replace(currentWheel.name.toLowerCase(), ".xml", "");
        mClassSetting++;
        initWheelList();
        int index = -1;
        for (int i=0; i<jComboBoxWheelList.getItemCount(); i++)
        {
            if (currentName.equals(jComboBoxWheelList.getItemAt(i).toString()))
            {
                index = i;
                break;
            }
        }
        if (index >0)
        {
            jComboBoxWheelList.setSelectedIndex(index);
        }
        
        mClassSetting--;
    }
    JInternalFrame modelDialog;
    public static void showWheelEdit()
    {
        JFrame frame = Configuration.getConfiguration().getMainFrame();
        WheelEdit panel = new WheelEdit();
        
        ArrayList<JButton> eb= new ArrayList<JButton>();
        eb.add(panel.jButton1);
        ModalInternalFrame modal = new ModalInternalFrame("Wheel editor", frame.getRootPane(), frame, panel, null, null, eb);
        panel.modelDialog = modal;
        modal.setVisible(true);
        String result = modal.getNamedExit();
    }    

    void redoSections()
    {
        jPanel1.removeAll();
        // allways assuming first color is black!
        for (int i=1; i < currentWheel.startAngle.length; i++)
        {
            OneWheelColorPanel owc = new OneWheelColorPanel(currentWheel, i, this);
            
            owc.setBounds(0,0,59, 246);
            jPanel1.add(owc);
        }
        imagerWheel1.repaintWheel();
        invalidate();
        validate();
        repaint();
    }
    void updateSections()
    {
        for (Component comp:  jPanel1.getComponents())
        {
            if (comp instanceof OneWheelColorPanel)
            {
                OneWheelColorPanel owc = (OneWheelColorPanel) comp;
                owc.update();
            }
        }
        imagerWheel1.repaintWheel();
        invalidate();
        validate();
        repaint();
    }
    
    void colorChanged(int colorNo)
    {
        updateSections();        
    }
    void removeSection(int colorNo)
    {
        currentWheel.removeSection(colorNo);
        redoSections();
    }
    void getFields()
    {
        currentWheel.name = jTextField1.getText();
        currentWheel.id = de.malban.util.UtilityString.IntX(jTextField2.getText(), 3);
        currentWheel.indexAngle = jSlider3.getValue();
        currentWheel.defaultFrequency = de.malban.util.UtilityString.DoubleX(jTextField3.getText(), 26.1579);
        currentWheel.indexAngle = jSlider3.getValue();
    }
}
