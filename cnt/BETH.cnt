BANK 0
LABEL $F192 WAITRECAL
COMMENT_LABEL $F192 BIOS recalibration
LABEL $F2AB INTENSITY
COMMENT_LABEL $F2AB Beam brightness
LABEL $F37A PRINTSTR
COMMENT_LABEL $F37A String printing
LABEL $F354 RESET0REF
COMMENT_LABEL $F354 Beam to the center
LABEL $F2FC MOVEPEN
COMMENT_LABEL $F2FC Move beam
LABEL $F3B7 MOVEDRAW
COMMENT_LABEL $F3B7 Draw with beam
LABEL $C82A TXTHEIGHT
COMMENT_LABEL $C82A Fonttikorkeus
LABEL $C82B TXTWIDTH
COMMENT_LABEL $C82B Fonttileveys
LABEL $F1F8 JOYDIGITAL
COMMENT_LABEL $F1F8 Reads joystick positions
LABEL $C81F JOY1XENABLE
COMMENT_LABEL $C81F Enables joystick 1 X
LABEL $C820 JOY1YENABLE
COMMENT_LABEL $C820 Enables joystick 1 Y
LABEL $C821 JOY2XENABLE
COMMENT_LABEL $C821 Enables joystick 2 X
LABEL $C822 JOY2YENABLE
COMMENT_LABEL $C822 Enables joystick 2 Y
LABEL $C81B JOY1X
COMMENT_LABEL $C81B Joystick 1 left/right
LABEL $C81C JOY1Y
COMMENT_LABEL $C81C Joystick 1 up/down
LABEL $F1BA READBUTTONS
COMMENT_LABEL $F1BA Reads joystick buttons
LABEL $F8FF OBJHIT
COMMENT_LABEL $F8FF Checks object collision
LABEL $C881 alusx
COMMENT_LABEL $C881 Space ship x position
LABEL $C882 alusy
COMMENT_LABEL $C882 Space ship y position
LABEL $C883 bully
COMMENT_LABEL $C883 Bullet y position
LABEL $C884 bullx
COMMENT_LABEL $C884 Bullet x position
LABEL $C885 bulloop
LABEL $C886 fuelx
COMMENT_LABEL $C886 Fuel meter x position
LABEL $C887 fueloop
COMMENT_LABEL $C887 Loop needed to slow down
LABEL $C888 vihuy
COMMENT_LABEL $C888 Enemy y position
LABEL $C889 vihux
COMMENT_LABEL $C889 Enemy x position
LABEL $C88A vihuelo
COMMENT_LABEL $C88A Enemy dead or alive
LABEL $C88B vihuani
COMMENT_LABEL $C88B Frame of enemy animation
LABEL $C890 pojot
COMMENT_LABEL $C890 Score variable
LABEL $C892 pojotxt
COMMENT_LABEL $C892 Score as text, needs
LABEL $C897 aika
COMMENT_LABEL $C897 Time variable
LABEL $C898 aikatxt
COMMENT_LABEL $C898 Time as text, needs
LABEL $C89C aikaloop
COMMENT_LABEL $C89C Loop to slow the timer
LABEL $C89D lives
COMMENT_LABEL $C89D Number of lives
LABEL $0056 kohtu
LABEL $006F tikku
LABEL $041E alus
LABEL $00F7 vready
COMMENT_LABEL $00F7 Done moving the enemy
LABEL $00B8 frame2
LABEL $0528 vihu
LABEL $00D0 animohi
LABEL $054A vihu2
LABEL $00CB fuusix
LABEL $00DF vxiso
LABEL $00F2 vihuylos
LABEL $0105 esso
LABEL $013C fuelchecked
COMMENT_LABEL $013C All done with the fuel
LABEL $0128 tankkaus
LABEL $0121 nofuel
LABEL $0137 ffuel
LABEL $0145 fuellow
LABEL $016D nowarning
COMMENT_LABEL $016D Done with fuel warnings
LABEL $016A fuelout
LABEL $04E4 tekst6
LABEL $0570 offdeath
LABEL $0176 timelow
LABEL $01AF notwarn
COMMENT_LABEL $01AF All done with Time
LABEL $019B timeout
LABEL $04EE tekst7
LABEL $04F8 tekst8
LABEL $0442 reunat
LABEL $0454 city
LABEL $048E tekst3
LABEL $04BB tekst4
LABEL $0281 twolives
LABEL $050E lives3
LABEL $02B6 endlives
COMMENT_LABEL $02B6 Done with lives
LABEL $029A onelives
LABEL $0508 lives2
LABEL $02B3 nolives
LABEL $0502 lives1
LABEL $05AC gameover
LABEL $02CF aikatulostus
LABEL $02C8 nolla
LABEL $051E ftank
LABEL $0514 pati
LABEL $0334 butt1
LABEL $03B2 lovejoy
LABEL $034F bullet
LABEL $0384 killnmy
LABEL $03A4 missnmy
LABEL $03EA noxmove
LABEL $03D5 lmove
LABEL $03C0 rmove
LABEL $03CE xiso
LABEL $03EA xready
LABEL $03E3 xpieni
LABEL $041B noymove
LABEL $0406 dmove
LABEL $03F1 umove
LABEL $03FF yiso
LABEL $041B yready
LABEL $0414 ypieni
LABEL $05CD overtext
COMMENT_LINE $0000 #######################################
COMMENT_LINE $0000 ### Battle Earth Terror Hazard      ###
COMMENT_LINE $0000 ### Version 0.30 (not final!)       ###
COMMENT_LINE $0000 ### Last updated 24-07-2000	      ###
COMMENT_LINE $0000 ### From http://pkp.cjb.net/vec     ###
COMMENT_LINE $0000 ### Code & comments by man@sci.fi   ###
COMMENT_LINE $0000 ### Special thanks to marq@iki.fi   ###
COMMENT_LINE $0000 #######################################
COMMENT_LINE $0000 Public domain for all Vecfreaks as long
COMMENT_LINE $0000 as you don't publish this as your own,
COMMENT_LINE $0000 or use the unfinished game as a base for
COMMENT_LINE $0000 your game. Just let me finish this first,
COMMENT_LINE $0000 okay?
COMMENT_LINE $0000 ############################
COMMENT_LINE $0000 ### Needed BIOS routines ###
COMMENT_LINE $0000 ############################
COMMENT_LINE $0000 ######################
COMMENT_LINE $0000 ### Used variables ###
COMMENT_LINE $0000 ######################
COMMENT_LINE $0000 the fuel meter
COMMENT_LINE $0000 5 bytes of RAM.
COMMENT_LINE $0000 5 bytes of RAM.
COMMENT_LINE $0000 ### Here we go. ###
COMMENT $0000 All programs start from 0
COMMENT_LINE $0000 ################################
COMMENT_LINE $0000 ### The required init block. ###
COMMENT_LINE $0000 ### Changed a little bit to  ###
COMMENT_LINE $0000 ### display multiple rows of ###
COMMENT_LINE $0000 ### information and playing  ###
COMMENT_LINE $0000 ### a song stored in ROM.    ###
COMMENT_LINE $0000 ################################
COMMENT $000A All text ends with $80
COMMENT $000B Play song "$fe38" from ROM
COMMENT $000D Width, height, y, x
COMMENT $0037 Init block ends with $0
COMMENT_LINE $0039 ########################################################
COMMENT_LINE $0039 ### Okay, this sets up the joystick checks, and only ###
COMMENT_LINE $0039 ### allows them for joystick 1, thus saving us a few ###
COMMENT_LINE $0039 ### hundred cycles. Don't forget to = joystick 2   ###
COMMENT_LINE $0039 ### to 0, if you don't need it.                      ###
COMMENT_LINE $0039 ########################################################
COMMENT $0039 1 is the flag to enable
COMMENT $003B joystick 1 X
COMMENT $003E 3 is the flag to enable
COMMENT $0040 joystick 1 Y
COMMENT $0045 5 would enable this
COMMENT $0048 7 would enable this
COMMENT_LINE $004B ##############################################
COMMENT_LINE $004B ### Then setting some values to begin with ###
COMMENT_LINE $004B ##############################################
COMMENT $004E Set score to 0
COMMENT $0053 And lives to 3
COMMENT_LINE $0056 ###################################
COMMENT_LINE $0056 ### We return here after we die ###
COMMENT_LINE $0056 ### (nice to know, huh?)        ###
COMMENT_LINE $0056 ###################################
COMMENT $0056 Set the starting y-coordinate
COMMENT $0058 of the space ship to -100
COMMENT $005B Set the starting x-coordinate
COMMENT $005D of the fuel meter to -20
COMMENT $0060 Set the starting y-coordinate
COMMENT $0062 of enemy to 80
COMMENT $0065 Set the life state
COMMENT $0067 of enemy to 1
COMMENT $006C And time to 16
COMMENT_LINE $006F #################################
COMMENT_LINE $006F ### Here's the actual program ###
COMMENT_LINE $006F #################################
COMMENT $006F BIOS recalibration
COMMENT_LINE $0072 ### The space ship
COMMENT $0072 Beam to the center
COMMENT $0077 Sets intensity to 127
COMMENT $007A Y - coordinate
COMMENT $007D X - coordinate
COMMENT $0083 Drawing the space ship
COMMENT $0086 Number of vectors
COMMENT $0088 Scaling
COMMENT_LINE $008D ### The enemy
COMMENT $008D Is the enemy alive
COMMENT $0090 if not (lifestate=0)
COMMENT $0092 then skip drawing
COMMENT $0096 Beam to the center
COMMENT $0099 Y
COMMENT $009C X - coordinate
COMMENT $00A2 Enemy animation
COMMENT $00A5 Every time vihuani
COMMENT $00A8 grows to 10, jump
COMMENT $00AA to draw frame2.
COMMENT $00AC Drawing the enemy
COMMENT $00AF Number of vectors
COMMENT $00B1 Scaling
COMMENT $00B8 Drawing enemy frame2
COMMENT $00BB Number of vectors
COMMENT $00BD Scaling
COMMENT $00C2 Drawing frame2 until
COMMENT $00C5 vihuani is 20, then
COMMENT $00C7 jumping to fuusix
COMMENT $00C9 Otherwise continue
COMMENT $00CB Setting vihuani to 0
COMMENT_LINE $00D0 ###########################################
COMMENT_LINE $00D0 ### Here we move the enemy and          ###
COMMENT_LINE $00D0 ### check if it goes too 		  ###
COMMENT_LINE $00D0 ### much to the right or comes too low. ###
COMMENT_LINE $00D0 ### If it does, then we make it return  ###
COMMENT_LINE $00D0 ### to the left or/and up.  		  ###
COMMENT_LINE $00D0 ###########################################
COMMENT $00D0 Value of alusx to A
COMMENT $00D3 Compare A to 116
COMMENT $00D5 If it is >116 -> vxiso
COMMENT $00D7 Increase vihux
COMMENT $00DA Increase it again, I'm
COMMENT_LINE $00DD too lazy to make a loop
COMMENT_LINE $00DD for two times.
COMMENT_LINE $00DD (makes enemy go faster)
COMMENT $00DD Jump to vready
COMMENT $00DF Load 118 to A
COMMENT $00E1 Store A to alusx
COMMENT_LINE $00E4 (moves enemy to left edge)
COMMENT $00E4 Compare enemy Y
COMMENT $00E7 to 0.
COMMENT $00E9 If 0 -> vihuylos
COMMENT $00EB if not, make enemy
COMMENT $00ED go down more.
COMMENT $00F2 Move enemy up
COMMENT $00F4 Set vihuy to 80
COMMENT_LINE $00F7 #################################################
COMMENT_LINE $00F7 ### Next we mess with the fuel tank operation ###
COMMENT_LINE $00F7 ### making sure the 'meter' don't go too low  ###
COMMENT_LINE $00F7 ### or too high. Also making it go down if    ###
COMMENT_LINE $00F7 ### ship is in the air and go up if the ship  ###
COMMENT_LINE $00F7 ### is on the ground. 		        ###
COMMENT_LINE $00F7 #################################################
COMMENT $00F7 This loop makes
COMMENT $00FA sure that the fuel
COMMENT $00FD level goes down only
COMMENT $00FF every 5 cycles
COMMENT $0103 (goes too fast otherwise)
COMMENT $0107 Fueloop back to 0
COMMENT $010A If ship is on the ground
COMMENT $010D then jump to give more fuel
COMMENT $010F If alusy=-100 -> tankkaus
COMMENT_LINE $0113 If not then
COMMENT $0113 check if fuel tank
COMMENT $0116 is empty
COMMENT $0118 if yes -> nofuel
COMMENT $011C Ship is in the air
COMMENT_LINE $011F use fuel, minimum -80
COMMENT $0121 If fuel is gone
COMMENT $0123 don't let the meter
COMMENT $0126 go any lower
COMMENT_LINE $0128 Ship is landed,
COMMENT $0128 more fuel
COMMENT $012B more, more!!
COMMENT $0131 -21 is the maximum
COMMENT $0133 If tank full -> ffuel
COMMENT_LINE $0135 bgt = branch if greater
COMMENT $0137 If tank is full, don't
COMMENT $0139 let the meter go higher
COMMENT_LINE $013C #############################################
COMMENT_LINE $013C ### Fuel low and fuel out - warnings      ###
COMMENT_LINE $013C ### and what happens if the fuel runs out ###
COMMENT_LINE $013C #############################################
COMMENT $013C Check if the fuel
COMMENT $013F meter is at 'half full'
COMMENT $0141 if yes -> fuellow
COMMENT $0143 if not -> nowarning
COMMENT $0145 Beam to the center
COMMENT $014A Intensity to 80
COMMENT $014D Height
COMMENT $014F Width
COMMENT $0157 Check if fuel is out
COMMENT $015A If fuel is out
COMMENT $015C jump to -> fuelout
COMMENT $015E Y
COMMENT $0160 X
COMMENT $0162 "FUEL LOW!"
COMMENT $016A Fuel out -> offdeath
COMMENT_LINE $016D ### Time low - warning
COMMENT $016D Load aika to A
COMMENT $0170 If time is less than 6
COMMENT $0172 then warn
COMMENT $0174 if not -> notwarn
COMMENT $0176 Beam to the center
COMMENT $017B Intensity to 80
COMMENT $017E Height
COMMENT $0180 Width
COMMENT $018B If time is 0
COMMENT $018D go to -> timeout
COMMENT $018F Y
COMMENT $0191 X
COMMENT $0193 "TIME LOW!"
COMMENT $019B Y
COMMENT $019D X
COMMENT $019F "TIME OUT!"
COMMENT $01A5 If time has run out
COMMENT $01A8 take one life and
COMMENT $01A9 jump back to "kohtu"
COMMENT_LINE $01AF Warner Company
COMMENT_LINE $01AF ###################################
COMMENT_LINE $01AF ### Let's draw a frame the area ###
COMMENT_LINE $01AF ### Don't know how the Vectrex  ###
COMMENT_LINE $01AF ### likes this, but looks much  ###
COMMENT_LINE $01AF ### nicer to me and serves a    ###
COMMENT_LINE $01AF ### purpose as well.		  ###
COMMENT_LINE $01AF ###################################
COMMENT $01AF Beam to the center
COMMENT $01B4 Intensity to 60
COMMENT $01B7 Y
COMMENT $01B9 X
COMMENT $01BE Drawing the edges
COMMENT $01C1 Vectors
COMMENT $01C3 Scaling
COMMENT_LINE $01C8 ##########################
COMMENT_LINE $01C8 ### And some landscape ###
COMMENT_LINE $01C8 ### Getting artistic   ###
COMMENT_LINE $01C8 ### here are we? 	 ###
COMMENT_LINE $01C8 ##########################
COMMENT $01C8 Beam to the center
COMMENT $01CD Intensity to 30
COMMENT $01D0 Y
COMMENT $01D2 X
COMMENT $01D7 Drawing the edges
COMMENT $01DA Vectors
COMMENT $01DC Scaling
COMMENT_LINE $01E1 ###################################
COMMENT_LINE $01E1 ### Name of the game to the top ###
COMMENT_LINE $01E1 ###################################
COMMENT $01E1 Beam to the center
COMMENT $01E6 Intensity to 100
COMMENT $01E9 Height
COMMENT $01EB Width
COMMENT $01F3 Y
COMMENT $01F5 X
COMMENT $01F7 read the text
COMMENT_LINE $01FD #########################################
COMMENT_LINE $01FD ### Displaying and handling the SCORE ###
COMMENT_LINE $01FD ### now I know there's a BIOS routine ###
COMMENT_LINE $01FD ### for this, and I'll probably       ###
COMMENT_LINE $01FD ### change it here sometime, but for  ###
COMMENT_LINE $01FD ### now, here's how it works. Marq    ###
COMMENT_LINE $01FD ### helped me a lot with this one.    ###
COMMENT_LINE $01FD #########################################
COMMENT $01FD Beam to the center
COMMENT $0202 Intensity to 100
COMMENT $0205 Height
COMMENT $0207 Width
COMMENT $020F Y
COMMENT $0211 X
COMMENT $0213 Get the text "FUEL SCORE"
COMMENT $021B Moves beam to 0,0
COMMENT_LINE $021E ######################################################
COMMENT_LINE $021E ### Converting the counter to a string 	            ###
COMMENT_LINE $021E ### located at 'pojotxt'		            ###
COMMENT_LINE $021E ### Okay, this is mostly done by Marq, so not much ###
COMMENT_LINE $021E ### commenting here yet. (Except in Finnish)       ###
COMMENT_LINE $021E ######################################################
COMMENT $021E Sanan ylempi tavu
COMMENT $0223 Tavun ylempi puolitavu
COMMENT $0227 numero+'0'=numero ASCIIna
COMMENT $022C Alempi puolitavu
COMMENT $0233 Sanan alempi tavu
COMMENT $0238 Tavun ylempi puolitavu
COMMENT $0241 Alempi puolitavu
COMMENT $0248 The end
COMMENT $024D Displaying the string
COMMENT_LINE $0259 ###############################################
COMMENT_LINE $0259 ### Ok, then we handle displaying the lives ###
COMMENT_LINE $0259 ### There's probably better ways for this   ###
COMMENT_LINE $0259 ### too, but here's how I solved it.	      ###
COMMENT_LINE $0259 ### One thing I learned with this : never   ###
COMMENT_LINE $0259 ### give label a name starting with a       ###
COMMENT_LINE $0259 ### number. Just wont work. At least not    ###
COMMENT_LINE $0259 ### with the assembler I'm using.           ###
COMMENT_LINE $0259 ###############################################
COMMENT $0259 Beam to the center
COMMENT $025E Intensity to 100
COMMENT $0261 Height
COMMENT $0263 Width
COMMENT $026B Check if the number
COMMENT $026E of lives is 3,
COMMENT $0270 if not -> twolives
COMMENT $0274 Y
COMMENT $0276 X
COMMENT $0278 3 lives
COMMENT $0281 Check if the number
COMMENT $0284 of lives is 2
COMMENT $0286 if not -> onelives
COMMENT $028A Beam to the center
COMMENT $028D Y
COMMENT $028F X
COMMENT $0291 2 lives
COMMENT $029A Check if the number
COMMENT $029D of lives is 1
COMMENT $029F if not -> nolives
COMMENT $02A3 Beam to the center
COMMENT $02A6 Y
COMMENT $02A8 X
COMMENT $02AA 1 lives
COMMENT $02B3 No lives -> gameover
COMMENT_LINE $02B6 ###############################
COMMENT_LINE $02B6 ### Now handling the timer  ###
COMMENT_LINE $02B6 ### in the top right corner ###
COMMENT_LINE $02B6 ### again based on Marq's   ###
COMMENT_LINE $02B6 ### code, so not much       ###
COMMENT_LINE $02B6 ### commenting yet.	      ###
COMMENT_LINE $02B6 ###############################
COMMENT $02B6 Loop to make the timer
COMMENT $02B9 go down only on every
COMMENT $02BC 50th cycle.
COMMENT $02C5 BCD decreases like this
COMMENT_LINE $02CF ########################################
COMMENT_LINE $02CF ### Converting time variable to a    ###
COMMENT_LINE $02CF ### corresponding string. Just like  ###
COMMENT_LINE $02CF ### old times. (Like with the score) ###
COMMENT_LINE $02CF ########################################
COMMENT $02E4 Ends here
COMMENT $02E9 Displaying the time
COMMENT $02ED Height
COMMENT $02EF Width
COMMENT $02F7 Y
COMMENT $02F9 X
COMMENT_LINE $0301 ##############################
COMMENT_LINE $0301 ### Drawing the fuel meter ###
COMMENT_LINE $0301 ##############################
COMMENT $0301 Beam to the center
COMMENT $0306 Intensity to 30
COMMENT $0309 Y
COMMENT $030B X
COMMENT $0313 Vectors
COMMENT $0315 Scaling
COMMENT $031A Beam to the center
COMMENT $031F Intensity to 30
COMMENT $0322 Y
COMMENT $0324 X
COMMENT $032D Vectors
COMMENT $032F Scaling
COMMENT_LINE $0334 #########################
COMMENT_LINE $0334 ### Reads the buttons ###
COMMENT_LINE $0334 #########################
COMMENT $0337 Compares a to 0
COMMENT $0339 If it was 0 -> lovejoy
COMMENT_LINE $033D Otherwise
COMMENT $033D Tests for button 1
COMMENT $033F If it wasn't button 1
COMMENT_LINE $0343 If it was button 1 ->
COMMENT $0343 Load ship y position
COMMENT $0346 to bullet y position
COMMENT $0349 and ship x position
COMMENT $034C to bullet x position
COMMENT_LINE $034F So the bullet leaves
COMMENT_LINE $034F from the tip of the
COMMENT_LINE $034F ship.
COMMENT $034F Beam to the center
COMMENT $0354 Intensity to 127
COMMENT $0357 Y
COMMENT $035A X
COMMENT $0360 Drawing the bullet
COMMENT $0363 Vectors
COMMENT $0365 Scaling
COMMENT $036A Value of bully to A
COMMENT $036D Add bullet y with 5
COMMENT_LINE $0372 ################################################
COMMENT_LINE $0372 ### Trying to find out if enemy has been hit ###
COMMENT_LINE $0372 ### Gotta love that OBJHIT routine.	       ###
COMMENT_LINE $0372 ### Thanks to Marq for some useful tips.     ###
COMMENT_LINE $0372 ################################################
COMMENT $0372 loads both y and x to Y
COMMENT_LINE $0376 because they're stored in
COMMENT_LINE $0376 that order in the RAM
COMMENT $0376 loads both y and x to X
COMMENT $0379 enemy height/2
COMMENT $037B enemy width/2
COMMENT $0380 if hit -> killnmy
COMMENT $0382 if not -> missnmy
COMMENT $0384 Set the life status
COMMENT $0386 of enemy to 0
COMMENT $0389 Set the coordinates
COMMENT $038B of enemy out of
COMMENT $038E bullets reach, so
COMMENT $0390 you can't get more
COMMENT_LINE $0393 points by shooting
COMMENT_LINE $0393 at an empty spot.
COMMENT_LINE $0393 ##########################################
COMMENT_LINE $0393 ### Again by Marq. You know the drill. ###
COMMENT_LINE $0393 ### adding to the BCD-score counter    ###
COMMENT_LINE $0393 ### (max 9999) 			 ###
COMMENT_LINE $0393 ##########################################
COMMENT $0396 add 10 points
COMMENT_LINE $03A4 ######################################
COMMENT_LINE $03A4 ### If enemy was missed, draw more ###
COMMENT_LINE $03A4 ### bullets until enemy is hit or  ###
COMMENT_LINE $03A4 ### 10 bullets has been drawn.     ###
COMMENT_LINE $03A4 ### I think I might change the     ###
COMMENT_LINE $03A4 ### 'laser' later though. Would    ###
COMMENT_LINE $03A4 ### like to know how it looks like ###
COMMENT_LINE $03A4 ### on a real Vectrex.             ###
COMMENT_LINE $03A4 ######################################
COMMENT $03A4 Grow loop
COMMENT $03AA Has loop reached 10
COMMENT $03AC No, draw again
COMMENT $03AE Yes, set to 0
COMMENT_LINE $03B2 ##########################
COMMENT_LINE $03B2 ### Reads the joystick ###
COMMENT_LINE $03B2 ##########################
COMMENT $03B2 Reads joystick
COMMENT $03B5 Joy 1 X position to A
COMMENT $03B8 If 0 -> jump to noxmove
COMMENT $03BC If negative -> lmove
COMMENT_LINE $03C0 #################################################
COMMENT_LINE $03C0 ### If something else (positive)		###
COMMENT_LINE $03C0 ### the joystick has been moved right. Right. ###
COMMENT_LINE $03C0 ### Limiting the maximum x-value to 0 	###
COMMENT_LINE $03C0 #################################################
COMMENT $03C0 Value of alusx to A
COMMENT $03C3 Compare A to 118
COMMENT $03C5 If it is 118 -> xiso
COMMENT $03C9 Increase alusx
COMMENT $03CC Jump to xready
COMMENT $03CE Load 118 to A
COMMENT $03D0 Store A to alusx
COMMENT $03D3 Jump to xready
COMMENT_LINE $03D5 ############################################
COMMENT_LINE $03D5 ### Joystick has been moved left.	   ###
COMMENT_LINE $03D5 ### Limiting the minimum y-value to -118 ###
COMMENT_LINE $03D5 ############################################
COMMENT $03D5 Value of alusx to A
COMMENT $03D8 Compare A to -118
COMMENT $03DA If it is -118 -> xpieni
COMMENT $03DE Decrease alusx
COMMENT $03E1 Jump to xready
COMMENT $03E3 Load -118 to A
COMMENT $03E5 Store A to alusx
COMMENT $03E8 Jump to xready
COMMENT_LINE $03EA #################################################
COMMENT_LINE $03EA ### Joystick hasn't been moved left or right. ###
COMMENT_LINE $03EA ### Kept this here in case I need it later.   ###
COMMENT_LINE $03EA #################################################
COMMENT_LINE $03EA #############################################
COMMENT_LINE $03EA ### Done with checking if the joystick    ###
COMMENT_LINE $03EA ### was moved left or right, now checking ###
COMMENT_LINE $03EA ### if it was moved up or down.	    ###
COMMENT_LINE $03EA #############################################
COMMENT $03EA Joy 1 Y position to A
COMMENT $03ED If 0 -> jump to noymove
COMMENT $03EF If negative -> dmove
COMMENT_LINE $03F1 #########################################
COMMENT_LINE $03F1 ### If something else (positive)      ###
COMMENT_LINE $03F1 ### the joystick has been moved up.	###
COMMENT_LINE $03F1 ### Limiting the maximum y-value to 0 ###
COMMENT_LINE $03F1 #########################################
COMMENT $03F1 Value of alusy to A
COMMENT $03F4 Compare A to 0
COMMENT $03F6 If it is 0 -> yiso
COMMENT_LINE $03FA If it's not 0, then
COMMENT $03FA Increase alusy
COMMENT $03FD Jump to yready
COMMENT $03FF Load 126 to A
COMMENT $0401 Store A to alusy
COMMENT_LINE $0406 ############################################
COMMENT_LINE $0406 ### Joystick has been moved down.	   ###
COMMENT_LINE $0406 ### Limiting the minimum y-value to -100 ###
COMMENT_LINE $0406 ############################################
COMMENT $0406 Value of alusy to A
COMMENT $0409 Compare A to -100
COMMENT $040B If it is -100 -> ypieni
COMMENT $040F Decrease alusy
COMMENT $0412 Jump to yready
COMMENT $0414 Load -100 to A
COMMENT $0416 Store A to alusy
COMMENT $0419 Jump to yready
COMMENT_LINE $041B #################################################
COMMENT_LINE $041B ### When making the limits (ie. how far)      ###
COMMENT_LINE $041B ### the ship can go, you have to count in     ###
COMMENT_LINE $041B ### the size of the ship. Best way to do this ###
COMMENT_LINE $041B ### is to try it out. Ships 'hot spot' is     ###
COMMENT_LINE $041B ### where the first vector starts from.       ###
COMMENT_LINE $041B #################################################
COMMENT_LINE $041B ###############################################
COMMENT_LINE $041B ### Joystick hasn't been moved up or down.  ###
COMMENT_LINE $041B ### Kept this here in case I need it later. ###
COMMENT_LINE $041B ###############################################
COMMENT_LINE $041B ##################################################
COMMENT_LINE $041B ### Done with checking if the joystick has     ###
COMMENT_LINE $041B ### been moved up or down - so let's go        ###
COMMENT_LINE $041B ### back to the beginning and check all again. ###
COMMENT_LINE $041B ##################################################
COMMENT $041B Repeat
COMMENT_LINE $041E #################################################
COMMENT_LINE $041E ### You need LBRA, because BRA is too short a ###
COMMENT_LINE $041E ### jump to jump to the beginning all the way ###
COMMENT_LINE $041E ### from here.			        ###
COMMENT_LINE $041E #################################################
COMMENT_LINE $041E ################################################
COMMENT_LINE $041E ### Then all the coordinates that are needed ###
COMMENT_LINE $041E ################################################
COMMENT $041E Tip of the ship
COMMENT_LINE $0420 also the 'hot spot'
COMMENT $0442 The frames
COMMENT $0454 Landscape
COMMENT $0514 Bullet
COMMENT $051E Fuel tank
COMMENT $0528 Enemy
COMMENT $052A frame #1
COMMENT $054A Enemy
COMMENT $054C frame #2
COMMENT_LINE $0570 ###########################
COMMENT_LINE $0570 ### Reason for death :  ###
COMMENT_LINE $0570 ### You ran out of fuel ###
COMMENT_LINE $0570 ### (Now that's a nasty ###
COMMENT_LINE $0570 ### way to go.)         ###
COMMENT_LINE $0570 ###########################
COMMENT $0570 If fuel runs out
COMMENT $0573 take one life and
COMMENT $0574 display the text
COMMENT $0577 BIOS recalibration
COMMENT $057A Beam to the center
COMMENT $057F Intensity to 127
COMMENT $0582 Height
COMMENT $0584 Width
COMMENT $058C Y
COMMENT $058E X
COMMENT $0590 Get the text
COMMENT $0596 Keep looping it
COMMENT_LINE $0598 Ok then I need to get it delay that for a while
COMMENT_LINE $0598 after which it should jump to :
COMMENT_LINE $0598 lbra	kohtu		; "kohtu"
COMMENT_LINE $05AC ###############################
COMMENT_LINE $05AC ### A very simple Game Over ###
COMMENT_LINE $05AC ### screen for now.         ###
COMMENT_LINE $05AC ###############################
COMMENT $05AC BIOS recalibration
COMMENT $05AF Beam to the center
COMMENT $05B4 Intensity to 127
COMMENT $05B7 Height
COMMENT $05B9 Width
COMMENT $05C1 Y
COMMENT $05C3 X
COMMENT $05C5 Get the text
COMMENT $05CB Keep looping it
COMMENT_LINE $05D7 ##################################
COMMENT_LINE $05D7 ### Th-th-th-that's all folks! ###
COMMENT_LINE $05D7 ##################################
COMMENT_LINE $05D7 ### Makes me feel proud when   ###
COMMENT_LINE $05D7 ### I add this to the end :    ###
COMMENT_LINE $05D7 ##################################
COMMENT_LINE $05D7 ###   (c) man@sci.fi 2000	 ###
COMMENT_LINE $05D7 ##################################
RANGE $0000-$05D4 DP $D0
RANGE $0000-$0002 DB_DATA
RANGE $0002-$000A CHAR_DATA
RANGE $000A-$000B DB_DATA
RANGE $000B-$000D DW_DATA
RANGE $000D-$0011 DB_DATA
RANGE $0011-$0017 CHAR_DATA
RANGE $0017-$001C DB_DATA
RANGE $001C-$0021 CHAR_DATA
RANGE $0021-$0026 DB_DATA
RANGE $0026-$002C CHAR_DATA
RANGE $002C-$0031 DB_DATA
RANGE $0031-$0037 CHAR_DATA
RANGE $0037-$0039 DB_DATA
RANGE $0039-$0280 CODE
RANGE $0281-$0299 CODE
RANGE $029A-$02B2 CODE
RANGE $02B3-$041E CODE
RANGE $041E-$048E DB_DATA
RANGE $048E-$04BA CHAR_DATA
RANGE $04BA-$04BB DB_DATA
RANGE $04BB-$04E3 CHAR_DATA
RANGE $04E3-$04E4 DB_DATA
RANGE $04E4-$04ED CHAR_DATA
RANGE $04ED-$04EE DB_DATA
RANGE $04EE-$04F7 CHAR_DATA
RANGE $04F7-$04F8 DB_DATA
RANGE $04F8-$0501 CHAR_DATA
RANGE $0501-$0502 DB_DATA
RANGE $0502-$0507 CHAR_DATA
RANGE $0507-$0508 DB_DATA
RANGE $0508-$050D CHAR_DATA
RANGE $050D-$050E DB_DATA
RANGE $050E-$0513 CHAR_DATA
RANGE $0513-$0570 DB_DATA
RANGE $0570-$0598 CODE
RANGE $0598-$05AB CHAR_DATA
RANGE $05AB-$05AC DB_DATA
RANGE $05AC-$05CD CODE
RANGE $05CD-$05D6 CHAR_DATA
RANGE $05D6-$05D7 DB_DATA

