:title ongoing - Bankswitching

- Bankswitching is handled in class Cartridge (triggered by emulation)
- cartridge can hold an arbitrary number of banks

- dissy memory is now loaded via cartridge (after vecxi has been initialized), that is new!

- dissy adds itself to cartridge as a listener and reacts to bankswitched

- the Memory (dissi/dasm) class has been updated to handle banks too, MemoryInformation is still held seperately from cartridge
- in Memory ALL memory data is switched upon a bankswitch, even ROM data
- that enables us e.g. to have different label names systemwide (mainly interesting for ram locations)
- breakpoints have now a field "bank" and should be banks considered, meaning setting a breakpoint for address 1000 on bank 0 should not trigger a breakpoint at address 1000 while in bank 1 (not tested)

- development wise I must still consider the options of building seperate bin files and concat, or in one go or or or
- done: generate dissy: dasm output
- done: generate dissy: CNT out
- not done: reading lst, cnt for banks >0
- not done: actually compiling without manual interference of multi banks
- done: consequently building information for different banks

:h2 Bankswitch Scheme 1 (Dondzila)
- Only 2 banks available
- switch is implemented by high/low of VIA ORB PB6
- switching is usually done by setting the corresponding DDR register to input (PB6 goes high automatically) or output (PB6 goes low automatically)
- vectrex default state is PB6 = INPUT
- PB6 high enables BANK 1
- PB6 low enables BANK 0
- therefor the default vectrex bank upon startup is BANK 1!

Here John Dondzilas original rec.games.vectrex post (29.10.1999):
:div code
**EXTRA ! EXTRA ! READ ALL ABOUT IT - PCJOHN AND ANOTHER VECTREX FIRST \!\!\!** ~~ ~~
Thanks to Peter Pachla's suggestion, I spent the last 2 nights working on~~
the software selectable mini bankswitch cart and I'm pleased to announce:~~
~~
SUCCESS \!\!\!~~
~~
Hardware wise is really easy, just wire the PB6 line (pin 35) to the~~
high address line (A15) on the 64K EPROM.~~
~~
The software end was a little trickier, the 6522 info I have and the actual~~
execution of the thing don't work quite the same ...~~
~~
Basically, if you set the PB6 line to INPUT, it seems to automatically go~~
high. If you set it to OUTPUT, it goes low. You can send a high bit in the~~
output mode, but it will only pulse once, then reset to low. This could be~~
useful for larger carts, but I need the 2 banks to stay steady right now without~~
re-writing all 8 programs. I'm not sure if my manual is wrong or the Vec does~~
this, either way - it works. Now I just need to test it on some more machines~~
before I implement it into the final package.~~
~~
Looks like emulator users will be getting Volume I and Volume II~~
seperate binaries.~~
~~
JD~~
~~
 
:/div

Emulator:
- if a bin file is 32k < Size <= 64K, Vide assumes this bankswitch scheme

:h2 Bankswitch Scheme 2 (VecFlash)
- 64 banks available
- switch is implemented again by use of high/low of VIA ORB PB6
- switching is usually done by setting the corresponding DDR register to input (PB6 goes high automatically) or output (PB6 goes low automatically)
- switch routine in general works this way:
+ first time when PB6 (external line from cartridge point of view) is set to high from low (after a LONG time... (>2000 cycles?) bank is resetted to 0
+ if another switch from high to low occurs within a short (but not too short) time (about 1500 cycles) bank is increased by one
+ so to reach "higher" banks we have to loop thru all lower banks...
- the routine which does the bankswitching must not reside in flash memory, thus the actual switching routine must run in RAM-memory!

As long as not another PB6 using external device is emulated, VecFlash is detected automatically (this may change when EPROM RAM is implemented)

