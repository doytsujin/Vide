BANK 0
EQU $00 
LABEL $C800 REG0
LABEL $C801 REG1
LABEL $C802 REG2
LABEL $C803 REG3
LABEL $C804 REG4
LABEL $C805 REG5
LABEL $C806 REG6
LABEL $C807 REG7
LABEL $C808 REG8
LABEL $C809 REG9
LABEL $C80A REGA
LABEL $C80B REGB
LABEL $C80C REGC
LABEL $C80D REGD
LABEL $C80E REGE
LABEL $C80F TRIGGR
LABEL $C811 HEDGES
LABEL $C812 KEY0
LABEL $C813 KEY1
LABEL $C814 KEY2
LABEL $C815 KEY3
LABEL $C816 KEY4
LABEL $C817 KEY5
LABEL $C818 KEY6
LABEL $C819 KEY7
LABEL $C81A POTRES
LABEL $C81B POT0
LABEL $C81C POT1
LABEL $C81D POT2
LABEL $C81E POT3
LABEL $C81F DPOT0
LABEL $C820 DPOT1
LABEL $C821 DPOT2
LABEL $C822 DPOT3
LABEL $C823 LIST_
LABEL $C824 ZGO
LABEL $C825 FRAME
LABEL $C827 TENSTY
LABEL $C828 DWELL
LABEL $C829 DASH
LABEL $C82A SIZRAS
LABEL $C82C MESAGE
LABEL $C82E X0
LABEL $C82F X1
LABEL $C830 X2
LABEL $C831 X3
LABEL $C832 X4
LABEL $C833 X5
LABEL $C834 ABSY
LABEL $C835 ABSX
LABEL $C836 ANGLE
LABEL $C837 SINE
LABEL $C839 COSINE
LABEL $C83B LEG
LABEL $C83C LAG
LABEL $C83D XMSEC
LABEL $3075 MSEC20
COMMENT_LABEL $3075 LO BYTE, HI
LABEL $7C92 MSEC25
LABEL $C8AF MSEC30
LABEL $C83F REQ0
LABEL $C840 REQ1
LABEL $C841 REQ2
LABEL $C842 REQ3
LABEL $C843 REQ4
LABEL $C844 REQ5
LABEL $C845 REQ6
LABEL $C846 REQ7
LABEL $C847 REQ8
LABEL $C848 QEQ9
LABEL $C849 REQA
LABEL $C84A REQB
LABEL $C84B REQC
LABEL $C84C REQD
LABEL $C847 CHCF
COMMENT_LABEL $C847 CHANNEL C FREQUENCY
LABEL $C849 CHBF
LABEL $C84B CHAF
LABEL $C846 NOISEF
COMMENT_LABEL $C846 NOISE FREQ
LABEL $C840 ENVELF
COMMENT_LABEL $C840 ENVELOPE FREQ
LABEL $C842 CHCV
COMMENT_LABEL $C842 CHANNEL C VOLUME
LABEL $C843 CHBV
LABEL $C844 CHAV
LABEL $C845 SENABL
COMMENT_LABEL $C845 SOUND ENABLE
LABEL $C84D DOREMI
LABEL $C84F FADE
LABEL $C851 VIBE
LABEL $C853 TUNE
LABEL $C855 NEWGEN
LABEL $C856 TSTAT
LABEL $C857 RESTC
LABEL $C858 RATEA
LABEL $C859 VIBA
LABEL $C85A RATEB
LABEL $C85B VIBB
LABEL $C85C RATEC
LABEL $C85D VIBC
LABEL $C85E FADEA
LABEL $C85F FADEB
LABEL $C860 FADEC
LABEL $C861 TONEA
LABEL $C863 TONEB
LABEL $C865 TONEC
LABEL $C867 SATUS
LABEL $C868 LATUS
LABEL $C869 XATUS
LABEL $C86A GAP
LABEL $C86B B1FREQ
LABEL $C86D B2FREQ
LABEL $C86F F1FREQ
LABEL $C871 FEAST
LABEL $C872 PEDGE
LABEL $C873 NEDGE
LABEL $C874 K1FREQ
LABEL $C876 BACON
LABEL $C877 XACON
LABEL $C878 SPEKT
LABEL $C879 PLAYRZ
LABEL $C87A GAMZ
LABEL $C87B SEED
LABEL $C87D RANCID
LABEL $C880 LASRAM
LABEL $CA00 RAMMES
LABEL $CBEA STACK
LABEL $CBEB HEIGH
LABEL $CBF2 ISWI2
LABEL $CBF5 IFIRQ
LABEL $CBF8 IIRQ
LABEL $CBFB ISWI
LABEL $CBFE JRES
LABEL $D000 BPORT
LABEL $D001 APORT
LABEL $D002 BPORTD
LABEL $D003 APORTD
LABEL $D004 T1LOLC
LABEL $D005 T1HOC
LABEL $D006 T1LOL
LABEL $D007 T1HOL
LABEL $D008 T2LOLC
LABEL $D009 T2HOC
LABEL $D00A SR
LABEL $D00B ACR
LABEL $D00C PPCR
LABEL $D00D IFR
LABEL $D00E IER
LABEL $D00F ORAIRA
LABEL $D001 DAC
COMMENT_LABEL $D001 FOR HUMAN INTERFACE
LABEL $D000 PORT
COMMENT_LABEL $D000 MAIN CONTROL PORT
LABEL $00CC ZERO
COMMENT_LABEL $00CC CODE TO PCR ZERO INTEGRATORS
LABEL $00CE UNZERO
COMMENT_LABEL $00CE CORE FOR RELEASE HOLD ZERO
EQU $7F SCAL1X
COMMENT_LABEL $7F TIMING PARAMETERS FOR VECTOR WRITE
LABEL $00FF SCAL2X
EQU $00 CARTS
COMMENT_LABEL $00 ADDRESS OF EXTERNAL ROM PACK
LABEL $F000 ROMS
COMMENT_LABEL $F000 ADDRESS OF ON-BOARD ROM
LABEL $E000 INHOUS
LABEL $F000 POWER
LABEL $F004 WARM
LABEL $F14C INITPIA
LABEL $F164 INITMSC
LABEL $F18B INITALL
LABEL $F192 FRAM20
LABEL $F1A2 STAR20
LABEL $F1AA DPIO
LABEL $F1AF DPRAM
LABEL $F1B4 ENPUT
LABEL $F1BA INPUT
LABEL $F1F5 POTS4
LABEL $F1F8 PBANG4
LABEL $F256 PSGX
LABEL $F259 PSG
LABEL $F272 INITPSG
LABEL $F27D PSGLUP
LABEL $F282 PSGULP
LABEL $F284 PSGLPU
LABEL $F289 REQOUT
LABEL $F29D INT1Q
LABEL $F2A1 INTMID
LABEL $F2A5 INT3Q
LABEL $F2A9 INTMAX
LABEL $F2AB INTENS
LABEL $F2BE DOTTIM
LABEL $F2C1 DOTX
LABEL $F2C3 DOTAB
LABEL $F2C5 DOT
LABEL $F2D5 DIFDOT
LABEL $F2DE DOTPAK
LABEL $F2F2 POSWID
LABEL $F2FC POSITD
LABEL $F30C POSIT1
LABEL $F30E POSITB
LABEL $F310 POSITX
LABEL $F312 POSITN
LABEL $F34A ZERO_DP
LABEL $F34F ZEGO
LABEL $F354 ZEROIT
LABEL $F35B ZEREF
LABEL $F36B ZERO_
LABEL $F373 SIZPRAS
LABEL $F378 POSNRAS
LABEL $F37A POSDRAS
LABEL $F385 TEXSIZ
LABEL $F38C TEXPOS
LABEL $F391 SHIPSAT
LABEL $F393 SHIPSHO
LABEL $F3AD DUFFAX
LABEL $F3B1 DUFTIM
LABEL $F3B5 DUFFX
LABEL $F3B7 DUFTLS
LABEL $F3B9 DUFLST
LABEL $F3BC DUFFY
LABEL $F3BE DUFFAB
LABEL $F3D2 DIFTIM
LABEL $F3D6 DIFFX
LABEL $F3D8 DIFTLS
LABEL $F3DA DIFLST
LABEL $F3DD DIFFY
LABEL $F3DF DIFFAB
LABEL $F404 PAC2X
LABEL $F408 PAC1X
LABEL $F40C PACXX
LABEL $F40E PACB
LABEL $F410 PACKET
LABEL $F434 DASHEL
LABEL $F437 DASHY
LABEL $F46E DASHY3
LABEL $F495 RASTUR
LABEL $F498 RASTER
LABEL $F49B RASCII
LABEL $F511 RAND3
LABEL $F517 RANDOM
LABEL $F533 IREQ
LABEL $F53F CLRSOM
LABEL $F542 CLRMEM
LABEL $F545 CLR256
LABEL $F548 GILL
LABEL $F550 NEGSOM
LABEL $F552 FILL
LABEL $F55A DEKR3
LABEL $F55E DEKR
LABEL $F56D DEL38
LABEL $F571 DEL33
LABEL $F575 DEL28
LABEL $F579 DEL20
LABEL $F57D DEL13
LABEL $F57E BITE
LABEL $F584 ABSVAL
LABEL $F593 COMPAS
LABEL $F5D9 COSGET
LABEL $F5DB SINGET
LABEL $F5EF SINCOS
LABEL $F5FF RATOR
LABEL $F601 ROTOR
LABEL $F603 ROTAR
LABEL $F610 DANROT
LABEL $F613 DISROT
LABEL $F61F POTATA
LABEL $F622 POTATE
LABEL $F65B RSINA
LABEL $F65D RSIN
LABEL $F661 RCOSA
LABEL $F663 RCOS
LABEL $F67F BAGAUX
LABEL $F683 STFAUX
LABEL $F687 REPLAY
LABEL $F68D SPLAY
LABEL $F690 SOPLAY
LABEL $F692 YOPLAY
LABEL $F742 XPLAY
LABEL $F7A9 OPTION
LABEL $F835 SHOWY
LABEL $F84F SCLR
LABEL $F85E SHADD
LABEL $F87C SADD
LABEL $F8E5 OFF1BOX
LABEL $F8F3 OFF2BOX
LABEL $F8FF FINDBOX
LABEL $F92E AXE
LABEL $FF9F NIBBY
LABEL $F9F4 ASCII
LABEL $FD0D VCTRX
LABEL $00CF UZEROX
COMMENT_LABEL $00CF UNZERO
LABEL $00CD ZEROX
COMMENT_LABEL $00CD ZEROIT
EQU $28 DISPAR
COMMENT_LABEL $28 DISPARITY TIMER
LABEL $0080 MAXBOX
COMMENT_LABEL $0080 MAXIMUM BOX SIZE
EQU $3F SHPTIM
COMMENT_LABEL $3F TIMER FOR SHIP
EQU $6F MAXTUN
COMMENT_LABEL $6F MAXIMUM TUNNEL SIZE
EQU $7F TUNSIZ
COMMENT_LABEL $7F TIMER DISTANCE BETWEEN BOXES
EQU $1C SECOND
COMMENT_LABEL $1C BASE TIMER 37 MS
EQU $60 DBASE
COMMENT_LABEL $60 DISPARITY BASE
EQU $40 PLUG
COMMENT_LABEL $40 MASK FOR PLUG DIRECTION BIT
EQU $07 ENABLE
COMMENT_LABEL $07 ENABLE REGISTER ADDRESS
LABEL $F25B OUTPUT
COMMENT_LABEL $F25B RUM OUTPUT ROUTINE, MINUS MIRRORED RAM
LABEL $0080 EXPSND
COMMENT_LABEL $0080 EXPLOSION SOUND
EQU $20 BULSND
COMMENT_LABEL $20 BULLET FIRE
EQU $40 FALSND
COMMENT_LABEL $40 FALLING SOUND
EQU $10 FULSND
COMMENT_LABEL $10 GET FUEL SOUND
EQU $08 WALSND
COMMENT_LABEL $08 PASS WALL SOUND
EQU $04 GUYSND
COMMENT_LABEL $04 ENEMY SOUND
EQU $02 BELSND
COMMENT_LABEL $02 BELL WARNING
EQU $01 BAKSND
COMMENT_LABEL $01 BACKGROUND SOUND
EQU $00 SPRXY
COMMENT_LABEL $00 SPRITE XY
EQU $02 SPRDIS
COMMENT_LABEL $02 SPRITE DISPARITY
EQU $03 SPRTIM
COMMENT_LABEL $03 SPRITE TIME
EQU $05 SPRZOM
COMMENT_LABEL $05 SPRITE ZOOM
EQU $07 SPRCOL
COMMENT_LABEL $07 SPRITE COLOR
EQU $08 SPRINT
COMMENT_LABEL $08 SPRITE INTENSITY
EQU $09 SPRPTR
COMMENT_LABEL $09 POINTER TO SPRITE ICON
EQU $0D SPRXX
EQU $0F SPRYY
EQU $11 SPRXXV
EQU $13 SPRYYV
EQU $15 SPRXXW
EQU $17 SPRYYW
EQU $19 SPRMX
EQU $1A SPRMY
EQU $1B SPRTUN
EQU $1C SPRTXY
EQU $1E SPREXP
COMMENT_LABEL $1E EXPLOSION FLAG
EQU $1F SPRXTM
COMMENT_LABEL $1F EXPLOSION TIME
EQU $20 SPRDRW
EQU $22 SPREND
EQU $01 CBLUE
EQU $02 CGREEN
EQU $03 CRED
LABEL $C880 EXTRA
LABEL $C881 TRKSPD
LABEL $C882 ZOMSPD
LABEL $C883 MAXWALL
LABEL $C884 TUNSPD
LABEL $C885 MAXKILL
LABEL $C886 SCRADD
LABEL $C888 HITMAN
LABEL $C889 JNKFLG
LABEL $C88A MANTYP
LABEL $C88C GUYVX
LABEL $C88E GUYVY
LABEL $C890 PEMP0
LABEL $C891 PEMP1
LABEL $C892 PEMP2
LABEL $C893 PEMP3
LABEL $C894 PEMP4
LABEL $C895 PEMP5
LABEL $C896 PEMP6
LABEL $C897 PEMP7
LABEL $C898 PEMP8
LABEL $C899 PEMP9
LABEL $C89A SNDWRD
LABEL $C89B CHAN
LABEL $C89C MASK
LABEL $C89D NUSND
LABEL $C89E SNDGO
LABEL $C89F SNDMAB
LABEL $C8A0 NOSEFR
LABEL $C8A1 EXPLOS
LABEL $C8A2 RANGE
LABEL $C8A3 HITSID
LABEL $C8A4 RIGHT
LABEL $C8A5 TUNPTR
LABEL $C8A7 NEWTUN
LABEL $C8A9 NXTSTA
LABEL $C8AB OPTIME
LABEL $C8AD BOXFLG
LABEL $C8AE FULPICK
LABEL $C8AF NUMKILL
LABEL $C8B0 TUNDONE
LABEL $C8B1 WALDONE
LABEL $C8B2 NUMWALL
LABEL $C8B3 WALLTYP
LABEL $C8B4 WALCOL
LABEL $C8B5 VARTIM
LABEL $C8B7 EXPDONE
LABEL $C8B8 HITSHIP
LABEL $C8B9 JUNKSP
LABEL $C8BA JUNKHIT
LABEL $C8BB LEVEL
LABEL $C8BC SHPRAS
LABEL $C8C2 SHPNUM
LABEL $C8C4 SCORE
LABEL $C8CB ENDGAM
LABEL $C8CC ZOOM
LABEL $C8D5 SPRTAB
LABEL $CA6D SPRTAX
LABEL $CA71 SPRTPTR
LABEL $CA73 CURTAB
LABEL $CA75 FUEL
LABEL $CA78 DELFUEL
LABEL $CA7B NOFUEL
LABEL $CA7C ONFUEL
LABEL $CA7D LSTEDG
LABEL $CA7F UNTILL
LABEL $CA81 TEMP
LABEL $CA83 ZMSTRT
LABEL $CA84 ONROTS
LABEL $CA88 SMPLCN
LABEL $CA89 DUNFLG
LABEL $CA8A MOT_PW
LABEL $CA8E SNDRAM
LABEL $CAAE FIRRAM
LABEL $CABA OUTRAM
LABEL $0020 START
LABEL $0820 NEWGAM
LABEL $0263 MOTOR
LABEL $006D UP2SPD
LABEL $00C7 PSGIN
LABEL $0081 UP35
LABEL $0093 UP4
LABEL $00B0 UP5
LABEL $00B5 UP6
LABEL $00E7 MAIN
LABEL $00EA SCENE
LABEL $0565 TEST
LABEL $0345 ZEROO
LABEL $0130 SC3
LABEL $0138 QUIET
LABEL $0BE6 SOUND
LABEL $0148 PENB
LABEL $014A PENB1
LABEL $015F PENB2
LABEL $016C ANIM
LABEL $0178 PENTIM
LABEL $017A PENT1
LABEL $018E PENT2
LABEL $019B PENT4
LABEL $01AE DOTTIE
LABEL $01B0 DOTTI1
LABEL $01C4 DOTTI2
LABEL $01D5 DRAW
LABEL $01DC DRAWZ
LABEL $0203 DR2
LABEL $01F5 DR1
LABEL $0215 DR3
LABEL $022A DR4
LABEL $022F DR5
LABEL $0244 CKMOTOR
LABEL $024A CKMOT2
LABEL $024F CKMOT4
LABEL $0278 MOT_2
LABEL $0284 MOT_66
LABEL $0286 MOT_3
LABEL $02F4 MOT_65
LABEL $02AE MOT_6
LABEL $02A6 MOT_53
LABEL $02D3 MOT_64
LABEL $02CB MOT_62
LABEL $02E5 MOT_61
LABEL $02F5 MOT_9
LABEL $030F DRWBOX
LABEL $0316 DRWBB2
LABEL $032E DRWB_2
LABEL $033D DRWB_4
LABEL $0350 WALL
LABEL $0B89 TUN9
LABEL $0355 TRAW
LABEL $037C TR2
LABEL $036E TR1
LABEL $038E TR3
LABEL $03A3 TTR4
LABEL $03A9 TR5
LABEL $03BE WALL_9
LABEL $03D7 WALL_2
LABEL $03E1 DRWSPR
LABEL $03FE DRWS_2
LABEL $0404 DRWS_4
LABEL $041C DRWS_6
LABEL $044B DRWZ_6
LABEL $0B74 FOOL
LABEL $0447 DRWZ_2
LABEL $045E DRWS_8
LABEL $0460 DRWS_9
LABEL $046D L_BLUE
LABEL $0684 IOBJTAB
LABEL $0473 L_BLU2
LABEL $065E GETOBJ
LABEL $047C L_BLU4
LABEL $0481 L_GREEN
LABEL $0484 L_GRE2
LABEL $0496 L_GRE4
LABEL $049B LIBROM
LABEL $0935 DRWGRP
LABEL $0E34 LIBBOX
LABEL $0E1D LIBPOX
LABEL $049F L_RED
LABEL $04A2 L_RED2
LABEL $04AB L_RED4
LABEL $04B0 R_BLUE
LABEL $04B6 R_BLU2
LABEL $04BF R_BLU4
LABEL $04C4 R_GREEN
LABEL $04C7 R_GRE2
LABEL $04D6 R_GRE4
LABEL $04DB RIBROM
LABEL $0DE3 RIBBOX
LABEL $0E06 RIBPOX
LABEL $04DF R_RED
LABEL $04E2 R_RED2
LABEL $04EB R_RED4
LABEL $04F0 PASTER
LABEL $04FA TOFWDP
LABEL $050C GOFWDP
LABEL $051F PECOD_
LABEL $051B PECOD
LABEL $0523 POLINE
LABEL $055E POMESS
LABEL $053F PELRAS
LABEL $0BDA SECFUN
LABEL $0BCC SECTIM
LABEL $0570 TEST_1
LABEL $0575 TEST_2
LABEL $058A ZOOMBK
LABEL $0597 ZOOM_2
LABEL $05F4 EXPON
LABEL $064E MATCH
LABEL $05A3 ZOOMLV
LABEL $05CC ZOLL_2
LABEL $05BB ZOML_2
LABEL $05C9 ZOML_4
LABEL $05E2 ZOLL_4
LABEL $05F0 ZOLL_6
LABEL $05FD EXPO_2
LABEL $0619 NEXPON
LABEL $061E NXPO_2
LABEL $064B NEXP4
EQU $68 MKEY
COMMENT_LABEL $68 _38 FRACTIONAL
LABEL $066A GETO_2
LABEL $0670 GETO_4
LABEL $067F GETO_6
LABEL $068B MOVSHP
LABEL $06A9 MOVS_4
LABEL $06A0 MOVS_2
LABEL $06AA INTSHP
LABEL $06D6 INTJNK
LABEL $C95D JNKTAB
LABEL $06EB INTJJK
LABEL $070B INTGUY
LABEL $C97F MEMSPR
LABEL $0747 MOVMEN
LABEL $079E MOVME2
LABEL $0893 SHOOT
LABEL $0761 MIVMIM
LABEL $0783 JKLP
LABEL $078E JJKLP
LABEL $07C6 MOVME4
LABEL $07D4 MOVME6
LABEL $07EE MOVMI6
LABEL $07E7 MOVMI2
LABEL $0960 COLBUL
LABEL $0800 MOVME8
LABEL $0961 COLSHP
LABEL $07FB MOVME7
LABEL $083A OPEN
LABEL $0926 CUBOPEN
LABEL $084D OPWAIT
LABEL $0875 OPWA2
LABEL $085B OPBOX
LABEL $0876 TUNUP
LABEL $0892 TUNUP2
LABEL $089A LEVBOX
LABEL $08BF LEVB_X
LABEL $0B3D INTTUN
LABEL $0A7E TUNNEL
LABEL $08C0 TUNTUN
LABEL $0962 COLWALL
LABEL $08EA TUNT2
LABEL $091F TITS
LABEL $0907 TUNA2
LABEL $0904 PUMA2
LABEL $0913 TINA9
LABEL $0916 TUNA3
LABEL $091E TUNT4
LABEL $0934 ISHPNUM
LABEL $093B BARF23
LABEL $0946 DRWG_1
LABEL $0955 DRWG_2
LABEL $0952 DRWGG1
LABEL $095F DFUEL
LABEL $C8F7 TUNSPR
LABEL $0965 COLW_1
LABEL $096B COLW_2
LABEL $0976 COLW_4
LABEL $098B COLZ_2
LABEL $098E COLZ_4
LABEL $09A3 COLZ_6
LABEL $09CB COLQ_2
LABEL $09B9 COLZ_7
LABEL $09C4 COLZ_8
LABEL $0BA2 BBOX
LABEL $09EE DOLQ_2
LABEL $09DF COLQ_4
LABEL $09EB COLQ_6
LABEL $09FA DOLQ_4
LABEL $0A06 DOLQ_6
LABEL $0A09 GETWALL
LABEL $0A5E WALTAB
LABEL $0A2A GETWA2
LABEL $0A41 GETWA4
LABEL $0A3D GETWA3
LABEL $0BB7 SMBOX
LABEL $0A4C GETWA6
LABEL $0A5B KOLTAB
LABEL $0AFC MOV_ON
LABEL $0AED DUNN_2
LABEL $0AF3 DUNM_3
LABEL $0AFC DUNN_4
LABEL $0B22 NIVER
LABEL $0B32 MIVER
LABEL $0B54 INTT_2
LABEL $0B71 INTTUX
LABEL $0C3A SNDSUB
LABEL $0BFF LOOP
LABEL $0C27 NOTHIZ
LABEL $0C13 NOWSND
LABEL $0C21 GOING
LABEL $0C2F DUNN
LABEL $0DAE BANGS
LABEL $0CD6 FULOUT
LABEL $0C7E FIRSND
LABEL $0D1F FEULIN
LABEL $0D42 PASTRU
LABEL $0D69 INCOME
LABEL $0C72 KLAXON
LABEL $0D55 BAKGND
LABEL $0D82 STUVIT
LABEL $0CA0 PRESET
LABEL $0DDF FIRTBL
LABEL $0CBF SWP_DN
LABEL $0DA6 SHUTIT
LABEL $0CC7 SWPDN0
LABEL $0CCD SWPDN1
LABEL $0D07 QRESET
LABEL $0D0F NOMOGO
LABEL $0D3E FUELI1
LABEL $0D77 INCOM1
LABEL $0DD9 NABLE
LABEL $0DA5 BBOTH
LABEL $0DB6 SGNAB
LABEL $0DD1 BANGTYP
LABEL $0E57 *
EQU $00 *xfer
COMMENT_LINE $0000 can be assembled correctly now
COMMENT_LINE $0000 compatibilty added by Malban
COMMENT_LINE $0000 (and removed a small display bug)
COMMENT_LINE $0000 assenmble with comand line:
COMMENT_LINE $0000 .\ass\as09.exe -w200 -h0 -l -mcti sledge.asm >error
COMMENT_LINE $0000 used the 6809 assembler:
COMMENT_LINE $0000 as09 [1.11].
COMMENT_LINE $0000 Copyright 1990-1994, Frank A. Vorstenbosch, Kingswood Software.
COMMENT_LINE $0000 Available at:
COMMENT_LINE $0000 http://www.falstaff.demon.co.uk/cross.html
COMMENT_LINE $0000 *      This is a kludge/experimental 3D hack resembling the view
COMMENT_LINE $0000 while riding a roller coaster.
COMMENT_LINE $0000 Again I don't recall whether I typed this in by hand or
COMMENT_LINE $0000 it was e-mailed to me.
COMMENT_LINE $0000 **** EQUATES FROM MONITOR FOLLOW
COMMENT $0000 RAM
COMMENT $C800 MIRROR SOUND CHIP REGS FINE TUNE -A- 8 BIT
COMMENT $C801 COARSE TUNE -A- 4 BIT
COMMENT $C802 FINE TUNE -B- 8 BIT
COMMENT $C803 COARSE TUNE -B- 4 BIT
COMMENT $C804 FINE TUNE -C-
COMMENT $C805 COARSE TUNE -C-
COMMENT $C806 NOISE PER, 5 BIT
COMMENT $C807 ENABLE BAR- IN BAR/OUT: IOA,IOB
COMMENT_LINE $C808 ; NOISE BAR: C,B,A TONE BAR: C,B,A
COMMENT $C808 AMPL -A-, 4 BIT , 5TH BIT OVERRIDE IF=1
COMMENT $C809 AMPLITUDE -B-  " "
COMMENT $C80A AMPL -C-
COMMENT $C80B FINE TUNE ENVELOPE PER, 8 BITS
COMMENT $C80C COARSE TUNE ENVELOPE PER, 8 BIT
COMMENT $C80D ENVELOPE TYPE, 4 BIT- CONT,ATT,ALT,HOLD
COMMENT $C80E PORT A I/O
COMMENT $C80F BUTTONS INPUT TO PSG- NEW, LAST
COMMENT $C811 POS EDGE, 1 BIT PER BUTTON
COMMENT $C812 POS EDGE, 1 BYTE PER BUTTON, POS LOG
COMMENT $C81A ACCURACY REQ'D FOR POT READ, LESS IS FASTER
COMMENT_LINE $C81B ; $40=1 BIT,$20=2 BITS,$01=7 BITS,$00=8 BITS
COMMENT $C81B VALUE READ FROM POTS
COMMENT $C81F DELTA FROM LAST TEST
COMMENT $C823 # OF VECTORS IN PRESENT CHART
COMMENT $C824 IF NONZERO, CAUSES 'ZEROIT' CALL AFTER VECTOR ROUTINES
COMMENT $C825 INCRS EVERY TIME FRAM20 OR FRAM30 CALLED
COMMENT $C827 WAST INSTENITY WEVEL
COMMENT $C828 DOT DWELL TIME, SET IN INITMSC OR AFTER
COMMENT $C829 PATTERN FOR DASHED VECTORS
COMMENT $C82A FOR RASTER - CONTROLS SLEW RATE
COMMENT_LINE $C82C ; SIZE,SIZE+1=Y RATE,X RATE
COMMENT $C82C START OF STRING
COMMENT $C82F INTERVAL TIMERS
COMMENT $C830 COUNT DOWN TO 0 PER FRAME IF 'DEKR' CALLED
COMMENT $C834 FOR COMPAS ROUTINE
COMMENT $C835 "
COMMENT $C836 "
COMMENT $C837 VALUE,OVERFLOW
COMMENT $C83D REFRESH VALUE, INITMSC SETS TO MSEC20
COMMENT_LINE $C83F - - - - - REGS FOR TUNE PLAYING AND SOUND EFFECTS - - - - -
COMMENT $C83F ENVELOPE TYPE - FOR REQOUT ROUTINE
COMMENT $C840 TUNE ENVELOPE- MSB (INVERTED ORDER OF REG0-D)
COMMENT $C841 "    "       LSB
COMMENT $C842 LEVEL- C
COMMENT $C843 LEVEL- B
COMMENT $C844 LEVEL- A
COMMENT $C845 ENABLES- TONES / NOISE / I-O
COMMENT $C846 TUNE NOISE- 5 BIT
COMMENT $C847 TUNE C- MSB
COMMENT $C848 "   "  LSB
COMMENT $C849 TUNE B- MSB
COMMENT $C84A "   "  LSB
COMMENT $C84B TUNE A- MSB
COMMENT $C84C "  "  LSB
COMMENT $C84D BASE TABLE 2OR NOTES USUALLY=NOTES
COMMENT $C84F FOR TUNE PLAYER USE
COMMENT $C85A VIBRATO
COMMENT $C861 FREQ BEFORE VIBE
COMMENT_LINE $C867 - - - - - REGS FOR SOUND EFFECTS - - - - -
COMMENT $C867 GAME-SOUNDS INTERFACE
COMMENT $C868 LAST 'SATUS' VALUE
COMMENT $C869 ", EXPLOSION TYPE
COMMENT $C86A TIMES HOLD IN BACKGROUND SOUND
COMMENT $C871 FIRING STATE COUNTER
COMMENT $C872 POSITIVE EDGE OF 'SATUS'
COMMENT $C873 NEGATIVE EDGE OF 'SATUS'
COMMENT $C874 BACKGROUND FREQ 1
COMMENT $C876 " SEQUENCER
COMMENT $C877 EXPLO SEQ
COMMENT $C878 EXPL SPECTR
COMMENT $C879 # PLAYERS IN GAME
COMMENT $C87A GAME # OPTION
COMMENT $C87B POINTER TO 3 BYTE RANDOM #, USUALLY IS RANCID
COMMENT $CBEB TITLE PAGE HIGH SCORE
COMMENT_LINE $CBF2 INMI    DS      0
COMMENT_LINE $CBF2 ISWI3   DS      0
COMMENT_LINE $CC00 ORG     $D000   I/O
COMMENT_LINE $CC00 BPORT   RMB     1
COMMENT_LINE $CC00 APORT   RMB     1
COMMENT_LINE $CC00 BPORTD  RMB     1
COMMENT_LINE $CC00 APORTD  RMB     1
COMMENT_LINE $CC00 T1LOLC  RMB     1
COMMENT_LINE $CC00 T1HOC   RMB     1
COMMENT_LINE $CC00 T1LOL   RMB     1
COMMENT_LINE $CC00 T1HOL   RMB     1
COMMENT_LINE $CC00 T2LOLC  RMB     1
COMMENT_LINE $CC00 T2HOC   RMB     1
COMMENT_LINE $CC00 SR      RMB     1
COMMENT_LINE $CC00 ACR     RMB     1
COMMENT_LINE $CC00 PPCR    RMB     1
COMMENT_LINE $CC00 IFR     RMB     1
COMMENT_LINE $CC00 IER     RMB     1
COMMENT_LINE $CC00 ORAIRA  RMB     1
COMMENT_LINE $CC00 **** EQUATES FROM MONITOR PRECEDE
COMMENT_LINE $CC00 ****   FOLLOWING ARE THE MONITOR ENTRY POINTS
COMMENT_LINE $CC00 ****   PRECEDING WHERE THE MONITOR ENTRY POINTS
COMMENT_LINE $CC00 ****   OTHER STUFF FROM MONITOR
COMMENT_LINE $CC00 ****   PRECEDING WAS OTHER MONITOR STUFF
COMMENT_LINE $CC00 **********
COMMENT_LINE $CC00 *
COMMENT_LINE $CC00 * SOUND EQUATES
COMMENT_LINE $CC00 *
COMMENT_LINE $CC00 **********
COMMENT_LINE $CC00 3D SPRITE RAM TABLE
COMMENT_LINE $CC00 ; MOTION PARAMETERS FOR SPRITES
COMMENT_LINE $CC00 ; PATH WIDTH  XLEFT,XRIGHT  YLEFT,YRIGHT
COMMENT_LINE $CC00 ; BODY SIZE
COMMENT_LINE $CC00 ; TUNNEL INFO (ANOTHER PATCH)
COMMENT_LINE $CC00 ; EXPLOSION JUNK
COMMENT_LINE $CC00 ; ROUTINE TO DRAW  WITH
COMMENT_LINE $CC00 ************
COMMENT_LINE $CC00 *
COMMENT_LINE $CC00 * RAM ALLOCATIONS  /WBH
COMMENT_LINE $CC00 *
COMMENT_LINE $CC00 ************
COMMENT $C885 MAXIMUM NUMBER TO KILL
COMMENT_LINE $C89A **********
COMMENT_LINE $C89A *
COMMENT_LINE $C89A * SOUND RAM
COMMENT_LINE $C89A *
COMMENT_LINE $C89A **********
COMMENT $C8A4 LEFT , RIGHT EYE FLAG
COMMENT $C8A5 POINTER TO NEXT TUNNEL
COMMENT $C8A9 THE END MUST BE NEAR
COMMENT $C8AB OPENING TIME
COMMENT $C8AD TO DISPLAY OR NOT
COMMENT $C8AF NUMBER OF ENEMY KILLED
COMMENT $C8B0 TUNNEL DONE FLAG
COMMENT $C8B1 WALL DONE ( DONT ENTER ANYMORE)
COMMENT $C8B2 NUMBER OF WALLS WE PASSED
COMMENT $C8B3 WALL TYPE FOR FUEL/WALL
COMMENT $C8B4 WALL COLOR
COMMENT $C8B5 VARIABLE TIMER FOR EXPLOD
COMMENT $C8B7 EXPLOSION FLAG
COMMENT $C8B8 SHIP HIT FLAG
COMMENT $C8B9 SPACE JUNK VELOCITY
COMMENT $C8BA SPACE JUNK HIT
COMMENT $C8BC SHIPS
COMMENT $C8C2 SHIP NUMBER + TERM
COMMENT $C8C4 SCORE
COMMENT $C8CB SET TO $FF WHEN ALL SHIPS SHOT
COMMENT $C8CC 3*3 ZOOM (DS 2) INTENSITY (DS 1)
COMMENT_LINE $C8D5 ***************
COMMENT_LINE $C8D5 *
COMMENT_LINE $C8D5 * THE INFAMOUS SPRITE TABLE HOLDING ALL THE KEYS TO THE AGES
COMMENT_LINE $C8D5 * SUCH AS COLOR POISITION SIZE ETC.
COMMENT_LINE $C8D5 * STICK IT ANYWHERE CHARLY
COMMENT_LINE $C8D5 *
COMMENT_LINE $C8D5 *****************
COMMENT $CA71 SPRITE TABLE POINTER
COMMENT $CA73 CURRENT SPRITE POINTER
COMMENT $CA75 FUEL LEVEL
COMMENT $CA83 ALLOWS N ZOOM STARTS
COMMENT $CA84 MOTOR-ON ROTATIONS COUNTERS
COMMENT_LINE $CA88 ; JUST(T-0),LAST(T-1),(T-2),(T-3)
COMMENT $CA88 MOTOR STATISTICS SAMPLE COUNTER
COMMENT $CA89 SET TO FF WHEN DRAWING IS STARTED
COMMENT_LINE $CA8A ; SET TO 00 IF DRAWING COMPLETED
COMMENT $CA8A MOTOR PULSE WIDTH IN TERMS OF A
COMMENT_LINE $CA8E ; DECREMENTING T2 TIMER VALUE
COMMENT_LINE $CA8E ;  0: ON ROTATION POWER PULSE WIDTH
COMMENT_LINE $CA8E ;  1: POWER PULSE WIDTH WORKING REGISTER
COMMENT_LINE $CA8E ;  2: OFF ROTATION POWER PULSE WDTH
COMMENT_LINE $CA8E ;  3: OFF ROT PWR PW LSB (2 IS MSB)
COMMENT $0000 INTERNAL ROM LINKAGE KEY
COMMENT $000B VECTREX OPENING DOT-DA-DEE MLDY
COMMENT $000D RASTER SIZE
COMMENT $000F TITLE POSITION
COMMENT $0011 GAME TITLE
FORCE_SYMBOL $0020 INITALL
FORCE_SYMBOL $0023 IREQ
FORCE_SYMBOL $0026 REQOUT
FORCE_SYMBOL $0029 DPOT2
FORCE_SYMBOL $002C DPOT3
FORCE_SYMBOL $002F NEWGAM
FORCE_SYMBOL $0032 NXTSTA
FORCE_SYMBOL $0035 SNDWRD
FORCE_SYMBOL $0038 SNDGO
FORCE_NO_SYMBOL $003B
COMMENT $003D SET UP EXPLOSION
FORCE_SYMBOL $003D EXPLOS
COMMENT $0040 LSB,MSB
FORCE_NO_SYMBOL $0040
COMMENT $0043 APPROX 37 MSEC ?
FORCE_SYMBOL $0043 XMSEC
COMMENT $0046 SETUP MINIMUM OFF ROTATION POWER
FORCE_NO_SYMBOL $0049
COMMENT $004C SETUP ONROTS JUST AND LAST COUNTER
FORCE_SYMBOL $004C ONROTS
COMMENT_LINE $004F ; CLEAR ONROTS AND MAKE LAST ALL ON
COMMENT $004F START SAMPLE COUNTER (08)
FORCE_SYMBOL $004F SMPLCN
COMMENT $0052 SETUP WIDE ON ROT PWR PULSE WIDTH
FORCE_SYMBOL $0052 MOT_PW
COMMENT $0055 IN RUNNING TEMP TOO
FORCE_NO_SYMBOL $0058
COMMENT $005B JUMP CODE (7E) AS PART OF 3 BYTE
FORCE_SYMBOL $005B IIRQ
COMMENT_LINE $005E ; VECTOR LINKAGE INSTRUCTION
COMMENT $005E SET (8), CA1 (2) IN THE PIA AS
FORCE_SYMBOL $005E IER
COMMENT_LINE $0060 ; THE IRQ INTERRUPT SOURCE
COMMENT $0060 LOCATION OF MOTOR INTERRUPT ROUTINE
FORCE_SYMBOL $0060 MOTOR
COMMENT $0063 REST OF 3 BYTE INTERRUPT RAM LINK
COMMENT $0066 SETUP CA1 POSITIVE EDGE
FORCE_NO_SYMBOL $0066
COMMENT $0068 TO PRODUCE CA1 IRQ INTERRUPT FLAG
FORCE_SYMBOL $0068 PPCR
COMMENT_LINE $006A ; IN FIRST INTERRUPT ROTATION AFTER
COMMENT_LINE $006A ; UPSPD
FORCE_SYMBOL $006A PEMP0
COMMENT $006D SPIN UP WHEEL
FORCE_SYMBOL $006D XMSEC
COMMENT $0070 SET WHEEL DURATION TIMER
FORCE_SYMBOL $0070 T2LOLC
COMMENT $0072 GET CURRENT SETTING
FORCE_SYMBOL $0072 REQ6
COMMENT_LINE $0075 ANDB    #.NOT.PLUG      ; SELECT INPUT
COMMENT $0075 SELECT INPUT
COMMENT $0077 ADDRESS OF ENABLE BITS
FORCE_SYMBOL $0077 ENABLE
COMMENT $0079 WRITE TO PSG
FORCE_SYMBOL $0079 OUTPUT
COMMENT $007C GET 1ST VALUE
COMMENT $007E LAST EDGE
FORCE_SYMBOL $007E LSTEDG
COMMENT $0081 FIND OUT CURRENT SETTING
FORCE_SYMBOL $0081 REQ6
COMMENT $0084 SELECT OUTPUT
FORCE_SYMBOL $0084 PLUG
COMMENT $0086 ADDRESS FOR ENABLES
FORCE_SYMBOL $0086 ENABLE
COMMENT $0088 SEND IT OUT TO PSG
FORCE_SYMBOL $0088 OUTPUT
FORCE_NO_SYMBOL $008B
FORCE_SYMBOL $008E PSGX
FORCE_NO_SYMBOL $0091
COMMENT $0093 TILL B PW OVER
FORCE_NO_SYMBOL $0096
FORCE_SYMBOL $0099 PSGX
COMMENT $009C GET CURRENT SETTING
FORCE_SYMBOL $009C REQ6
COMMENT_LINE $009F ANDB    #.NOT.PLUG      ; SELECT INPUT
COMMENT $009F SELECT INPUT
COMMENT $00A1 ADDRESS OF ENABLE BITS
FORCE_SYMBOL $00A1 ENABLE
COMMENT $00A3 WRITE TO PSG
FORCE_SYMBOL $00A3 OUTPUT
FORCE_SYMBOL $00A8 LSTEDG
COMMENT $00AD SEE IFF OFF
FORCE_SYMBOL $00B0 LSTEDG
FORCE_SYMBOL $00B5 IFR
FORCE_NO_SYMBOL $00B7
COMMENT $00B9 NOT UP TO SPEED
COMMENT_LINE $00BB SEE IF ENUF TIMES
COMMENT_LINE $00BB MUST BE FAST 3 TIMES
FORCE_SYMBOL $00BB PEMP0
FORCE_SYMBOL $00BE PEMP0
FORCE_NO_SYMBOL $00C1
FORCE_NO_SYMBOL $00C7
FORCE_SYMBOL $00C9 APORT
FORCE_NO_SYMBOL $00CB
FORCE_SYMBOL $00CE BPORT
FORCE_SYMBOL $00D1 BPORT
FORCE_SYMBOL $00D3 APORTD
FORCE_NO_SYMBOL $00D5
FORCE_SYMBOL $00D8 BPORT
FORCE_SYMBOL $00DB APORT
FORCE_SYMBOL $00DE BPORT
FORCE_NO_SYMBOL $00E0
FORCE_SYMBOL $00E2 APORTD
FORCE_NO_SYMBOL $00E4
COMMENT_LINE $00E7 *
COMMENT_LINE $00E7 *START OF MAIN LOOP--ALSO CARRIED OUT THRU TEST  /WBH
COMMENT_LINE $00E7 *
FORCE_SYMBOL $00E7 STAR20
COMMENT_LINE $00EA SET TIMER
FORCE_SYMBOL $00EA XMSEC
FORCE_SYMBOL $00ED T2LOLC
COMMENT $00EF GET CURRENT SETTING
FORCE_SYMBOL $00EF REQ6
COMMENT_LINE $00F2 ANDB    #.NOT.PLUG      ; SELECT INPUT
COMMENT $00F2 SELECT INPUT
COMMENT $00F4 ADDRESS OF ENABLE BITS
FORCE_SYMBOL $00F4 ENABLE
COMMENT $00F6 WRITE TO PSG
FORCE_SYMBOL $00F6 OUTPUT
FORCE_SYMBOL $00F9 INPUT
COMMENT $00FC FIND OUT CURRENT SETTING
FORCE_SYMBOL $00FC REQ6
COMMENT $00FF SELECT OUTPUT
FORCE_SYMBOL $00FF PLUG
COMMENT $0101 ADDRESS FOR ENABLES
FORCE_SYMBOL $0101 ENABLE
COMMENT $0103 SEND IT OUT TO PSG
FORCE_SYMBOL $0103 OUTPUT
FORCE_NO_SYMBOL $0106
FORCE_SYMBOL $0109 PSGX
FORCE_NO_SYMBOL $010C
COMMENT $010F SCENE NOT DRAWN (STARTED)(FF)
FORCE_SYMBOL $010F DUNFLG
COMMENT $0112 CLEAR CAI INTERRUPT FLAG (02)
FORCE_SYMBOL $0112 IFR
COMMENT $0114 ENABLE 6809 IRQ RECEPTION
FORCE_NO_SYMBOL $0114
FORCE_SYMBOL $0116 FRAME
FORCE_NO_SYMBOL $0119
FORCE_SYMBOL $011C FRAME
FORCE_SYMBOL $011F TEST
FORCE_SYMBOL $0122 LIST_
FORCE_SYMBOL $0125 PBANG4
FORCE_SYMBOL $0128 ZEROO
FORCE_SYMBOL $012B ZEREF
COMMENT $012E WHEEL VELOCITY JITTER WINDOW TIME
FORCE_NO_SYMBOL $012E
COMMENT $0131 PAD TIME TO AVOID LINE DROPPING
COMMENT $0133 SCENE GOT COMPLETELY DRAWN (NO IRQ)
FORCE_SYMBOL $0133 DUNFLG
FORCE_NO_SYMBOL $0136
COMMENT_LINE $0138 ***************
COMMENT_LINE $0138 *
COMMENT_LINE $0138 * QUIET
COMMENT_LINE $0138 * DO THE SOUND
COMMENT_LINE $0138 *************
COMMENT_LINE $0138 DO THE SOUNDS
FORCE_SYMBOL $0138 REQOUT
FORCE_SYMBOL $013B TSTAT
FORCE_SYMBOL $013E DPRAM
FORCE_SYMBOL $0141 SOUND
FORCE_SYMBOL $0144 DPIO
COMMENT_LINE $0148 *************
COMMENT_LINE $0148 *
COMMENT_LINE $0148 * PENB
COMMENT_LINE $0148 *
COMMENT_LINE $0148 * MORE DELAY ON THE LINES
COMMENT_LINE $0148 *
COMMENT_LINE $0148 ************
FORCE_SYMBOL $0148 T1LOLC
FORCE_NO_SYMBOL $014A
FORCE_SYMBOL $014C DAC
FORCE_SYMBOL $014E PORT
FORCE_NO_SYMBOL $0150
FORCE_NO_SYMBOL $0152
FORCE_SYMBOL $0154 PORT
FORCE_SYMBOL $0156 DAC
FORCE_SYMBOL $0158 SR
FORCE_SYMBOL $015A T1HOC
FORCE_NO_SYMBOL $015C
FORCE_SYMBOL $015F IFR
FORCE_SYMBOL $0165 SR
FORCE_NO_SYMBOL $0167
COMMENT_LINE $016C ************
COMMENT_LINE $016C *
COMMENT_LINE $016C * ANIM
COMMENT_LINE $016C *
COMMENT_LINE $016C * DRAW THE GROUP OF PACKETS 4 FRAME ANIMATION
COMMENT_LINE $016C * REG X POINTS TO ANIM TABLE
COMMENT_LINE $016C * PACKET POINTS TO 4 ADDRESS USE FRAME COUNTER TO ADDRESS PACKET
COMMENT_LINE $016C *
COMMENT_LINE $016C ************
COMMENT $0170 : DIVIDE BY *
FORCE_NO_SYMBOL $0171
COMMENT $0173 MULT BY 2
COMMENT $0174 GET ADDRESS
COMMENT_LINE $0178 *************
COMMENT_LINE $0178 *
COMMENT_LINE $0178 * PENTIM
COMMENT_LINE $0178 *
COMMENT_LINE $0178 * USES A VARIABLE TIMER ( VARTIM ) TO EXPAND LINES WITH $02
COMMENT_LINE $0178 *
COMMENT_LINE $0178 ************
COMMENT $017A GET BASE TIMER
FORCE_NO_SYMBOL $017A
FORCE_SYMBOL $017C T1LOLC
FORCE_NO_SYMBOL $017E
FORCE_SYMBOL $0180 DAC
FORCE_SYMBOL $0182 PORT
FORCE_NO_SYMBOL $0184
FORCE_SYMBOL $0188 VARTIM
FORCE_SYMBOL $018B T1LOLC
FORCE_NO_SYMBOL $018E
FORCE_SYMBOL $0190 PORT
FORCE_SYMBOL $0192 DAC
FORCE_SYMBOL $0194 SR
FORCE_SYMBOL $0196 T1HOC
FORCE_NO_SYMBOL $0198
FORCE_SYMBOL $019B IFR
FORCE_SYMBOL $01A1 SR
FORCE_NO_SYMBOL $01A3
FORCE_NO_SYMBOL $01A5
FORCE_SYMBOL $01AB ZEROO
COMMENT_LINE $01AE ***********
COMMENT_LINE $01AE *
COMMENT_LINE $01AE * DOTTIE
COMMENT_LINE $01AE * PACKET DOTS
COMMENT_LINE $01AE *
COMMENT_LINE $01AE ************
FORCE_SYMBOL $01AE T1LOLC
FORCE_NO_SYMBOL $01B0
FORCE_SYMBOL $01B2 DAC
FORCE_SYMBOL $01B4 PORT
FORCE_NO_SYMBOL $01B7
FORCE_SYMBOL $01B9 PORT
FORCE_SYMBOL $01BB DAC
FORCE_SYMBOL $01BD SR
FORCE_SYMBOL $01BF T1HOC
FORCE_NO_SYMBOL $01C1
FORCE_SYMBOL $01C4 IFR
FORCE_SYMBOL $01CA SR
FORCE_SYMBOL $01CE SR
FORCE_NO_SYMBOL $01D0
COMMENT_LINE $01D5 ************
COMMENT_LINE $01D5 *
COMMENT_LINE $01D5 * TA DA !!! JOHN'S GREAT DRAWING ROUTINE !!! YEA!!!  /WBH
COMMENT_LINE $01D5 *
COMMENT_LINE $01D5 **************
COMMENT_LINE $01D5 FORMAT: STATUS,Y,X,ZOOM MULT (2**N)
COMMENT_LINE $01D5 STATUS=00=BEAOM OFF
COMMENT_LINE $01D5 STATUS=FF=BEAM ON
COMMENT_LINE $01D5 STATUS=01=END OF PACKET
FORCE_NO_SYMBOL $01D7
COMMENT $01D9 ZERO THE BEAM
FORCE_SYMBOL $01D9 PPCR
COMMENT $01DC SET MULTIPLEXER TO YAXIS S/H
FORCE_SYMBOL $01DC PORT
COMMENT $01DE A HAS YAXIS VOLTAGE
FORCE_NO_SYMBOL $01DE
COMMENT $01E0 SET YAXIS VOLTAGE INTO Y S/H
FORCE_SYMBOL $01E0 DAC
COMMENT_LINE $01E2 ; FOLLOWING IS Y AXIS SAMPLE TIME
COMMENT $01E2 B HAS ZOOM PWR OF 2 MULTIPLIER
FORCE_NO_SYMBOL $01E2
COMMENT $01E4 ZOOM MULT WORKING REG
COMMENT $01E7 MAKES A TOTAL OF 4 ADDED EVERY 2 2X
FORCE_NO_SYMBOL $01E7
COMMENT $01E9 IN THE 2X MULTIPLY LOOP (DR1)
FORCE_SYMBOL $01E9 TEMP
COMMENT $01EC B HAS ZOOM TIMER LSB
FORCE_SYMBOL $01EC UNTILL
COMMENT $01EF SETUP FOR DOUBLE PRECIS
COMMENT $01F0 NO ZOOM IF ZERO
COMMENT $01F3 NO ZOOM, SETUP TIMER AND Y SAMPLE/H
COMMENT $01F5 (IF >4X EVER USED)
FORCE_SYMBOL $01F5 TEMP
COMMENT $01F8 ZOOM VALUE =ZOOM VALUE X2
COMMENT $01F9 A HAS ZOOM MSB
COMMENT $01FA ZOOM 00 IS A TIME QUANTITY OF ~3.75
FORCE_NO_SYMBOL $01FA
FORCE_NO_SYMBOL $01FC
COMMENT $01FE NO MORE ZOOM IF 0
COMMENT $0201 2X AGAIN
COMMENT $0203 SET TIMER LSB = ZOOM LSB
FORCE_SYMBOL $0203 T1LOLC
COMMENT $0205 B HAS XAXIS VOLTAGE
FORCE_NO_SYMBOL $0205
COMMENT $0207 SET TO XAXIS PORT
FORCE_SYMBOL $0207 PORT
COMMENT_LINE $0209 ; END OF Y S/H TIME
COMMENT $0209 SET X VOLTAGE
FORCE_SYMBOL $0209 DAC
COMMENT $020B B HAS BLANKING
FORCE_NO_SYMBOL $020B
COMMENT $020D DISABLE IRQ DURING DRAW OF LINE
FORCE_NO_SYMBOL $020D
COMMENT $020F SET BEAM ON OR OFF PER BLANKING
FORCE_SYMBOL $020F SR
COMMENT $0211 SET TIMER MSB = ZOOM MSB
FORCE_SYMBOL $0211 T1HOC
COMMENT_LINE $0213 ; START RAMP TIMER
COMMENT $0213 TIMER FLAG BIT POSN MASK
FORCE_NO_SYMBOL $0213
FORCE_SYMBOL $0215 IFR
COMMENT $0217 WAIT FOR RAMP TIMER
COMMENT $0219 WAIT FOR BEAM
FORCE_NO_SYMBOL $0219
FORCE_NO_SYMBOL $021B
COMMENT_LINE $021D ; X POINTS AT START OF NEXT PACKET
COMMENT $021D TURN OFF BEAM
FORCE_SYMBOL $021D SR
COMMENT $021F RE-ENABLE INTERRUPTS AFTER LINE
FORCE_NO_SYMBOL $021F
COMMENT $0221 GET MOTOR WORKING PULSE WIDTH
COMMENT $0224 DONT MESS WITH JOB IF LOCKED OUT
COMMENT $0226 COMPARE TO WHEEL TIMER MSB
FORCE_SYMBOL $0226 T2HOC
COMMENT $0228 IF MSB LOWER THAN PW, MOTOR OFF
COMMENT $022A GET NEXT STATUS
FORCE_NO_SYMBOL $022A
COMMENT $022C CONTINUE IF $FF OR $00
COMMENT $022F FOLLOWING TURNS MOTOR OFF
FORCE_NO_SYMBOL $022F
COMMENT $0232 WITH OUT WRECKING X
COMMENT $0235 GET CURRENT SETTING
FORCE_SYMBOL $0235 REQ6
COMMENT_LINE $0238 ANDB    #.NOT.PLUG      ; SELECT INPUT
COMMENT $0238 SELECT INPUT
COMMENT $023A ADDRESS OF ENABLE BITS
FORCE_SYMBOL $023A ENABLE
COMMENT $023C WRITE TO PSG
FORCE_SYMBOL $023C OUTPUT
COMMENT $023F LOCK-OUT DR5 ONCE
COMMENT $0242 CHECK NEXT VECTOR STATUS FOR END
COMMENT_LINE $0244 *************
COMMENT_LINE $0244 *
COMMENT_LINE $0244 * CKMOTOR
COMMENT_LINE $0244 *
COMMENT_LINE $0244 * CHECK THE MOTOR TIMER AND SEE IF TIME TO FINIS
COMMENT_LINE $0244 *
COMMENT_LINE $0244 *************
FORCE_SYMBOL $024A T2HOC
FORCE_NO_SYMBOL $024F
COMMENT $0255 GET CURRENT SETTING
FORCE_SYMBOL $0255 REQ6
COMMENT_LINE $0258 ANDB    #.NOT.PLUG      ; SELECT INPUT
COMMENT $0258 SELECT INPUT
COMMENT $025A ADDRESS OF ENABLE BITS
FORCE_SYMBOL $025A ENABLE
COMMENT $025C WRITE TO PSG
FORCE_SYMBOL $025C OUTPUT
COMMENT_LINE $0263 **********************
COMMENT_LINE $0263 * MOTOR
COMMENT_LINE $0263 **********************
COMMENT_LINE $0263 ; (C) JOHN ROSS 1983
COMMENT $0263 BEAM OFF
FORCE_SYMBOL $0263 SR
COMMENT $0265 GET INTERRUPT FLAGS FROM PIA
FORCE_SYMBOL $0265 IFR
COMMENT $0267 CHECK T2 TIME-OUT FLAG
FORCE_NO_SYMBOL $0267
COMMENT $0269 TIMER OVER SO MOTOR IS SLOW
COMMENT $026B MOTOR IS FAST SO  MINIMUM POWER
COMMENT $026E IS USED IN THE NEXT ROTATION
COMMENT $0271 ONE 'MOTOR OFF' ROTATION
FORCE_SYMBOL $0271 SMPLCN
COMMENT $0274 CHECK FRAME TIME ALLOWANCE
COMMENT $0276 IF SMPLCN=0=DONE, CHECK STATISTICS
COMMENT $0278 POWER PULSE WIDTH IN RELATION TO A
FORCE_SYMBOL $0278 MOT_PW
COMMENT_LINE $027B ; DECREMENTING T2 TIMER
COMMENT $027B PULSE WIDTH  FOR NEXT ROTATION
COMMENT $027E ONE 'MOTOR ON' ROTATION
FORCE_SYMBOL $027E ONROTS
COMMENT $0281 ONE ROTATION.
FORCE_SYMBOL $0281 SMPLCN
COMMENT $0284 CHECK FRAME TIME ALLOWANCE
COMMENT $0286 1/4 STATISTIC SAMPLE TOTAL COUNT
FORCE_NO_SYMBOL $0286
COMMENT $0288 RESET SAMPLE COUNTER
FORCE_SYMBOL $0288 SMPLCN
COMMENT $028B NUMBER OF ON ROTATIONS JUST NOW
FORCE_SYMBOL $028B ONROTS
COMMENT $028E ON ROTATIONS FROM LAST 1/2 SAMPLE
COMMENT $0291 SETUP TO CHANGE ON PWR BY ROT ERROR
COMMENT $0293 OPTIMUM NO. OF ONROTS SET HERE----.
FORCE_NO_SYMBOL $0293
COMMENT $0295 A HAS -ONROTS ERROR FROM OPTIMUM  |
COMMENT $0296 OPTIMUM NO. OF ONROT3 SET HERE TOO|
FORCE_NO_SYMBOL $0296
COMMENT $0298 NO ADJUSTMENT TO ON PW
COMMENT $029A GROW ON PW IF TOO MANY ON ROTATIONS
COMMENT $029C SHRINK ON PW IF TOO FEW ONROTS
FORCE_SYMBOL $029C MOT_PW
COMMENT $029F UNTILL IT WOULD ROLL OVER
COMMENT $02A1 SAVE IF NOT ROLLED OVER
FORCE_SYMBOL $02A1 MOT_PW
COMMENT $02A4 THEN ADJUST OFF POWER PULSE WIDTH
COMMENT $02A6 GROW ON POWER PW IF TOO MUCH ONROT
FORCE_SYMBOL $02A6 MOT_PW
COMMENT $02A9 UNTILL IT WOULD ROLL OVER
COMMENT $02AB SAVE IF NOT ROLLED OVER
FORCE_SYMBOL $02AB MOT_PW
COMMENT $02AE ADD T-2 ONROTS TO T-1 AND T-0
COMMENT $02B1 ADD T-3 ONROTS TO T-0, 1, AND 2
COMMENT $02B4 SET OPTMM NO_ OF ONROTS IN $20 HERE
FORCE_NO_SYMBOL $02B4
COMMENT $02B6 PROPAGATE ONROTS IF OPTIMUM
COMMENT $02B8 A HAS ERROR MSB
COMMENT $02BA SETUP B FOR DIVIDE SHIFTING. A MSB,
COMMENT $02BB WHICH IS USED IN NEGATIVE FEEDBACK
COMMENT $02BC AT A RATIO OF 1/2 (OR 1/4 OK TOO)
COMMENT $02BD DOUBLE PRECISION FOR NOW, MAKE LSB.
COMMENT $02BE RECOVER SIGN OF ERROR
COMMENT $02BF GROW OFF ROT PWR IF TOO MANY ONROTS
COMMENT $02C1 SHRINK OFF PWR IF TOO FEW ONROTS
COMMENT $02C4 UNTILL IT ROLLS OVER
COMMENT $02C6 SAVE NEW SMALLER IF NOT ROLLED OVER
COMMENT $02C9 PROPAGATE ONROTS COUNTERS
COMMENT $02CB GROW OFF ROT PWR IF TOO FEW OFFROTS
COMMENT $02CE UNTILL IT ROLLS OVER,THEN PROPAGATE
COMMENT $02D0 SAVE NEW LARGER IF NOT ROLLED OVER
COMMENT $02D3 GET OFF ROTATION POWER
COMMENT $02D6 SET ON/OFF POWER DISTANCE HERE
FORCE_NO_SYMBOL $02D6
COMMENT $02D8 DISTANCE FROM ROTATION POWER
FORCE_SYMBOL $02D8 MOT_PW
COMMENT $02DB OFF PWR OK IF >THAT
COMMENT $02DD GET ON PWR
FORCE_SYMBOL $02DD MOT_PW
COMMENT $02E0 OFFSET BY ON/OFF DISTANCE
FORCE_NO_SYMBOL $02E0
COMMENT $02E2 SAVE AS NEW OFF POWER
COMMENT $02E5 GET T-1, T-2
COMMENT $02E8 SAVE AS T-2, T-3
COMMENT $02EB GET T-0
FORCE_SYMBOL $02EB ONROTS
COMMENT $02EE SAVE AS T-1
COMMENT $02F1 CLR T-0 FOR NEXT ON ROTATION COUNT
FORCE_SYMBOL $02F1 ONROTS
COMMENT $02F4 XMSEC (WHEEL ROT TIME) NOT ADJUSTED
COMMENT_LINE $02F5 ; IN THIS VERSION---
COMMENT $02F5 FOLLOWING TURNS THE MOTOR OFF
FORCE_NO_SYMBOL $02F5
COMMENT $02F8 BUT MAKES THE PORT IN OUTPUT MODE
FORCE_SYMBOL $02F8 PSGX
COMMENT $02FB FIND OUT CURRENT SETTING
FORCE_SYMBOL $02FB REQ6
COMMENT $02FE SELECT OUTPUT
FORCE_SYMBOL $02FE PLUG
COMMENT $0300 ADDRESS FOR ENABLES
FORCE_SYMBOL $0300 ENABLE
COMMENT $0302 SEND IT OUT TO PSG
FORCE_SYMBOL $0302 OUTPUT
COMMENT $0305 ZERO THE BEAM POSITION
FORCE_SYMBOL $0305 ZEROIT
COMMENT $0308 CLEAN-UP THE STACK
FORCE_SYMBOL $0308 STACK
FORCE_SYMBOL $030C SCENE
COMMENT_LINE $030F ***************
COMMENT_LINE $030F *
COMMENT_LINE $030F * PROGRAM
COMMENT_LINE $030F *
COMMENT_LINE $030F ***************
COMMENT_LINE $030F ***************
COMMENT_LINE $030F *
COMMENT_LINE $030F * DRWBOX
COMMENT_LINE $030F *
COMMENT_LINE $030F * DRAW THE BOX POINTED AT BY REG X
COMMENT_LINE $030F *
COMMENT_LINE $030F * ZOOM,TIMER INFO POINTED AT BY REG Y
COMMENT_LINE $030F *
COMMENT_LINE $030F ***************
FORCE_NO_SYMBOL $030F
FORCE_NO_SYMBOL $0311
COMMENT $0318 DISPARITY TIMER
FORCE_SYMBOL $0318 DISPAR
FORCE_SYMBOL $031A T1LOLC
COMMENT_LINE $031C LDD     0,X++            ; GET OFFSET
COMMENT $031C GET OFFSET
FORCE_SYMBOL $031E DAC
FORCE_SYMBOL $0320 PORT
FORCE_SYMBOL $0322 UZEROX
FORCE_SYMBOL $0324 PPCR
FORCE_SYMBOL $0326 PORT
FORCE_SYMBOL $0328 DAC
FORCE_NO_SYMBOL $032A
FORCE_SYMBOL $032C T1HOC
FORCE_SYMBOL $032E IFR
FORCE_NO_SYMBOL $0332
FORCE_SYMBOL $0334 UNTILL
FORCE_NO_SYMBOL $0337
FORCE_NO_SYMBOL $033B
FORCE_SYMBOL $033D INTENS
FORCE_SYMBOL $0340 DRAW
COMMENT $0345 ZERO BEAM
FORCE_SYMBOL $0345 ZEROX
FORCE_SYMBOL $0347 PPCR
FORCE_SYMBOL $0349 ZEREF
FORCE_SYMBOL $034C DEL13
COMMENT_LINE $0350 *****************
COMMENT_LINE $0350 *
COMMENT_LINE $0350 * WALL
COMMENT_LINE $0350 *
COMMENT_LINE $0350 * DRAW THE WALL AND THEN THE BOX
COMMENT_LINE $0350 *
COMMENT_LINE $0350 ****************
COMMENT $0350 POINTER TO BOX
FORCE_SYMBOL $0352 TUN9
COMMENT $0355 SET MULTIPLEXER TO YAXIS S/H
FORCE_SYMBOL $0355 PORT
COMMENT $0357 A HAS YAXIS VOLTAGE
FORCE_NO_SYMBOL $0357
COMMENT $0359 SET YAXIS VOLTAGE INTO Y S/H
FORCE_SYMBOL $0359 DAC
COMMENT_LINE $035B ; FOLLOWING IS Y AXIS SAMPLE TIME
COMMENT $035B B HAS ZOOM PWR OF 2 MULTIPLIER
FORCE_NO_SYMBOL $035B
COMMENT $035D ZOOM MULT WORKING REG
COMMENT $0360 MAKES A TOTAL OF 4 ADDED EVERY 2 2X
FORCE_NO_SYMBOL $0360
COMMENT $0362 IN THE 2X MULTIPLY LOOP (DR1)
FORCE_SYMBOL $0362 TEMP
COMMENT $0365 B HAS ZOOM TIMER LSB
FORCE_SYMBOL $0365 UNTILL
COMMENT $0368 SETUP FOR DOUBLE PRECIS
COMMENT $0369 NO ZOOM IF ZERO
COMMENT $036C NO ZOOM, SETUP TIMER AND Y SAMPLE/H
COMMENT $036E (IF >4X EVER USED)
FORCE_SYMBOL $036E TEMP
COMMENT $0371 ZOOM VALUE =ZOOM VALUE X2
COMMENT $0372 A HAS ZOOM MSB
COMMENT $0373 ZOOM 00 IS A TIME QUANTITY OF ~3_75
FORCE_NO_SYMBOL $0373
FORCE_NO_SYMBOL $0375
COMMENT $0377 NO MORE ZOOM IF 0
COMMENT $037A 2X AGAIN
COMMENT $037C SET TIMER LSB = ZOOM LSB
FORCE_SYMBOL $037C T1LOLC
COMMENT $037E B HAS XAXIS VOLTAGE
FORCE_NO_SYMBOL $037E
COMMENT $0380 SET TO XAXIS PORT
FORCE_SYMBOL $0380 PORT
COMMENT_LINE $0382 ; END OF Y S/H TIME
COMMENT $0382 SET X VOLTAGE
FORCE_SYMBOL $0382 DAC
COMMENT $0384 B HAS BLANKING
FORCE_NO_SYMBOL $0384
COMMENT $0386 DISABLE IRQ DURING DRAW OF LINE
FORCE_NO_SYMBOL $0386
COMMENT $0388 SET BEAM ON OR OFF PER BLANKING
FORCE_SYMBOL $0388 SR
COMMENT $038A SET TIMER MSB = ZOOM MSB
FORCE_SYMBOL $038A T1HOC
COMMENT_LINE $038C ; START RAMP TIMER
COMMENT $038C TIMER FLAG BIT POSN MASK
FORCE_NO_SYMBOL $038C
FORCE_SYMBOL $038E IFR
COMMENT $0390 WAIT FOR RAMP TIMER
COMMENT $0392 WAIT FOR BEAM
FORCE_NO_SYMBOL $0392
FORCE_NO_SYMBOL $0394
COMMENT_LINE $0396 ; X POINTS AT START OF NEXT PACKET
COMMENT $0396 TURN OFF BEAM
FORCE_SYMBOL $0396 SR
COMMENT $0398 RE-ENABLE INTERRUPTS AFTER LINE
FORCE_NO_SYMBOL $0398
COMMENT $039A GET MOTOR WORKING PULSE WIDTH
COMMENT $039D DONT MESS WITH JOB IF LOCKED OUT
COMMENT $039F COMPARE TO WHEEL TIMER MSB
FORCE_SYMBOL $039F T2HOC
COMMENT $03A1 IF MSB LOWER THAN PW, MOTOR OFF
COMMENT $03A3 GET NEXT STATUS
FORCE_NO_SYMBOL $03A3
COMMENT $03A5 CONTINUE IF $FF OR $00
COMMENT $03A9 FOLLOWING TURNS MOTOR OFF
FORCE_NO_SYMBOL $03A9
COMMENT $03AC WITH OUT WRECKING X
COMMENT $03AF GET CURRENT SETTING
FORCE_SYMBOL $03AF REQ6
COMMENT_LINE $03B2 ANDB    #.NOT.PLUG      ; SELECT INPUT
COMMENT $03B2 SELECT INPUT
COMMENT $03B4 ADDRESS OF ENABLE BITS
FORCE_SYMBOL $03B4 ENABLE
COMMENT $03B6 WRITE TO PSG
FORCE_SYMBOL $03B6 OUTPUT
COMMENT $03B9 LOCK-OUT DR5 ONCE
COMMENT $03BC CHECK NEXT VECTOR STATUS FOR END
FORCE_SYMBOL $03BE UZEROX
FORCE_SYMBOL $03C0 PPCR
FORCE_SYMBOL $03C2 SPRTXY
COMMENT $03C5 Y POSITION
FORCE_SYMBOL $03C5 DAC
FORCE_SYMBOL $03C7 PORT
FORCE_SYMBOL $03C9 SPRZOM
FORCE_SYMBOL $03CB T1LOLC
FORCE_SYMBOL $03CF PORT
COMMENT $03D1 X POSITION
FORCE_SYMBOL $03D1 DAC
FORCE_NO_SYMBOL $03D3
FORCE_SYMBOL $03D5 T1HOC
FORCE_SYMBOL $03D7 IFR
FORCE_SYMBOL $03DD DRAW
COMMENT_LINE $03E1 ***************
COMMENT_LINE $03E1 *
COMMENT_LINE $03E1 * DRWSPR
COMMENT_LINE $03E1 *
COMMENT_LINE $03E1 * DRAW THE SPRITE PINTED TO BY REG X
COMMENT_LINE $03E1 *
COMMENT_LINE $03E1 * PACKET INFO:
COMMENT_LINE $03E1 *
COMMENT_LINE $03E1 *      Y,X     : RMB 2
COMMENT_LINE $03E1 *      DISPAR  : RMB 1
COMMENT_LINE $03E1 *      TIMER   : RMB 2
COMMENT_LINE $03E1 *      ZOOM    : RMB 1 (SPRITE)
COMMENT_LINE $03E1 *      SPRPTR  : RMB 4 (LEFT SPRITE, RIGHT SPRITE)
COMMENT_LINE $03E1 *
COMMENT_LINE $03E1 *
COMMENT_LINE $03E1 ***************
COMMENT $03E3 DISPARITY TIMER
FORCE_SYMBOL $03E3 DISPAR
FORCE_SYMBOL $03E5 T1LOLC
FORCE_SYMBOL $03E7 SPRDIS
COMMENT $03E9 DISPARITY POSITIVE
COMMENT $03EB DISPARITY BASE
FORCE_SYMBOL $03EB DBASE
FORCE_SYMBOL $03EE DAC
FORCE_SYMBOL $03F0 PORT
FORCE_SYMBOL $03F2 UZEROX
FORCE_SYMBOL $03F4 PPCR
FORCE_SYMBOL $03F6 PORT
FORCE_SYMBOL $03F8 RIGHT
COMMENT $03FD GO OTHER WAY
FORCE_SYMBOL $03FE DAC
FORCE_NO_SYMBOL $0400
FORCE_SYMBOL $0402 T1HOC
FORCE_SYMBOL $0404 IFR
FORCE_SYMBOL $0408 SPRXY
COMMENT $040A Y POSITION
FORCE_SYMBOL $040A DAC
FORCE_SYMBOL $040C PORT
FORCE_SYMBOL $040E SPRTIM
FORCE_SYMBOL $0410 T1LOLC
FORCE_SYMBOL $0414 PORT
COMMENT $0416 X POSITION
FORCE_SYMBOL $0416 DAC
FORCE_NO_SYMBOL $0418
FORCE_SYMBOL $041A T1HOC
FORCE_SYMBOL $041C IFR
FORCE_SYMBOL $0420 SPRZOM
FORCE_SYMBOL $0422 UNTILL
FORCE_SYMBOL $0425 SPRTUN
FORCE_SYMBOL $042A SPRPTR
FORCE_SYMBOL $042C FOOL
FORCE_SYMBOL $0432 SPRTXY
COMMENT $0435 Y POSITION
FORCE_SYMBOL $0435 DAC
FORCE_SYMBOL $0437 PORT
FORCE_SYMBOL $0439 SPRZOM
FORCE_SYMBOL $043B T1LOLC
FORCE_SYMBOL $043F PORT
COMMENT $0441 X POSITION
FORCE_SYMBOL $0441 DAC
FORCE_NO_SYMBOL $0443
FORCE_SYMBOL $0445 T1HOC
FORCE_SYMBOL $0447 IFR
FORCE_SYMBOL $044B SPRINT
FORCE_SYMBOL $044D INTENS
FORCE_SYMBOL $0450 SPRDRW
FORCE_SYMBOL $0455 RIGHT
FORCE_SYMBOL $045A SPRPTR
COMMENT $0460 FOR RASTER
FORCE_SYMBOL $0460 MESAGE
FORCE_SYMBOL $0463 UNTILL
FORCE_NO_SYMBOL $0466
FORCE_SYMBOL $046A ZEROO
COMMENT_LINE $046D ***********************
COMMENT_LINE $046D *
COMMENT_LINE $046D * COLOR TABLE SUBROUTINES HERE
COMMENT_LINE $046D *
COMMENT_LINE $046D * WORK OFF A COMMON TABLE ACCESS BY ALL BUT PICK OUT DIFFERENT FIELDS
COMMENT_LINE $046D *
COMMENT_LINE $046D * SCAN FROM TOP TO BOTTOM
COMMENT_LINE $046D *
COMMENT_LINE $046D * USING A QUICK SEARCH PROGRAM
COMMENT_LINE $046D * USED FOR SPRITES ( NOT BOXES )
COMMENT_LINE $046D *
COMMENT_LINE $046D * RMB 1 : COLOR ( IF NO MATCH IGNORE )
COMMENT_LINE $046D * RMB 2 : POSITION
COMMENT_LINE $046D * RMB 4 : ZOOM ,ETC ,ETC ,ETC
COMMENT_LINE $046D * YOU GET THE PICRURE
COMMENT_LINE $046D * FIGUR IT OUT YOURSELF
COMMENT_LINE $046D * YOU SON OF A BITCH
COMMENT_LINE $046D * I MEAN LIKE WHERE HAVE YOU BEEN BEFORE
COMMENT_LINE $046D *
COMMENT_LINE $046D **************************
COMMENT $046D LEFT EYE
FORCE_SYMBOL $046D RIGHT
COMMENT $0470 INIT THE OBJECT TABLE
FORCE_SYMBOL $0470 IOBJTAB
FORCE_SYMBOL $0473 CBLUE
FORCE_SYMBOL $0475 GETOBJ
FORCE_SYMBOL $047C DRWSPR
COMMENT_LINE $0481 ***************************
COMMENT $0481 INIT THE OBJECT TABLE
FORCE_SYMBOL $0481 IOBJTAB
FORCE_SYMBOL $0484 CGREEN
FORCE_SYMBOL $0486 GETOBJ
COMMENT $048C DRAW BOTTOM BOX AS RAIL START
FORCE_SYMBOL $048C LIBROM
FORCE_SYMBOL $048F DRWGRP
FORCE_SYMBOL $0492 QUIET
FORCE_SYMBOL $0496 DRWSPR
COMMENT_LINE $049F **************************
COMMENT $049F INIT THE OBJECT TABLE
FORCE_SYMBOL $049F IOBJTAB
FORCE_SYMBOL $04A2 CRED
FORCE_SYMBOL $04A4 GETOBJ
FORCE_SYMBOL $04AB DRWSPR
COMMENT_LINE $04B0 **************************
FORCE_SYMBOL $04B0 RIGHT
COMMENT $04B3 INIT THE OBJECT TABLE
FORCE_SYMBOL $04B3 IOBJTAB
FORCE_SYMBOL $04B6 CBLUE
FORCE_SYMBOL $04B8 GETOBJ
FORCE_SYMBOL $04BF DRWSPR
COMMENT_LINE $04C4 **************************
COMMENT $04C4 INIT THE OBJECT TABLE
FORCE_SYMBOL $04C4 IOBJTAB
FORCE_SYMBOL $04C7 CGREEN
FORCE_SYMBOL $04C9 GETOBJ
COMMENT $04CF DRAW BOTTOM BOXES AS TRACK STARTS
FORCE_SYMBOL $04CF RIBROM
FORCE_SYMBOL $04D2 DRWGRP
FORCE_SYMBOL $04D6 DRWSPR
COMMENT_LINE $04DF ***************************
COMMENT $04DF INIT THE OBJECT TABLE
FORCE_SYMBOL $04DF IOBJTAB
FORCE_SYMBOL $04E2 CRED
FORCE_SYMBOL $04E4 GETOBJ
FORCE_SYMBOL $04EB DRWSPR
COMMENT_LINE $04F0 *****************************
FORCE_NO_SYMBOL $04F3
FORCE_SYMBOL $04F6 DAC
FORCE_SYMBOL $04F8 ACR
FORCE_SYMBOL $04FA PORT
FORCE_SYMBOL $04FC PORT
FORCE_NO_SYMBOL $04FE
FORCE_SYMBOL $0502 PORT
FORCE_SYMBOL $0504 PORT
FORCE_SYMBOL $0506 PORT
FORCE_SYMBOL $050A PORT
FORCE_SYMBOL $050F DAC
FORCE_NO_SYMBOL $0511
FORCE_SYMBOL $0514 MESAGE
FORCE_SYMBOL $0517 PORT
FORCE_SYMBOL $051D SR
COMMENT_LINE $051F LDA     0,U+
FORCE_NO_SYMBOL $0523
FORCE_SYMBOL $0525 PORT
FORCE_SYMBOL $0527 DAC
FORCE_NO_SYMBOL $0529
FORCE_SYMBOL $052B PORT
COMMENT $052D $50*6-$20
FORCE_NO_SYMBOL $0532
FORCE_SYMBOL $0537 MESAGE
FORCE_NO_SYMBOL $053A
FORCE_NO_SYMBOL $053F
FORCE_SYMBOL $0545 PORT
FORCE_SYMBOL $0547 SIZRAS
FORCE_SYMBOL $054A DAC
FORCE_SYMBOL $054C PORT
FORCE_NO_SYMBOL $054E
FORCE_SYMBOL $0552 PORT
FORCE_SYMBOL $0554 DAC
FORCE_SYMBOL $0556 PORT
FORCE_SYMBOL $0558 PORT
FORCE_NO_SYMBOL $055A
FORCE_NO_SYMBOL $055E
FORCE_SYMBOL $0560 ACR
FORCE_SYMBOL $0562 ZEROO
COMMENT_LINE $0565 ***************
COMMENT_LINE $0565 *
COMMENT_LINE $0565 * MAIN CONTROL CENTER FOR THIS GAME
COMMENT_LINE $0565 *
COMMENT_LINE $0565 * DRAW THE VARIOUS BOXES
COMMENT_LINE $0565 *
COMMENT_LINE $0565 ***************
FORCE_SYMBOL $0565 NXTSTA
FORCE_SYMBOL $0569 SECFUN
FORCE_SYMBOL $056D SECTIM
FORCE_NO_SYMBOL $0570
FORCE_SYMBOL $0575 CKMOTOR
FORCE_NO_SYMBOL $0578
COMMENT $057A TIME YET
FORCE_SYMBOL $057A T2HOC
COMMENT_LINE $057E LDX     0,Y++
FORCE_NO_SYMBOL $0582
COMMENT $0586 NEXT TIMER
FORCE_NO_SYMBOL $0586
COMMENT_LINE $058A ****************
COMMENT_LINE $058A *
COMMENT_LINE $058A * ZOOMBK
COMMENT_LINE $058A *
COMMENT_LINE $058A * ZOOM THE BACKGROUND
COMMENT_LINE $058A *
COMMENT_LINE $058A ***************
FORCE_SYMBOL $058D MAXBOX
FORCE_SYMBOL $059A TRKSPD
FORCE_SYMBOL $059F MATCH
COMMENT_LINE $05A3 *******************
COMMENT_LINE $05A3 *
COMMENT_LINE $05A3 * ZOOMLV
COMMENT_LINE $05A3 *
COMMENT_LINE $05A3 * LEAVE THE ZOOMING BOXES
COMMENT_LINE $05A3 *
COMMENT_LINE $05A3 *******************
COMMENT_LINE $05A3 SEE IF LAST TOO BIG
COMMENT $05A3 FLAG TO TELL IF WERE DONE
FORCE_SYMBOL $05A3 TUNDONE
FORCE_SYMBOL $05A9 MAXBOX
FORCE_NO_SYMBOL $05B3
FORCE_SYMBOL $05B7 TUNDONE
FORCE_SYMBOL $05BB ZOOM
FORCE_NO_SYMBOL $05BE
FORCE_NO_SYMBOL $05C2
COMMENT $05C4 BLANK OUT FIRST
FORCE_SYMBOL $05C4 ZOOM
FORCE_SYMBOL $05CF ZOMSPD
COMMENT $05D7 IT WORKS
FORCE_NO_SYMBOL $05D7
FORCE_NO_SYMBOL $05DD
COMMENT $05E5 FUDGE
FORCE_NO_SYMBOL $05E5
FORCE_SYMBOL $05E8 ZOOM
FORCE_NO_SYMBOL $05EB
FORCE_SYMBOL $05F0 ZOOM
COMMENT_LINE $05F4 ***********
COMMENT_LINE $05F4 *
COMMENT_LINE $05F4 * EXPON
COMMENT_LINE $05F4 *
COMMENT_LINE $05F4 * REG X POINTS TO THE VALUE
COMMENT_LINE $05F4 * REG A CONTAINS SPEED
COMMENT_LINE $05F4 *
COMMENT_LINE $05F4 ***********
FORCE_NO_SYMBOL $05F6
FORCE_NO_SYMBOL $05FD
FORCE_NO_SYMBOL $05FF
FORCE_NO_SYMBOL $0602
FORCE_SYMBOL $0607 PEMP0
FORCE_NO_SYMBOL $060A
FORCE_NO_SYMBOL $060C
FORCE_SYMBOL $060F PEMP0
FORCE_NO_SYMBOL $0612
FORCE_NO_SYMBOL $0614
COMMENT_LINE $0619 *************
COMMENT_LINE $0619 *
COMMENT_LINE $0619 * NEXPON
COMMENT_LINE $0619 *
COMMENT_LINE $0619 * DO A NEGATIVE EXPONENTIAL GROWTH
COMMENT_LINE $0619 *
COMMENT_LINE $0619 * REG X POINTS TO SPRITE
COMMENT_LINE $0619 *
COMMENT_LINE $0619 ***********
FORCE_SYMBOL $0619 SPRTIM
FORCE_NO_SYMBOL $0620
FORCE_NO_SYMBOL $0623
FORCE_SYMBOL $062A SPRTIM
FORCE_NO_SYMBOL $062C
COMMENT_LINE $062F ADDD    0,S++
FORCE_SYMBOL $0631 SPRTIM
FORCE_NO_SYMBOL $0635
FORCE_SYMBOL $0638 SPRTIM
COMMENT_LINE $063A NOW CREATE DISPARITY
COMMENT_LINE $063A SIMPLY MULTIPLY
COMMENT_LINE $063A TEMPO FIX FOR NOW
COMMENT_LINE $063A ONLY FOR THIS SHIP
COMMENT $063A MAKE $3F TO MAX 1111111
FORCE_NO_SYMBOL $063C
FORCE_SYMBOL $0641 SPRDIS
FORCE_SYMBOL $0643 SPRTIM
FORCE_NO_SYMBOL $0645
FORCE_NO_SYMBOL $0649
FORCE_SYMBOL $064B SPRINT
COMMENT_LINE $064E ************
COMMENT_LINE $064E *
COMMENT_LINE $064E * MATCH
COMMENT_LINE $064E *
COMMENT_LINE $064E * TAKES THE TIMER IN THE HIGHEST ZOOM
COMMENT_LINE $064E * AND CALCS TE OTHER TWO ZOOMS ON THAT VALUE
COMMENT_LINE $064E * BY MULTIPLY .38 TIMES THE TIMER VALUE
COMMENT_LINE $064E *
COMMENT_LINE $064E *************
COMMENT $0651 IT WORKS
FORCE_NO_SYMBOL $0651
COMMENT $0657 FUDGE
FORCE_NO_SYMBOL $0657
FORCE_SYMBOL $065A ZOOM
COMMENT_LINE $065E *******************
COMMENT_LINE $065E *
COMMENT_LINE $065E * GETOBJ
COMMENT_LINE $065E *
COMMENT_LINE $065E * GET THE NEXT OBJECT FROM THE STACK
COMMENT_LINE $065E *
COMMENT_LINE $065E *******************
FORCE_SYMBOL $065E PEMP1
FORCE_SYMBOL $0661 CKMOTOR
FORCE_SYMBOL $0664 PEMP1
FORCE_SYMBOL $0667 CURTAB
FORCE_SYMBOL $066A SPRCOL
FORCE_SYMBOL $0670 SPRCOL
FORCE_SYMBOL $0676 SPREND
FORCE_SYMBOL $0679 CURTAB
FORCE_NO_SYMBOL $067C
FORCE_SYMBOL $067F SPREND
FORCE_SYMBOL $0684 SPRTAB
FORCE_SYMBOL $0687 CURTAB
COMMENT_LINE $068B ************
COMMENT_LINE $068B *
COMMENT_LINE $068B * MOVSHP
COMMENT_LINE $068B *
COMMENT_LINE $068B * MOVE THE SPACE SHIP
COMMENT_LINE $068B *
COMMENT_LINE $068B ************
FORCE_SYMBOL $068B TRKSPD
FORCE_SYMBOL $068E POT1
FORCE_NO_SYMBOL $0695
FORCE_NO_SYMBOL $0699
FORCE_SYMBOL $069B TRKSPD
FORCE_NO_SYMBOL $06A0
FORCE_SYMBOL $06A6 TRKSPD
COMMENT_LINE $06AA malban 1
COMMENT_LINE $06AA BILNOTE--- USED TO INIT SPRITE TABLE...
FORCE_SYMBOL $06AA SPRTAB
COMMENT $06AD NOT A TUNNEL
FORCE_SYMBOL $06AD SPRTUN
FORCE_SYMBOL $06B0 CRED
FORCE_SYMBOL $06B2 SPRCOL
FORCE_SYMBOL $06B4 PENB
FORCE_SYMBOL $06B7 SPRDRW
FORCE_NO_SYMBOL $06BA
FORCE_SYMBOL $06BC SPRDIS
COMMENT $06BE SHIP TIMER
FORCE_SYMBOL $06BE SHPTIM
COMMENT_LINE $06C0 CALC DISPARITY
FORCE_NO_SYMBOL $06C0
FORCE_SYMBOL $06C4 SPRDIS
FORCE_NO_SYMBOL $06C6
FORCE_SYMBOL $06C8 SPRZOM
FORCE_NO_SYMBOL $06CA
FORCE_SYMBOL $06CC SPRINT
COMMENT_LINE $06CE LDD     #RSHIP
COMMENT_LINE $06CE STD     SPRPTR,X
COMMENT_LINE $06CE LDD     #LSHIP
COMMENT_LINE $06CE STD     SPRPTR+2,X
FORCE_SYMBOL $06D0 SPRXY
FORCE_SYMBOL $06D2 SPREXP
COMMENT_LINE $06D6 BILNOTE--- SEE BILNOTE BELOW
COMMENT_LINE $06D6 INIT DEBRIS
FORCE_NO_SYMBOL $06D6
FORCE_SYMBOL $06D8 JUNKSP
FORCE_SYMBOL $06DB JNKTAB
COMMENT $06DE NOT A TUNNEL
FORCE_SYMBOL $06DE SPRTUN
COMMENT $06E1 SET TO NO ACT
FORCE_SYMBOL $06E3 SPRCOL
FORCE_SYMBOL $06E5 JNKFLG
FORCE_SYMBOL $06EB PENB
FORCE_SYMBOL $06EE SPRDRW
FORCE_NO_SYMBOL $06F1
FORCE_SYMBOL $06F3 SPRDIS
COMMENT $06F5 SHIP TIMER
FORCE_SYMBOL $06F5 SHPTIM
FORCE_SYMBOL $06F7 SPRTIM
COMMENT_LINE $06F9 CALC DISPARITY
FORCE_NO_SYMBOL $06F9
FORCE_SYMBOL $06FD SPRDIS
FORCE_NO_SYMBOL $06FF
FORCE_SYMBOL $0701 SPRZOM
FORCE_NO_SYMBOL $0703
FORCE_SYMBOL $0705 SPRINT
FORCE_SYMBOL $0707 SPREXP
COMMENT_LINE $070B BILNOTE---USED FOR INITIALIZING SPRITE TABLE...
COMMENT_LINE $070B INTBUL LDX     #SPRTAB+SPREND
COMMENT_LINE $070B LDA     #CBLUE+$10
COMMENT_LINE $070B JSR     INTBLL
COMMENT_LINE $070B LDA     #CGREEN+$10
COMMENT_LINE $070B JSR     INTBLL
COMMENT_LINE $070B LDA     #CRED+$10
COMMENT_LINE $070B JSR     INTBLL
COMMENT_LINE $070B SET TERM
COMMENT_LINE $070B LDA     #$FF
COMMENT_LINE $070B STA     SPRCOL,X
COMMENT_LINE $070B RTS
COMMENT_LINE $070B INTBLL
COMMENT_LINE $070B STA     SPRCOL,X
COMMENT_LINE $070B LDD     #PENB
COMMENT_LINE $070B STD     SPRDRW,X
COMMENT_LINE $070B CLR     SPRTUN,X                 ; NOT A TUNNEL
COMMENT_LINE $070B LDA     #$10
COMMENT_LINE $070B STA     SPRZOM,X
COMMENT_LINE $070B LDD     #BULLET
COMMENT_LINE $070B STD     SPRPTR,X
COMMENT_LINE $070B STD     SPRPTR+2,X
COMMENT_LINE $070B LEAX    SPREND,X
COMMENT_LINE $070B RTS
COMMENT_LINE $070B BILNOTE--- ANOTHER SPRITE TABLE INIT ROUTINE...
FORCE_SYMBOL $0710 SPRCOL
FORCE_NO_SYMBOL $0712
FORCE_SYMBOL $0714 SPRZOM
FORCE_SYMBOL $0716 MANTYP
FORCE_SYMBOL $0719 SPRPTR
FORCE_SYMBOL $071D PENB
FORCE_SYMBOL $0720 SPRDRW
COMMENT_LINE $0723 INIT PATH
COMMENT_LINE $0723 LDD     #0100
FORCE_SYMBOL $0723 GUYVX
FORCE_SYMBOL $0726 SPRXXV
FORCE_SYMBOL $0729 GUYVY
FORCE_SYMBOL $072C SPRYYV
COMMENT_LINE $072F LDD     #$FF00
COMMENT_LINE $072F STD     SPRYYV,X
FORCE_NO_SYMBOL $072F
FORCE_SYMBOL $0732 SPRXX
FORCE_SYMBOL $0734 SPRYY
FORCE_NO_SYMBOL $0736
FORCE_SYMBOL $0739 SPRXXW
FORCE_SYMBOL $073C SPRYYW
FORCE_SYMBOL $073F SPREND
FORCE_NO_SYMBOL $0742
FORCE_SYMBOL $0744 SPRCOL
COMMENT_LINE $0747 *********************
COMMENT_LINE $0747 *
COMMENT_LINE $0747 * MOVMEN
COMMENT_LINE $0747 *
COMMENT_LINE $0747 * UPDATE THE ENEMY MEN
COMMENT_LINE $0747 *
COMMENT_LINE $0747 *********************
FORCE_SYMBOL $0747 HITMAN
FORCE_SYMBOL $074A HITSHIP
FORCE_SYMBOL $074D MEMSPR
COMMENT $0750 ACTIVE
FORCE_SYMBOL $0750 SPRCOL
FORCE_NO_SYMBOL $0752
FORCE_SYMBOL $0756 NXTSTA
FORCE_SYMBOL $075A SHOOT
FORCE_NO_SYMBOL $0761
FORCE_SYMBOL $0763 SPRCOL
FORCE_SYMBOL $0765 ANIM
FORCE_SYMBOL $0768 SPRDRW
FORCE_NO_SYMBOL $076B
FORCE_SYMBOL $076E SPRTIM
FORCE_SYMBOL $0770 SNDGO
FORCE_SYMBOL $0773 GUYSND
FORCE_SYMBOL $0775 SNDGO
FORCE_SYMBOL $0778 RANCID
FORCE_NO_SYMBOL $077B
FORCE_SYMBOL $077D RANCID
FORCE_NO_SYMBOL $0786
COMMENT_LINE $078E LDD     SPRTAB           ; GET POSITION  OF SHIP
FORCE_SYMBOL $078E SPRXY
FORCE_SYMBOL $0790 SPRYY
FORCE_SYMBOL $0792 SPRXX
COMMENT $0794 CLEAR EXPLOSION FLAG
FORCE_SYMBOL $0794 SPREXP
FORCE_SYMBOL $0797 MANTYP
FORCE_SYMBOL $079A SPRPTR
FORCE_SYMBOL $07A0 SPRTIM
FORCE_NO_SYMBOL $07A2
FORCE_SYMBOL $07A4 EXPON
FORCE_SYMBOL $07A9 SPRTIM
FORCE_SYMBOL $07AB SPRTIM
FORCE_NO_SYMBOL $07AE
FORCE_SYMBOL $07B0 RANGE
FORCE_NO_SYMBOL $07B3
FORCE_SYMBOL $07B7 SPRCOL
FORCE_NO_SYMBOL $07B9
FORCE_SYMBOL $07BB SPRCOL
FORCE_SYMBOL $07BD SNDGO
COMMENT_LINE $07C0 ANDA    #.NOT.GUYSND
FORCE_SYMBOL $07C2 SNDGO
FORCE_NO_SYMBOL $07C6
FORCE_SYMBOL $07CA SPRDIS
FORCE_SYMBOL $07CC SPRTIM
FORCE_NO_SYMBOL $07CE
FORCE_NO_SYMBOL $07D2
FORCE_SYMBOL $07D4 SPRINT
FORCE_SYMBOL $07D6 SPRTIM
FORCE_SYMBOL $07DA SPRZOM
FORCE_SYMBOL $07DC SPREXP
FORCE_SYMBOL $07E1 SPRXTM
COMMENT_LINE $07E6 LDU     #EXPTAB
COMMENT_LINE $07E6 LDA     FRAME+1
COMMENT_LINE $07E6 ANDA    #$03
COMMENT_LINE $07E6 ASLA
COMMENT_LINE $07E6 LDD     A,U
COMMENT_LINE $07E6 STD     SPRPTR,X
COMMENT_LINE $07E6 STD     SPRPTR+2,X
FORCE_SYMBOL $07E7 SPRCOL
FORCE_NO_SYMBOL $07E9
FORCE_SYMBOL $07EB SPRCOL
FORCE_SYMBOL $07EE COLBUL
FORCE_SYMBOL $07F4 COLSHP
FORCE_NO_SYMBOL $07FB
COMMENT $07FD GO INTO HIT MODE
FORCE_SYMBOL $07FD HITSHIP
FORCE_SYMBOL $0800 SNDWRD
FORCE_SYMBOL $0803 EXPSND
FORCE_SYMBOL $0805 SNDWRD
FORCE_SYMBOL $0808 EXPLOS
FORCE_SYMBOL $080B SPREXP
FORCE_NO_SYMBOL $080E
FORCE_SYMBOL $0810 SPRXTM
COMMENT_LINE $0813 LDD     #XXPLO1
COMMENT_LINE $0813 STD     SPRPTR,X
COMMENT_LINE $0813 STD     SPRPTR+2,X
FORCE_SYMBOL $0813 DOTTIE
FORCE_SYMBOL $0816 SPRDRW
FORCE_SYMBOL $0819 NUMKILL
FORCE_SYMBOL $081C HITMAN
COMMENT_LINE $0820 *****************
COMMENT_LINE $0820 *
COMMENT_LINE $0820 * NEWGAM
COMMENT_LINE $0820 *
COMMENT_LINE $0820 * RESET LEVEL TO 0
COMMENT_LINE $0820 * AND SET SHIPS TO MAX
COMMENT_LINE $0820 *
COMMENT_LINE $0820 *****************
FORCE_NO_SYMBOL $0820
FORCE_SYMBOL $0822 SNDWRD
FORCE_SYMBOL $0825 SNDGO
FORCE_SYMBOL $0828 EXTRA
FORCE_SYMBOL $082B NUMKILL
FORCE_SYMBOL $082E LEVEL
FORCE_SYMBOL $0831 OPEN
FORCE_SYMBOL $0834 NXTSTA
FORCE_SYMBOL $0837 OPEN
COMMENT_LINE $083A **************
COMMENT_LINE $083A *
COMMENT_LINE $083A * OPEN
COMMENT_LINE $083A *
COMMENT_LINE $083A * DRAW THE OPENING SEQUENCE
COMMENT_LINE $083A * AND THE GO TO THE CUBES CMING
COMMENT_LINE $083A *
COMMENT_LINE $083A **************
COMMENT_LINE $083A JSR     INTSHP           ; INIT THE SHIP
COMMENT_LINE $083A JSR     INLEVEL
FORCE_SYMBOL $083A CUBOPEN
COMMENT $083D #4*SECOND
FORCE_SYMBOL $083D SECOND
COMMENT $0840 OPENING TIME
FORCE_SYMBOL $0840 OPTIME
FORCE_SYMBOL $0843 BOXFLG
FORCE_SYMBOL $0846 OPWAIT
COMMENT $0849 THE INFAMOUS
FORCE_SYMBOL $0849 NXTSTA
COMMENT_LINE $084D **************
COMMENT_LINE $084D *
COMMENT_LINE $084D * OPWAIT
COMMENT_LINE $084D *
COMMENT_LINE $084D * WAIT FOR THE TIME TO DIE OUT THE BRING UP THE BOXES
COMMENT_LINE $084D *
COMMENT_LINE $084D **************
FORCE_SYMBOL $084D MOVSHP
COMMENT_LINE $0850 JSR     INWALL
FORCE_SYMBOL $0850 OPTIME
FORCE_NO_SYMBOL $0853
FORCE_SYMBOL $0856 OPTIME
FORCE_SYMBOL $085B TUNUP
FORCE_SYMBOL $085E NXTSTA
FORCE_SYMBOL $0861 BOXFLG
FORCE_SYMBOL $0866 ZOOM
FORCE_NO_SYMBOL $086C
COMMENT $0872 NO GLITCH
FORCE_SYMBOL $0872 ZOOMBK
COMMENT_LINE $0875 JSR     INTBUL
COMMENT_LINE $0876 **************
COMMENT_LINE $0876 *
COMMENT_LINE $0876 * TUNUP
COMMENT_LINE $0876 *
COMMENT_LINE $0876 * BRING THE TUNNEL UP TO ITS MAX STATE
COMMENT_LINE $0876 * AND THEN DITCH TO THE GAME STATE
COMMENT_LINE $0876 *
COMMENT_LINE $0876 **************
FORCE_SYMBOL $0876 MOVSHP
FORCE_SYMBOL $0879 ZOOMBK
FORCE_SYMBOL $087F MAXBOX
COMMENT_LINE $0883 JSR     INTBUL           ; INIT THE BULLETS
COMMENT $0883 INIT THE JUNK
FORCE_SYMBOL $0883 INTJNK
COMMENT $0886 INIT THE BADGUY
FORCE_SYMBOL $0886 INTGUY
COMMENT_LINE $0889 JSR     MOVBUL
COMMENT_LINE $0889 JSR     MOVJNK
FORCE_SYMBOL $0889 MOVMEN
COMMENT $088C GO INTO SHOOT SEQUENCE
FORCE_SYMBOL $088C SHOOT
FORCE_SYMBOL $088F NXTSTA
COMMENT_LINE $0893 *************
COMMENT_LINE $0893 *
COMMENT_LINE $0893 * NORMAL GAME STATE /WBH
COMMENT_LINE $0893 *
COMMENT_LINE $0893 *************
FORCE_SYMBOL $0893 ZOOMBK
FORCE_SYMBOL $0896 MOVSHP
COMMENT_LINE $0899 LDX     #LEVBOX          ; LEAVE THE BOXES
COMMENT_LINE $0899 STX     NXTSTA
COMMENT_LINE $0899 LDD     #5*SECOND
COMMENT_LINE $0899 STD     OPTIME
COMMENT_LINE $0899 LDA     #$FF
COMMENT_LINE $0899 STA     SPRTAB+SPREND+SPRCOL     ; STAMP OUT OBJECTS
COMMENT_LINE $089A *************
COMMENT_LINE $089A *
COMMENT_LINE $089A * LEVBOX
COMMENT_LINE $089A *
COMMENT_LINE $089A * WAIT A WHILE TO LEAVE
COMMENT_LINE $089A *
COMMENT_LINE $089A *************
FORCE_SYMBOL $089A MOVSHP
COMMENT_LINE $089D JSR     MOVBUL
COMMENT_LINE $089D JSR     MOVMEN
COMMENT_LINE $089D CLEAR OUT ALL THE BULLETS
FORCE_NO_SYMBOL $089D
COMMENT_LINE $08A2 WAIT FOR BOXES TO GO
FORCE_SYMBOL $08A2 ZOOMLV
FORCE_SYMBOL $08A5 TUNDONE
COMMENT_LINE $08AA GO TO TUNNEL SEQUENCE
FORCE_SYMBOL $08AA INTTUN
FORCE_SYMBOL $08AD TUNNEL
FORCE_SYMBOL $08B0 TUNTUN
FORCE_SYMBOL $08B3 NXTSTA
FORCE_SYMBOL $08B6 BOXFLG
COMMENT $08B9 NO WALLS PASSES
FORCE_SYMBOL $08B9 NUMWALL
COMMENT $08BC NOT EXIT
FORCE_SYMBOL $08BC WALDONE
COMMENT_LINE $08C0 *************
COMMENT_LINE $08C0 *
COMMENT_LINE $08C0 * TUNTUN
COMMENT_LINE $08C0 *
COMMENT_LINE $08C0 * DO THE TUNNEL SEQUENCE UNTIL
COMMENT_LINE $08C0 * WE HAVE GONE THROUGH ALL THE BOXES
COMMENT_LINE $08C0 *
COMMENT_LINE $08C0 *************
FORCE_SYMBOL $08C0 ONFUEL
FORCE_SYMBOL $08C3 FULPICK
FORCE_SYMBOL $08C6 TUNDONE
FORCE_SYMBOL $08C9 MOVSHP
FORCE_SYMBOL $08CC COLWALL
FORCE_SYMBOL $08D1 TITS
FORCE_SYMBOL $08D4 NXTSTA
FORCE_SYMBOL $08D9 VARTIM
FORCE_SYMBOL $08DC EXPSND
FORCE_SYMBOL $08DE SNDWRD
FORCE_SYMBOL $08E1 SNDWRD
FORCE_NO_SYMBOL $08E4
FORCE_SYMBOL $08E6 EXPLOS
FORCE_NO_SYMBOL $08EA
FORCE_SYMBOL $08EE FULPICK
FORCE_SYMBOL $08F1 SNDWRD
FORCE_SYMBOL $08F4 FULSND
FORCE_SYMBOL $08F6 SNDWRD
FORCE_SYMBOL $08F9 FUEL
FORCE_NO_SYMBOL $08FC
FORCE_NO_SYMBOL $08FE
FORCE_NO_SYMBOL $0902
FORCE_SYMBOL $0904 FUEL
FORCE_NO_SYMBOL $0907
FORCE_SYMBOL $090B SNDWRD
FORCE_SYMBOL $090E WALSND
FORCE_SYMBOL $0910 SNDWRD
FORCE_SYMBOL $0913 TUNNEL
FORCE_SYMBOL $0916 TUNDONE
COMMENT_LINE $091B JSR     INWALL
COMMENT $091B GO TO OPEN BOX
FORCE_SYMBOL $091B OPBOX
FORCE_SYMBOL $091F OPEN
FORCE_SYMBOL $0922 NXTSTA
COMMENT_LINE $0926 ***************
COMMENT_LINE $0926 *
COMMENT_LINE $0926 * CUBOPEN
COMMENT_LINE $0926 *
COMMENT_LINE $0926 * OPENING SEQUENCE
COMMENT_LINE $0926 * DISPLAY NUMBER OF SHIP AND THE SHORE
COMMENT_LINE $0926 * FOR A COUPLE SECONDS
COMMENT_LINE $0926 *
COMMENT_LINE $0926 * THE LET THE BOXES APPEAR
COMMENT_LINE $0926 *
COMMENT_LINE $0926 * RELEASE TO SHOOT WHEN DONE
COMMENT_LINE $0926 *
COMMENT_LINE $0926 ***************
FORCE_NO_SYMBOL $0926
FORCE_SYMBOL $0929 SIZRAS
COMMENT_LINE $092C LDX     #BULSPR
FORCE_SYMBOL $092C SPRTAB
COMMENT_LINE $092F CLR     SPRTUN,X                 ; NOT A TUNNEL
COMMENT_LINE $092F LDA     #CBLUE
COMMENT_LINE $092F STA     SPRCOL,X
COMMENT_LINE $092F LDD     #PASTER
COMMENT_LINE $092F STD     SPRDRW,X
COMMENT_LINE $092F LDA     #$20
COMMENT_LINE $092F STA     SPRDIS,X
COMMENT_LINE $092F FIX FOR TUNNEL SEQUENCE
COMMENT_LINE $092F LDA     #$7F
COMMENT_LINE $092F STA     SPRTIM,X
COMMENT_LINE $092F LDA     #$10
COMMENT_LINE $092F STA     SPRZOM,X
COMMENT_LINE $092F LDA     #$7F
COMMENT_LINE $092F STA     SPRINT,X
COMMENT_LINE $092F LDD     #SHPRAS
COMMENT_LINE $092F STD     SPRPTR,X
COMMENT_LINE $092F LDD     #SHPRAS
COMMENT_LINE $092F STD     SPRPTR+2,X
COMMENT_LINE $092F LDD     #$60B0
COMMENT_LINE $092F STD     SPRXY,X
COMMENT_LINE $092F SHOW SCORE
COMMENT_LINE $092F LEAX    SPREND,X
COMMENT_LINE $092F CLR     SPRTUN,X                 ; NOT A TUNNEL
COMMENT_LINE $092F LDA     #CGREEN
COMMENT_LINE $092F STA     SPRCOL,X
COMMENT_LINE $092F LDA     #PASTER
COMMENT_LINE $092F STDDSPRDRW,X
COMMENT_LINE $092F LDA     #$20
COMMENT_LINE $092F STA     SPRDIS,X
COMMENT_LINE $092F * FIX3FOR TUNNEL SEQUENCE
COMMENT_LINE $092F LDA     #$7F
COMMENT_LINE $092F STA     SPRTIM,X
COMMENT_LINE $092F LDA     #$10
COMMENT_LINE $092F STA3SPRZOM,X
COMMENT_LINE $092F LDA     #$7F
COMMENT_LINE $092F STA     SPRINT,X
COMMENT_LINE $092F LDD     #SCORE
COMMENT_LINE $092F STD     SPRPTR,X
COMMENT_LINE $092F LDD     #SCORE
COMMENT_LINE $092F STD     SPRPTR+2,X
COMMENT_LINE $092F LDD     $6020
COMMENT_LINE $092F STD     SPRXY,X
COMMENT_LINE $092F SET UP TERMINATOR
COMMENT_LINE $092F LEAX    SPREND,X
FORCE_NO_SYMBOL $092F
FORCE_SYMBOL $0931 SPRCOL
COMMENT_LINE $0935 *******************
COMMENT_LINE $0935 *
COMMENT_LINE $0935 * DRWGRP
COMMENT_LINE $0935 *
COMMENT_LINE $0935 * DRAW THE GROUP OF BOXES
COMMENT_LINE $0935 *
COMMENT_LINE $0935 * REG X POINTS TO THE SPRITE FOR THAT COLOR
COMMENT_LINE $0935 *
COMMENT_LINE $0935 * GO THROUGH THE ZOOM TABLE ITSELF
COMMENT_LINE $0935 *
COMMENT_LINE $0935 ***************
FORCE_SYMBOL $0935 BOXFLG
FORCE_NO_SYMBOL $093D
FORCE_SYMBOL $093F PEMP0
COMMENT_LINE $0942 POINT TO THE ZOOM
COMMENT_LINE $0946 SEE IF THIS BYTE IS EMPTY
FORCE_NO_SYMBOL $0946
FORCE_NO_SYMBOL $0948
FORCE_NO_SYMBOL $094C
FORCE_NO_SYMBOL $0950
COMMENT_LINE $0952 DRAW THE BOX
FORCE_SYMBOL $0952 DRWBOX
COMMENT_LINE $0955 PICK UP NEXT BOX
COMMENT_LINE $0955 REMOVE
FORCE_SYMBOL $0957 PEMP0
COMMENT_LINE $0962 ***************
COMMENT_LINE $0962 *
COMMENT_LINE $0962 * COLWALL
COMMENT_LINE $0962 *
COMMENT_LINE $0962 * CHECK OUT IF SHIP HITS WALL
COMMENT_LINE $0962 *
COMMENT_LINE $0962 *
COMMENT_LINE $0962 * REG A = $FF HIT
COMMENT_LINE $0962 *      = $00 NO ON SAME LEVEL
COMMENT_LINE $0962 *      = $02 HIT FUEL
COMMENT_LINE $0962 *      = $01 PASS THROUGH HOLE
COMMENT_LINE $0962 ************
COMMENT_LINE $0962 GO DOWN THE WALL LIST UNTIL YOU HIT THE PROPER TIME
COMMENT_LINE $0962 OR UNTIL YOU HIT THE END
FORCE_SYMBOL $0962 TUNSPR
FORCE_SYMBOL $0965 SPRCOL
COMMENT_LINE $0969 NOT FOUND
COMMENT_LINE $096B SEE IF TIMER THE SAME
FORCE_SYMBOL $096B SPRZOM
FORCE_SYMBOL $096D SHPTIM
COMMENT_LINE $0971 TRY AGAIN SUCKER
FORCE_SYMBOL $0971 SPREND
COMMENT_LINE $0976 CHECK FOR COLLISION
COMMENT_LINE $0976 FIRST COMPARE FOR Y
COMMENT $0976 GET SHIP Y
FORCE_SYMBOL $097A PEMP0
FORCE_SYMBOL $097D SPRTXY
COMMENT $0981 GET DIFFERENCE
FORCE_SYMBOL $0981 PEMP0
COMMENT_LINE $0984 SEE IF OUTSIDE BOX
FORCE_NO_SYMBOL $0988
COMMENT $098B Y POSITION
FORCE_SYMBOL $098B PEMP0
COMMENT_LINE $098E NOW SEE ABOUT X
COMMENT $098E GET SHIP Y
FORCE_SYMBOL $0992 PEMP2
FORCE_SYMBOL $0999 PEMP2
COMMENT_LINE $099C SEE IF OUTSIDE BOX
FORCE_NO_SYMBOL $09A0
FORCE_SYMBOL $09A3 PEMP2
COMMENT_LINE $09A6 NOW CHECK IF THIS IS A BOX OR A FUEL CELL
FORCE_SYMBOL $09A6 SPRPTR
FORCE_SYMBOL $09A8 FOOL
COMMENT_LINE $09AE ITS A FUEL CELL
COMMENT_LINE $09AE SEE IF WE HIT IT
FORCE_SYMBOL $09AE PEMP0
FORCE_NO_SYMBOL $09B1
COMMENT_LINE $09B7 MISSED
FORCE_SYMBOL $09B9 PEMP2
FORCE_NO_SYMBOL $09BC
COMMENT_LINE $09C2 MISSED
COMMENT_LINE $09C4 HIT THE SUCKER
COMMENT_LINE $09C4 MAKE IT INVISIBLE
FORCE_NO_SYMBOL $09C4
FORCE_SYMBOL $09C6 SPRCOL
FORCE_NO_SYMBOL $09C8
COMMENT_LINE $09CB SEE IF WE GO THROUGH THE HOLE IN THE WALL
COMMENT_LINE $09CB BIG HOLE
FORCE_SYMBOL $09CB SPRPTR
FORCE_SYMBOL $09CD BBOX
COMMENT_LINE $09D3 BID HOLE
COMMENT $09D3 GET X
FORCE_SYMBOL $09D3 PEMP0
COMMENT $09D6 BIG X
FORCE_NO_SYMBOL $09D6
COMMENT_LINE $09DC HIT
FORCE_NO_SYMBOL $09DC
FORCE_SYMBOL $09DF PEMP2
COMMENT_LINE $09E2 CMPD    #$06
FORCE_NO_SYMBOL $09E2
COMMENT_LINE $09E8 HIT
FORCE_NO_SYMBOL $09E8
COMMENT_LINE $09EB MADE IT THROUGH
COMMENT $09EB MADE IT THROUGH
FORCE_NO_SYMBOL $09EB
COMMENT_LINE $09EE SMALL BOX
COMMENT $09EE GET X
FORCE_SYMBOL $09EE PEMP0
COMMENT $09F1 BIG X
FORCE_NO_SYMBOL $09F1
COMMENT_LINE $09F7 HIT
FORCE_NO_SYMBOL $09F7
FORCE_SYMBOL $09FA PEMP2
FORCE_NO_SYMBOL $09FD
COMMENT_LINE $0A03 HIT
FORCE_NO_SYMBOL $0A03
COMMENT_LINE $0A06 MADE IT THROUGH
COMMENT $0A06 MADE IT THROUGH
FORCE_NO_SYMBOL $0A06
COMMENT_LINE $0A09 *****************
COMMENT_LINE $0A09 *
COMMENT_LINE $0A09 * GETWALL
COMMENT_LINE $0A09 *
COMMENT_LINE $0A09 * RETURN THE VARIOUS
COMMENT_LINE $0A09 *
COMMENT_LINE $0A09 * REG X POINTS TO PACKET
COMMENT_LINE $0A09 *
COMMENT_LINE $0A09 *
COMMENT_LINE $0A09 ******************
COMMENT_LINE $0A09 32 POSITIONS FOR THE HOLE
COMMENT_LINE $0A09 GET RANDOM NUMBER
COMMENT $0A09 GET NUMBER
FORCE_SYMBOL $0A09 RANCID
COMMENT $0A0C 16*2
FORCE_NO_SYMBOL $0A0C
FORCE_SYMBOL $0A0E WALTAB
COMMENT_LINE $0A11 GET POSITION
COMMENT $0A11 GET X,Y
FORCE_SYMBOL $0A13 SPRTXY
COMMENT_LINE $0A16 SEE IF FUEL OR WALL
FORCE_SYMBOL $0A16 WALLTYP
COMMENT_LINE $0A1B ITS A FUEL CELL
FORCE_SYMBOL $0A1B FOOL
FORCE_SYMBOL $0A1E SPRPTR
FORCE_SYMBOL $0A22 DRAW
FORCE_SYMBOL $0A25 SPRDRW
COMMENT_LINE $0A2A ITS A HOLE
FORCE_SYMBOL $0A2A WALL
FORCE_SYMBOL $0A2D SPRDRW
COMMENT_LINE $0A30 NOW SEE IF ITS BIG OR SMALL
FORCE_SYMBOL $0A30 BBOX
FORCE_SYMBOL $0A33 NUMWALL
FORCE_NO_SYMBOL $0A36
FORCE_SYMBOL $0A3A SMBOX
FORCE_SYMBOL $0A3D SPRPTR
COMMENT_LINE $0A41 NOW ADD IN COLOR
FORCE_SYMBOL $0A41 WALLTYP
FORCE_SYMBOL $0A44 WALCOL
FORCE_NO_SYMBOL $0A47
FORCE_SYMBOL $0A4C KOLTAB
FORCE_SYMBOL $0A52 WALCOL
FORCE_SYMBOL $0A55 SPRCOL
COMMENT_LINE $0A57 UP WALL COUNTER
FORCE_SYMBOL $0A57 NUMWALL
COMMENT_LINE $0A7E ********************
COMMENT_LINE $0A7E *
COMMENT_LINE $0A7E * TUNNEL
COMMENT_LINE $0A7E *
COMMENT_LINE $0A7E * DRAW THE TUNNEL
COMMENT_LINE $0A7E *
COMMENT_LINE $0A7E * USE TOP  WALL FOR BASE TIMER AND
COMMENT_LINE $0A7E *
COMMENT_LINE $0A7E * USE A FAKE QUEUE TO MOVE THEM AROUND
COMMENT_LINE $0A7E * LAST OBJECT ALWAYS DRAWN FIRST
COMMENT_LINE $0A7E *
COMMENT_LINE $0A7E ********************
COMMENT_LINE $0A7E GET TOP ELEMENT
FORCE_SYMBOL $0A81 MAXTUN
COMMENT_LINE $0A87 FUCK THE STACK
COMMENT_LINE $0A87 MOVE UP THE ZOOM
COMMENT_LINE $0A8D MOVE UP THE COLOR
COMMENT_LINE $0A9F MOVE UP THE POINTERS
COMMENT_LINE $0ABA MOVE UP THE DRAW FUNCTION
COMMENT $0AC9 +TUNSPR+SPRDRW
COMMENT_LINE $0ACC SHIFT POSITION
COMMENT_LINE $0ADE NOW GET THE NEXT ELEMENT
COMMENT_LINE $0ADE SEE IF TO ONLY ADD IN BLANK
FORCE_SYMBOL $0ADE NUMWALL
FORCE_SYMBOL $0AE1 MAXWALL
COMMENT $0AE6 TERMINATOR
FORCE_NO_SYMBOL $0AE6
FORCE_SYMBOL $0AF0 GETWALL
COMMENT_LINE $0AF3 GET FUNCTION
COMMENT_LINE $0AF3 LDD     0,X++
COMMENT_LINE $0AF3 STD     SPRDRW+3*SPREND+TUNSPR
COMMENT_LINE $0AF3 GET SPRITE
COMMENT_LINE $0AF3 LDD     0,X++
COMMENT_LINE $0AF3 STD     SPRPTR+3*SPREND+TUNSPR
COMMENT_LINE $0AF3 STD     SPRPTR+2+3*SPREND+TUNSPR
COMMENT_LINE $0AF3 GET POSITION
COMMENT_LINE $0AF3 LDD     0,X++
COMMENT_LINE $0AF3 STD     SPRTXY+3*SPREND+TUNSPR
COMMENT_LINE $0AF3 STX     TUNPTR
COMMENT_LINE $0AF3 IF TOP ELEMENT IS DEAD THEN WERE DEAD
COMMENT_LINE $0AF8 DEAD IN THE WATER
FORCE_SYMBOL $0AF8 TUNDONE
COMMENT_LINE $0AFC ZOOM THE STACK
FORCE_SYMBOL $0AFF TUNSPD
FORCE_SYMBOL $0B02 EXPON
COMMENT_LINE $0B05 NOW CREATE ZOOM VALUES
FORCE_SYMBOL $0B08 TUNSIZ
FORCE_SYMBOL $0B0E TUNSIZ
FORCE_SYMBOL $0B14 TUNSIZ
COMMENT_LINE $0B1A NOW CREATE DISPARITY AND INTENSITY
FORCE_NO_SYMBOL $0B1A
FORCE_SYMBOL $0B1C PEMP0
FORCE_SYMBOL $0B1F TUNSPR
FORCE_SYMBOL $0B22 SPRZOM
FORCE_NO_SYMBOL $0B24
FORCE_SYMBOL $0B28 SPRDIS
FORCE_SYMBOL $0B2A SPRZOM
FORCE_NO_SYMBOL $0B2C
FORCE_NO_SYMBOL $0B30
FORCE_SYMBOL $0B32 SPRINT
FORCE_SYMBOL $0B34 SPREND
FORCE_SYMBOL $0B37 PEMP0
COMMENT_LINE $0B3D *******************
COMMENT_LINE $0B3D *
COMMENT_LINE $0B3D * INTTUN
COMMENT_LINE $0B3D *
COMMENT_LINE $0B3D * INIT THE TUNNEL
COMMENT_LINE $0B3D *
COMMENT_LINE $0B3D * PLACE THE TABLE INTO
COMMENT_LINE $0B3D * SET UP THE TIMERS
COMMENT_LINE $0B3D * ETC.
COMMENT_LINE $0B3D *
COMMENT_LINE $0B3D ******************
COMMENT_LINE $0B3D SET UP THE INITIAL TIMER
FORCE_NO_SYMBOL $0B3D
COMMENT_LINE $0B43 SET UP COLOR AND DATA
FORCE_SYMBOL $0B43 TUNSPR
FORCE_SYMBOL $0B46 NUMWALL
FORCE_SYMBOL $0B49 WALLTYP
FORCE_SYMBOL $0B4C WALCOL
FORCE_NO_SYMBOL $0B4F
FORCE_SYMBOL $0B51 PEMP6
FORCE_NO_SYMBOL $0B54
FORCE_SYMBOL $0B56 SPRTUN
FORCE_SYMBOL $0B59 GETWALL
FORCE_SYMBOL $0B5C RANDOM
FORCE_NO_SYMBOL $0B5F
FORCE_SYMBOL $0B62 SPRXY
FORCE_NO_SYMBOL $0B64
FORCE_SYMBOL $0B67 SPRTIM
FORCE_SYMBOL $0B69 SPREND
FORCE_SYMBOL $0B6C PEMP6
FORCE_SYMBOL $0B71 SPRCOL
COMMENT_LINE $0B74 *
COMMENT_LINE $0B74 * .ASM DATA TABLES /WBH
COMMENT_LINE $0B89 BIG BOX
COMMENT_LINE $0B9D REZEROING
COMMENT_LINE $0BA2 SMALL HOLE
COMMENT_LINE $0BCC ************
COMMENT_LINE $0BCC * SECTOR TIMER TABLE
COMMENT_LINE $0BCC ************
COMMENT_LINE $0BCC RIGHT BLUE
COMMENT_LINE $0BCE RIGHT GREEN
COMMENT_LINE $0BD0 RIGHT RED
COMMENT_LINE $0BD2 LEFT BLUE
COMMENT_LINE $0BD4 LEFT GREEN
COMMENT_LINE $0BD4 FDB     $4D00
COMMENT_LINE $0BD6 LEFT RED
COMMENT_LINE $0BD6 FDB     $2700
COMMENT_LINE $0BD8 FINIS
COMMENT_LINE $0BDA ************
COMMENT_LINE $0BDA *
COMMENT_LINE $0BDA * SUBROUTINE TO CALL AT EACH SECTOR
COMMENT_LINE $0BDA *
COMMENT_LINE $0BDA ************
COMMENT_LINE $0BDA RIGHT EYE
COMMENT_LINE $0BE0 LEFT EYE
COMMENT_LINE $0BE6 **************************************************************************
COMMENT_LINE $0BE6 *                                                                        *
COMMENT_LINE $0BE6 *     NARROW ESCAPE          BILL HAWKINS            SOUND.SUB           *
COMMENT_LINE $0BE6 *                                                                        *
COMMENT_LINE $0BE6 *            SOUND PACKAGE. ORIGINAL SOURCE:  DUNCAN MUIRHEAD            *
COMMENT_LINE $0BE6 *              3 CHANNEL TOTALLY FLOATING SOUNDS.                        *
COMMENT_LINE $0BE6 *                                                                        *
COMMENT_LINE $0BE6 *                *******PROGRAM SET UP FOR TERMINAL INPUT*********       *
COMMENT_LINE $0BE6 *       TO PUT INTO PROGRAM CHANGE NDWRD TO SNDWRD, REMOVE LINES         *
COMMENT_LINE $0BE6 *       MARKED '*****REMOVE', UN-COMMENT LINE MARKED '*****INSERT',      *
COMMENT_LINE $0BE6 *        SEE ALSO:  SOUND.DOC FOR INSTALLATION NOTES.                    *
COMMENT_LINE $0BE6 **************************************************************************
COMMENT $0BE6 IREQ INTREQ
FORCE_NO_SYMBOL $0BE6
FORCE_SYMBOL $0BE9 REQ6
COMMENT $0BEB 32 BYTES
FORCE_SYMBOL $0BEB SNDRAM
FORCE_SYMBOL $0BEF SNDSUB
FORCE_NO_SYMBOL $0BF2
FORCE_SYMBOL $0BF5 CHAN
FORCE_SYMBOL $0BF7 NUSND
COMMENT $0BF9 INPUT NEW SOUNDS
FORCE_SYMBOL $0BF9 SNDWRD
COMMENT $0BFB SOUNDS ALREADY GOING
FORCE_SYMBOL $0BFB SNDGO
COMMENT $0BFD CANDIDATE SOUNDS THIS TIME
FORCE_SYMBOL $0BFD SNDMAB
FORCE_SYMBOL $0BFF MASK
FORCE_SYMBOL $0C01 SNDMAB
FORCE_SYMBOL $0C07 NUSND
FORCE_SYMBOL $0C09 NUSND
FORCE_SYMBOL $0C0B SNDWRD
FORCE_SYMBOL $0C0F SNDGO
FORCE_NO_SYMBOL $0C13
FORCE_NO_SYMBOL $0C15
FORCE_NO_SYMBOL $0C17
FORCE_NO_SYMBOL $0C19
FORCE_NO_SYMBOL $0C1B
FORCE_SYMBOL $0C1D NOSEFR
COMMENT $0C1F SEVEN WRECKS
FORCE_SYMBOL $0C1F REQ7
FORCE_NO_SYMBOL $0C21
FORCE_SYMBOL $0C23 CHAN
FORCE_NO_SYMBOL $0C27
FORCE_NO_SYMBOL $0C29
FORCE_SYMBOL $0C2B MASK
COMMENT $0C2F ****INSERT
FORCE_SYMBOL $0C2F SNDGO
COMMENT $0C31 KLAXON, BACKGRND,INCOMING SURVIVE       ****INSERT
FORCE_NO_SYMBOL $0C31
COMMENT $0C33 PLUS CURRENT SOUNDS             ****INSERT
FORCE_SYMBOL $0C33 NUSND
FORCE_SYMBOL $0C35 SNDGO
COMMENT $0C37 ****INSERT
FORCE_SYMBOL $0C37 SNDWRD
COMMENT_LINE $0C3A ********************************
COMMENT $0C3A EXPLOSIONS - SUBROUTINE
COMMENT $0C3C - START PERIOD
COMMENT $0C3E - START AMPLITUDE
COMMENT_LINE $0C41 ; 2 TYPES OF EXPLOSION: 00 OR 01 IN EXPLOS
COMMENT $0C41 FUEL OUT FALLING SOUND
COMMENT $0C48 PLAYER MUNITION LANCH SOUND
COMMENT $0C4F FEULING SOUND
COMMENT $0C53 03:NOISE  00:TONE   FF:BOTH
COMMENT $0C56 PASSING THROUGH WALL SOUND
COMMENT $0C5D INCOMING MUNITIONS PROPULSION SOUND
COMMENT $0C64 "FUEL LOW" WARNING KLAXON
COMMENT $0C6B BACKGROUND DRONE SOUND
COMMENT $0C72 SETUP ENVALOPE PERIOD
FORCE_NO_SYMBOL $0C72
FORCE_SYMBOL $0C75 REQ1
COMMENT $0C77 SETUP ENVALOPE TYPE
FORCE_NO_SYMBOL $0C77
FORCE_SYMBOL $0C79 REQ0
FORCE_SYMBOL $0C7B STUVIT
FORCE_SYMBOL $0C7E FIRRAM
FORCE_SYMBOL $0C82 SNDWRD
FORCE_SYMBOL $0C84 MASK
FORCE_NO_SYMBOL $0C88
FORCE_NO_SYMBOL $0C8B
FORCE_NO_SYMBOL $0C8D
FORCE_NO_SYMBOL $0C90
FORCE_NO_SYMBOL $0C92
FORCE_NO_SYMBOL $0C95
FORCE_NO_SYMBOL $0C97
FORCE_NO_SYMBOL $0C9A
FORCE_NO_SYMBOL $0C9C
FORCE_NO_SYMBOL $0C9E
COMMENT $0CA3 SETUP ENVALOPE PERIOD
FORCE_NO_SYMBOL $0CA3
FORCE_SYMBOL $0CA6 REQ1
COMMENT $0CA8 SETUP WHITE NOISE FREQ TO MAX
FORCE_SYMBOL $0CA8 REQ7
COMMENT $0CAA SETUP ENVALOPE TYPE
FORCE_NO_SYMBOL $0CAA
FORCE_SYMBOL $0CAC REQ0
FORCE_NO_SYMBOL $0CB0
FORCE_NO_SYMBOL $0CB2
FORCE_NO_SYMBOL $0CB6
FORCE_NO_SYMBOL $0CB8
FORCE_SYMBOL $0CBC CHAN
FORCE_NO_SYMBOL $0CBF
FORCE_NO_SYMBOL $0CC5
FORCE_NO_SYMBOL $0CC7
COMMENT $0CCB DECAY AMPLITUDE WHEN TIMER  IS LESS THAN 0E
FORCE_NO_SYMBOL $0CCB
FORCE_NO_SYMBOL $0CCD
FORCE_NO_SYMBOL $0CCF
FORCE_NO_SYMBOL $0CD1
FORCE_SYMBOL $0CD3 STUVIT
FORCE_SYMBOL $0CD6 OUTRAM
FORCE_SYMBOL $0CDA SNDWRD
FORCE_SYMBOL $0CDC MASK
COMMENT_LINE $0CE0 ANDA    #$FD    ;                                         ****REMOVE
COMMENT_LINE $0CE0 STA     SNDWRD  ;                                         ****REMOVE
FORCE_SYMBOL $0CE0 SNDMAB
FORCE_NO_SYMBOL $0CE2
FORCE_SYMBOL $0CE4 SNDMAB
COMMENT $0CE6 ****INSERT
FORCE_SYMBOL $0CE6 SNDGO
COMMENT $0CE8 ****INSERT
FORCE_NO_SYMBOL $0CE8
COMMENT $0CEA ****INSERT
FORCE_SYMBOL $0CEA SNDGO
FORCE_NO_SYMBOL $0CEC
FORCE_NO_SYMBOL $0CEF
FORCE_NO_SYMBOL $0CF1
FORCE_NO_SYMBOL $0CF3
FORCE_NO_SYMBOL $0CF6
FORCE_NO_SYMBOL $0CF8
FORCE_NO_SYMBOL $0CFB
FORCE_NO_SYMBOL $0CFD
FORCE_NO_SYMBOL $0D00
FORCE_NO_SYMBOL $0D02
FORCE_NO_SYMBOL $0D05
FORCE_NO_SYMBOL $0D09
FORCE_NO_SYMBOL $0D0D
COMMENT $0D0F CHECK TIMER
FORCE_NO_SYMBOL $0D0F
COMMENT $0D11 NO CHANGE TILL EVERY TIMER CYCLE
COMMENT $0D13 RESET TIMER WHEN OVER
FORCE_NO_SYMBOL $0D13
FORCE_NO_SYMBOL $0D15
COMMENT $0D17 DROP FREQUENCY
FORCE_NO_SYMBOL $0D17
FORCE_NO_SYMBOL $0D19
FORCE_NO_SYMBOL $0D1B
COMMENT_LINE $0D1F LDA     SNDWRD  ;                                         ****REMOVE
COMMENT_LINE $0D1F ANDA    #$FD    ;                                         ****REMOVE
COMMENT_LINE $0D1F STA     SNDWRD  ;                                         ****REMOVE
FORCE_SYMBOL $0D1F SNDMAB
FORCE_NO_SYMBOL $0D21
FORCE_SYMBOL $0D23 SNDMAB
COMMENT $0D25 ****INSERT
FORCE_SYMBOL $0D25 SNDGO
COMMENT $0D27 ****INSERT
FORCE_NO_SYMBOL $0D27
COMMENT $0D29 ****INSERT
FORCE_SYMBOL $0D29 SNDGO
COMMENT $0D2B RAISE TONE FREQUENCY
FORCE_NO_SYMBOL $0D2B
FORCE_NO_SYMBOL $0D2D
FORCE_NO_SYMBOL $0D30
COMMENT $0D32 RAISE NOISE FREQUENCY
FORCE_SYMBOL $0D32 NOSEFR
FORCE_SYMBOL $0D34 NOSEFR
FORCE_SYMBOL $0D36 REQ7
FORCE_NO_SYMBOL $0D38
FORCE_NO_SYMBOL $0D3C
FORCE_NO_SYMBOL $0D42
COMMENT $0D45 SETUP ENVALOPE PERIOD
FORCE_SYMBOL $0D45 REQ1
FORCE_NO_SYMBOL $0D47
COMMENT $0D49 SETUP ENVALOPE TYPE
FORCE_SYMBOL $0D49 REQ0
COMMENT $0D4B CHECK TIMER
FORCE_NO_SYMBOL $0D4B
COMMENT $0D4F RESET ENVALOPE GEN IF DONE
FORCE_NO_SYMBOL $0D4F
FORCE_SYMBOL $0D51 REQ0
FORCE_NO_SYMBOL $0D55
FORCE_NO_SYMBOL $0D57
FORCE_NO_SYMBOL $0D5A
FORCE_NO_SYMBOL $0D5C
FORCE_NO_SYMBOL $0D62
FORCE_NO_SYMBOL $0D65
FORCE_NO_SYMBOL $0D69
FORCE_NO_SYMBOL $0D6D
FORCE_NO_SYMBOL $0D6F
COMMENT $0D71 BYTE HAS RANGE TO INCOMING ROUND AS
FORCE_SYMBOL $0D71 RANGE
COMMENT $0D73 $FF TO $20 MINIMUM
FORCE_NO_SYMBOL $0D73
FORCE_NO_SYMBOL $0D77
FORCE_NO_SYMBOL $0D79
FORCE_NO_SYMBOL $0D7E
FORCE_NO_SYMBOL $0D80
FORCE_SYMBOL $0D82 REQ3
FORCE_SYMBOL $0D85 CHAN
FORCE_SYMBOL $0D87 CHAN
FORCE_NO_SYMBOL $0D89
FORCE_NO_SYMBOL $0D8E
FORCE_NO_SYMBOL $0D92
FORCE_NO_SYMBOL $0D94
FORCE_SYMBOL $0D96 NABLE
FORCE_NO_SYMBOL $0D99
FORCE_SYMBOL $0D9D CHAN
FORCE_SYMBOL $0DA1 REQ6
FORCE_SYMBOL $0DA3 REQ6
FORCE_SYMBOL $0DA6 MASK
FORCE_SYMBOL $0DA9 NUSND
FORCE_SYMBOL $0DAB NUSND
FORCE_SYMBOL $0DAE SNDWRD
FORCE_SYMBOL $0DB0 MASK
FORCE_SYMBOL $0DB4 SATUS
FORCE_SYMBOL $0DB8 EXPLOS
FORCE_SYMBOL $0DBA BANGTYP
FORCE_NO_SYMBOL $0DC1
FORCE_SYMBOL $0DC3 REQ7
COMMENT $0DC5 AXE EXPLOD
FORCE_NO_SYMBOL $0DC5
FORCE_SYMBOL $0DC8 CHAN
FORCE_SYMBOL $0DCC XACON
COMMENT $0DD1 TABLES FOR AXE
COMMENT $0DDF FIRE ENABLES
COMMENT_LINE $0DE3 *********************
COMMENT_LINE $0DE3 *
COMMENT_LINE $0DE3 * SPRITES
COMMENT_LINE $0DE3 *
COMMENT_LINE $0DE3 ********************
COMMENT_LINE $0DE3 ********************
COMMENT_LINE $0DE3 *
COMMENT_LINE $0DE3 * ROLLER TRACK  /WBH
COMMENT_LINE $0DE3 *
COMMENT_LINE $0DE3 *******************
COMMENT_LINE $0DE3 STAT,Y,X,2**N ZOOM MULT
COMMENT_LINE $0E18 FCB     $FF,-90,$8C,0
COMMENT_LINE $0E18 FCB     $00,+90,$74,0
COMMENT_LINE $0E1C FCB     $FF,-90,$48,0
COMMENT_LINE $0E2F FCB     $FF,-90,$74,0
COMMENT_LINE $0E2F FCB     $00,+90,$8C,0
COMMENT_LINE $0E33 FCB     $FF,-90,$48,0
COMMENT_LINE $0E52 FCB     $FF,$A6,$48,0   ; changed line to the one below
COMMENT $0E52 malban
RANGE $0000-$0BE6 DP $D0
RANGE $0BE6-$0E57 DP $C8
RANGE $0000-$000B DB_DATA 11
RANGE $000B-$000D DW_DATA 1
RANGE $000D-$000F DW_DATA 1
RANGE $000F-$0011 DW_DATA 1
RANGE $0011-$001F DB_DATA 14
RANGE $001F-$0020 DB_DATA 1
RANGE $0020-$049B CODE
RANGE $049B-$049D DW_DATA 1
RANGE $049D-$049F DW_DATA 1
RANGE $049F-$04DB CODE
RANGE $04DB-$04DD DW_DATA 1
RANGE $04DD-$04DF DW_DATA 1
RANGE $04DF-$0A5B CODE
RANGE $0A5B-$0A5C DB_DATA 1
RANGE $0A5C-$0A5D DB_DATA 1
RANGE $0A5D-$0A5E DB_DATA 1
RANGE $0A5E-$0A60 DW_DATA 1
RANGE $0A60-$0A62 DW_DATA 1
RANGE $0A62-$0A64 DW_DATA 1
RANGE $0A64-$0A66 DW_DATA 1
RANGE $0A66-$0A68 DW_DATA 1
RANGE $0A68-$0A6A DW_DATA 1
RANGE $0A6A-$0A6C DW_DATA 1
RANGE $0A6C-$0A6E DW_DATA 1
RANGE $0A6E-$0A70 DW_DATA 1
RANGE $0A70-$0A72 DW_DATA 1
RANGE $0A72-$0A74 DW_DATA 1
RANGE $0A74-$0A76 DW_DATA 1
RANGE $0A76-$0A78 DW_DATA 1
RANGE $0A78-$0A7A DW_DATA 1
RANGE $0A7A-$0A7C DW_DATA 1
RANGE $0A7C-$0A7E DW_DATA 1
RANGE $0A7E-$0B74 CODE
RANGE $0B74-$0B78 DB_DATA 4
RANGE $0B78-$0B7C DB_DATA 4
RANGE $0B7C-$0B80 DB_DATA 4
RANGE $0B80-$0B84 DB_DATA 4
RANGE $0B84-$0B88 DB_DATA 4
RANGE $0B88-$0B89 DB_DATA 1
RANGE $0B89-$0B8D DB_DATA 4
RANGE $0B8D-$0B91 DB_DATA 4
RANGE $0B91-$0B95 DB_DATA 4
RANGE $0B95-$0B99 DB_DATA 4
RANGE $0B99-$0B9D DB_DATA 4
RANGE $0B9D-$0BA1 DB_DATA 4
RANGE $0BA1-$0BA2 DB_DATA 1
RANGE $0BA2-$0BA6 DB_DATA 4
RANGE $0BA6-$0BAA DB_DATA 4
RANGE $0BAA-$0BAE DB_DATA 4
RANGE $0BAE-$0BB2 DB_DATA 4
RANGE $0BB2-$0BB6 DB_DATA 4
RANGE $0BB6-$0BB7 DB_DATA 1
RANGE $0BB7-$0BBB DB_DATA 4
RANGE $0BBB-$0BBF DB_DATA 4
RANGE $0BBF-$0BC3 DB_DATA 4
RANGE $0BC3-$0BC7 DB_DATA 4
RANGE $0BC7-$0BCB DB_DATA 4
RANGE $0BCB-$0BCC DB_DATA 1
RANGE $0BCC-$0BCE DW_DATA 1
RANGE $0BCE-$0BD0 DW_DATA 1
RANGE $0BD0-$0BD2 DW_DATA 1
RANGE $0BD2-$0BD4 DW_DATA 1
RANGE $0BD4-$0BD6 DW_DATA 1
RANGE $0BD6-$0BD8 DW_DATA 1
RANGE $0BD8-$0BDA DW_DATA 1
RANGE $0BDA-$0BDC DW_DATA 1
RANGE $0BDC-$0BDE DW_DATA 1
RANGE $0BDE-$0BE0 DW_DATA 1
RANGE $0BE0-$0BE2 DW_DATA 1
RANGE $0BE2-$0BE4 DW_DATA 1
RANGE $0BE4-$0BE6 DW_DATA 1
RANGE $0BE6-$0C3A CODE
RANGE $0C3A-$0C3C DW_DATA 1
RANGE $0C3C-$0C3E DW_DATA 1
RANGE $0C3E-$0C41 DB_DATA 3
RANGE $0C41-$0C43 DW_DATA 1
RANGE $0C43-$0C45 DW_DATA 1
RANGE $0C45-$0C48 DB_DATA 3
RANGE $0C48-$0C4A DW_DATA 1
RANGE $0C4A-$0C4C DW_DATA 1
RANGE $0C4C-$0C4F DB_DATA 3
RANGE $0C4F-$0C51 DW_DATA 1
RANGE $0C51-$0C53 DW_DATA 1
RANGE $0C53-$0C56 DB_DATA 3
RANGE $0C56-$0C58 DW_DATA 1
RANGE $0C58-$0C5A DW_DATA 1
RANGE $0C5A-$0C5D DB_DATA 3
RANGE $0C5D-$0C5F DW_DATA 1
RANGE $0C5F-$0C61 DW_DATA 1
RANGE $0C61-$0C64 DB_DATA 3
RANGE $0C64-$0C66 DW_DATA 1
RANGE $0C66-$0C68 DW_DATA 1
RANGE $0C68-$0C6B DB_DATA 3
RANGE $0C6B-$0C6D DW_DATA 1
RANGE $0C6D-$0C6F DW_DATA 1
RANGE $0C6F-$0C72 DB_DATA 3
RANGE $0C72-$0DD1 CODE
RANGE $0DD1-$0DD5 DB_DATA 4
RANGE $0DD5-$0DD9 DB_DATA 4
RANGE $0DD9-$0DDF DB_DATA 6
RANGE $0DDF-$0DE3 DB_DATA 4
RANGE $0DE3-$0DE5 DW_DATA 1
RANGE $0DE5-$0DE9 DB_DATA 4
RANGE $0DE9-$0DED DB_DATA 4
RANGE $0DED-$0DF1 DB_DATA 4
RANGE $0DF1-$0DF5 DB_DATA 4
RANGE $0DF5-$0DF9 DB_DATA 4
RANGE $0DF9-$0DFD DB_DATA 4
RANGE $0DFD-$0E01 DB_DATA 4
RANGE $0E01-$0E05 DB_DATA 4
RANGE $0E05-$0E06 DB_DATA 1
RANGE $0E06-$0E08 DW_DATA 1
RANGE $0E08-$0E0C DB_DATA 4
RANGE $0E0C-$0E10 DB_DATA 4
RANGE $0E10-$0E14 DB_DATA 4
RANGE $0E14-$0E18 DB_DATA 4
RANGE $0E18-$0E1C DB_DATA 4
RANGE $0E1C-$0E1D DB_DATA 1
RANGE $0E1D-$0E1F DW_DATA 1
RANGE $0E1F-$0E23 DB_DATA 4
RANGE $0E23-$0E27 DB_DATA 4
RANGE $0E27-$0E2B DB_DATA 4
RANGE $0E2B-$0E2F DB_DATA 4
RANGE $0E2F-$0E33 DB_DATA 4
RANGE $0E33-$0E34 DB_DATA 1
RANGE $0E34-$0E36 DW_DATA 1
RANGE $0E36-$0E3A DB_DATA 4
RANGE $0E3A-$0E3E DB_DATA 4
RANGE $0E3E-$0E42 DB_DATA 4
RANGE $0E42-$0E46 DB_DATA 4
RANGE $0E46-$0E4A DB_DATA 4
RANGE $0E4A-$0E4E DB_DATA 4
RANGE $0E4E-$0E52 DB_DATA 4
RANGE $0E52-$0E56 DB_DATA 4
RANGE $0E56-$0E57 DB_DATA 1

