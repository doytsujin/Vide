BANK 0
LABEL $D000 VIA_port_b
COMMENT_LABEL $D000 VIA port B data I/O register
LABEL $D001 VIA_port_a
COMMENT_LABEL $D001 VIA port A data I/O register (handshaking)
LABEL $D004 VIA_t1_cnt_lo
COMMENT_LABEL $D004 VIA timer 1 count register lo (scale factor)
LABEL $D00A VIA_shift_reg
COMMENT_LABEL $D00A VIA shift register
LABEL $D00B VIA_aux_cntl
COMMENT_LABEL $D00B VIA auxiliary control register
LABEL $D00C VIA_cntl
COMMENT_LABEL $D00C VIA control register
LABEL $F192 Wait_Recal
LABEL $F2A5 Intensity_5F
LABEL $F2AB Intensity_a
LABEL $F312 Moveto_d
LABEL $F354 Reset0Ref
LABEL $F385 Print_List_hw
LABEL $F3DF Draw_Line_d
COMMENT_LABEL $F3DF y x y x ...
LABEL $F9F4 Char_Table
COMMENT_LABEL $F9F4 D4?
LABEL $C880 counter
LABEL $0027 loop
LABEL $00AF alltext
EQU $53 nextcurve
LABEL $0087 nextchunk
LABEL $009E repeat_dot
COMMENT_LINE $0000 Electric Force - 233 bytes intro by Frog (for CC'2015)
COMMENT_LINE $0000 http://frog.enlight.ru
COMMENT_LINE $0000 frog@enlight.ru
COMMENT_LINE $0000 rev. 2 (optimized), July 2015
COMMENT_LINE $0000 (real Vectrex required!)
COMMENT_LINE $0000 $C839   ;Pointer to copyright string during startup
COMMENT_LINE $0000 $C83B   ;High score cold-start flag (=0 if valid)
COMMENT_LINE $0000 $C83C   ;temp byte
COMMENT_LINE $0000 $C843   ;        register 9
COMMENT_LINE $0000 $C844   ;        register 8
COMMENT_LINE $0000 $C848   ;        register 4
COMMENT_LINE $0000 $C849   ;        register 3
COMMENT_LINE $0000 $C84A   ;        register 2
COMMENT_LINE $0000 $C84C   ;        register 0
COMMENT_LINE $0000 $C85E   ;Scratch 'score' storage for Display_Option (7 bytes)
COMMENT_LINE $0000 $C868...$C876   ;Unused?
COMMENT_LINE $0000 $C878   ;Unused?
COMMENT_LINE $0000 $C880 - $CBEA is user RAM  ;
COMMENT_LINE $0000 0 sample/hold (0=enable  mux 1=disable mux)
COMMENT_LINE $0000 1 mux sel 0
COMMENT_LINE $0000 2 mux sel 1
COMMENT_LINE $0000 3 sound BC1
COMMENT_LINE $0000 4 sound BDIR
COMMENT_LINE $0000 5 comparator input
COMMENT_LINE $0000 6 external device (slot pin 35) initialized to input
COMMENT_LINE $0000 7 /RAMP
COMMENT_LINE $0000 0 PA latch enable
COMMENT_LINE $0000 1 PB latch enable
COMMENT_LINE $0000 2 \                     110=output to CB2 under control of phase 2 clock
COMMENT_LINE $0000 3  > shift register control     (110 is the only mode used by the Vectrex ROM)
COMMENT_LINE $0000 4 /
COMMENT_LINE $0000 5 0=t2 one shot                 1=t2 free running
COMMENT_LINE $0000 6 0=t1 one shot                 1=t1 free running
COMMENT_LINE $0000 7 0=t1 disable PB7 output       1=t1 enable PB7 output
COMMENT_LINE $0000 0 CA1 control     CA1 -> SW7    0=IRQ on low 1=IRQ on high
COMMENT_LINE $0000 1 \
COMMENT_LINE $0000 2  > CA2 control  CA2 -> /ZERO  110=low 111=high
COMMENT_LINE $0000 3 /
COMMENT_LINE $0000 4 CB1 control     CB1 -> NC     0=IRQ on low 1=IRQ on high
COMMENT_LINE $0000 5 \
COMMENT_LINE $0000 6  > CB2 control  CB2 -> /BLANK 110=low 111=high
COMMENT_LINE $0000 7 /
COMMENT_LINE $0000 bit                             cleared by
COMMENT_LINE $0000 0 CA2 interrupt flag            reading or writing port A I/O
COMMENT_LINE $0000 1 CA1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $0000 2 shift register interrupt flag reading or writing shift register
COMMENT_LINE $0000 3 CB2 interrupt flag            reading or writing port B I/O
COMMENT_LINE $0000 4 CB1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $0000 5 timer 2 interrupt flag        read t2 low or write t2 high
COMMENT_LINE $0000 6 timer 1 interrupt flag        read t1 count low or write t1 high
COMMENT_LINE $0000 7 IRQ status flag               write logic 0 to IER or IFR bit
COMMENT_LINE $0000 0 CA2 interrupt enable
COMMENT_LINE $0000 1 CA1 interrupt enable
COMMENT_LINE $0000 2 shift register interrupt enable
COMMENT_LINE $0000 3 CB2 interrupt enable
COMMENT_LINE $0000 4 CB1 interrupt enable
COMMENT_LINE $0000 5 timer 2 interrupt enable
COMMENT_LINE $0000 6 timer 1 interrupt enable
COMMENT_LINE $0000 7 IER set/clear control
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 'g' is copyright sign
COMMENT $000B music from the rom (no music)
COMMENT $000D height, width, rel y, rel x
COMMENT $0011 app title, ending with $80
COMMENT $0020 end of header
COMMENT $0021 just source of some numbers...
COMMENT $0027 recalibrate CRT, reset beam to 0,0
COMMENT $002A scale (max possible)
COMMENT_LINE $0031 FRAME EDGE LINES ---------------------------
COMMENT $0031 Y,X
COMMENT $0037 Y,X
COMMENT $003D Y,X
COMMENT $0043 Y,X
COMMENT_LINE $0049 text
COMMENT_LINE $004F start drawing curve
COMMENT $0053 recalibrate crt (x,y = 0)
COMMENT $0056 /Blank low, /ZERO high
COMMENT $0058 enable beam, disable zeroing
COMMENT $005A Y,X
COMMENT_LINE $0066 Draw_Curve begin
COMMENT_LINE $0066 params: y - coeff. to make curves look different
COMMENT $0069 disable MUX, disable ~RAMP
COMMENT $006B AUX: shift mode 4. PB7 not timer controlled. PB7 is ~RAMP
COMMENT $006D Y -86
COMMENT $006F Y to DAC
COMMENT $0071 b now $80
COMMENT $0072 enable MUX
COMMENT $0075 MUX off, only X on DAC now
COMMENT $0077 X to DAC
COMMENT $007A MUX disable, ~RAMP enable. Start integration
COMMENT $007E pattern
COMMENT $008B put X to DAC
COMMENT $008D inc x
COMMENT $008F 12 (+1) segments per curve
COMMENT $0094 ramp off, MUX off
COMMENT $009A restore usual AUX setting (enable PB7 timer, SHIFT mode 4)
COMMENT_LINE $009C Draw_Curve end
COMMENT_LINE $009C draw bright end dot
COMMENT $009C end dot brightness (hold dot long enough)
COMMENT $00A1 Blank beam in VIA shift register
COMMENT $00A3 number of curves (max. which fit in 30000 cycles)
COMMENT_LINE $00AF Text lines
COMMENT_LINE $00AF height, width, rel y, rel x, string, eol ($80)
RANGE $0000-$00E8 DP $D0
RANGE $0000-$000B DB_DATA
RANGE $000B-$000D DW_DATA
RANGE $000D-$0021 DB_DATA
RANGE $0021-$00AF CODE
RANGE $00AF-$00E9 DB_DATA

