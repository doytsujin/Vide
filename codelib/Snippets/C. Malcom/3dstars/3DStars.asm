;***************************************************************************
;***************************************************************************
;***************************************************************************
;***************************************************************************
; FAKE 3D STARFIELD by C.MALCOLM
;***************************************************************************
; A quick and dirty pseudo-3D starfield
;***************************************************************************
;***************************************************************************
;***************************************************************************
; DEFINE SECTION
;***************************************************************************

; load rom function names...
                INCLUDE "VECTREX.I"


;***************************************************************************
; END DEFINE SECTION
;***************************************************************************

                BSS                                                                       
                ORG $c880       ; start of our ram space                             

;temp vars
tempB1			EQU	$C880
tempW1			EQU	tempB1+1
tempW2			EQU	tempW1+2
tempW3			EQU	tempW2+2

;score vars		
p1_score		EQU	tempW3+2                                                                                  
p2_score		EQU	p1_score+8                                                                                     

;dot vars
dot_X			EQU	p2_score+8
dot_Y			EQU	dot_X+1
dot_Z			EQU	dot_Y+1
dot_ZSpd		EQU	dot_Z+2

;dot data
dots_Data		EQU	dot_ZSpd+2

last_byte		EQU	dots_Data+384
       
;number of dots (constant)
DOT_COUNT		EQU	63 


;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************

;

                CODE                                                                      

; start of vectrex memory with cartridge name...
                ORG     0
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
; HEADER SECTION
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
                DB      "g GCE 2014", $80       ; 'g' is copyright sign
                DW      music1                  ; music from the rom
                DB      $F8, $50, $20, -$55     ; height, width, rel y, rel x
                                                ; (from 0,0)
                DB      "3D STARFIELD",$80  ; some game information,
                                                ; ending with $80
                DB      $F8, $50, $10, -$40     ; height, width, rel y, rel x
                                                ; (from 0,0)
                DB      "g C. MALCOLM",$80  ; some game information,
                                                ; ending with $80
                DB      0                       ; end of game header

;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
; CODE SECTION
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************


;cart init
init:
		;clear score (for debug)
		LDX	p1_score
		JSR	Clear_Score
		LDA	#0

		;enable joy 1 x/y axis
		lda	#1
		sta	Vec_Joy_Mux_1_X
		lda	#3
		sta	Vec_Joy_Mux_1_Y
		lda	#0
		sta	Vec_Joy_Mux_2_X
		sta	Vec_Joy_Mux_2_Y

		;initialise our star data
		jsr	dotsInit

;main loop
main:
                JSR     Wait_Recal              ; Vectrex BIOS recalibration
		jsr	Reset0Ref 
                JSR     Intensity_7F            ; Set beam intensity 

		;clear score (for debug)
		ldx	#p1_score
		JSR	Clear_Score

		;add byte to score
		ldx	#p1_score
		lda	dot_Z
		jsr	Add_Score_a                                                

		;print score
                LDU     #p1_score  
                LDA     #127               
                LDB     #40                  	 
                ;JSR     Print_Str_d           

		;read analog stick
		jsr	Joy_Analog
		;draw stars
		jsr	dotsDraw
		;move stars
		jsr	dotsMove

		BRA	main				;loop forever

;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;this procudeure initialises the star data
dotsInit:
	;init loop
	lda	#DOT_COUNT
	sta	tempB1
	ldx	#dots_Data

dotsInitLp:
	;random star position, speed
	jsr	dotRandom

	;Y
	lda	dot_Y
	sta	,x+

	;X
	lda	dot_X
	sta	,x+

	;Z (Random 0-127)
	jsr Random
	anda	#127
	ldb	#0
	std	,x++

	;ZSpd
	ldd	dot_ZSpd
	std	,x++

	;loop?
	dec	tempB1
	lda	tempB1
	cmpa	#0
	bne	dotsInitLp

	rts

;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;draw our stars
dotsDraw:
	jsr	Reset0Ref 
       	JSR     Intensity_7F            ; Set beam intensity 

	;init loop
	lda	#DOT_COUNT
	sta	tempB1
	ldx	#dots_Data

dotsDrawLp:
	;load bytes
	lda	,x+
	sta	dot_Y
	lda	,x+
	sta	dot_X
	ldd	,x++
	std	dot_Z
	ldd	,x++
	std	dot_ZSpd
	
	jsr	dotDraw

	;loop?
	dec	tempB1
	lda	tempB1
	cmpa	#0
	bne	dotsDrawLp

	rts

;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;draw each star
dotDraw:

	;avoids a cluster of dots appearing at the center of the screen - adjust to taste
	LDA	dot_Z
	cmpa	#15
	ble	dotDrawExit


	;goto 0,0
	jsr	Reset0Ref 

	;set scale factor (this scales the coordinates, giving the appearance of 3D)
	LDA	dot_Z
	STA	VIA_t1_cnt_lo 		

	;set dot intensity - dots closer to the player (higher Z value) get brighter - adjust to taste 
	LDA	dot_Z
       	JSR     Intensity_a            ; Set beam intensity 

	;move to position
        LDA     dot_Y                    ; to 0 (y)
        LDB     dot_X                    ; to 0 (x)
       	JSR     Moveto_d                ; move the vector beam the

	;draw dot
	jsr	Dot_here

dotDrawExit:
	rts


;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;move our stars
dotsMove:
	jsr	Reset0Ref 
       	JSR     Intensity_7F            ; Set beam intensity 

	;get speed from joystick
	jsr	dotsJoytoW2

	;init loop
	lda	#DOT_COUNT
	sta	tempB1
	ldx	#dots_Data
	stx	tempW1

dotsMoveLp:
	;restore pointer
	ldx	tempW1

	;load variables with data bytes
	lda	,x+
	sta	dot_Y
	lda	,x+
	sta	dot_X
	ldd	,x++
	std	dot_Z
	ldd	,x++
	std	dot_ZSpd

	;perform move	
	jsr	dotMove

	;restore pointer + overwrite data
	ldx	tempW1
	;save
	lda	dot_Y
	sta	,x+
	lda	dot_X
	sta	,x+
	ldd	dot_Z
	std	,x++
	ldd	dot_ZSpd
	std	,x++
	stx	tempW1

	;loop?
	dec	tempB1
	lda	tempB1
	cmpa	#0
	bne	dotsMoveLp

	rts

;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;move a star
dotMove:
	;move left/right - depending on joystick position
	jsr	dotMoveLR

	;get z axis speed modifier from table (speeds up the star as it moves towards the 'player' on the Z axis)
	jsr	dotZtoW3

	;moving backwards?
	lda	Vec_Joy_1_Y
	cmpa	#0
	blt	dotMoveNeg

dotMovePos:
	;move
	ldd	dot_Z
	;z axis speed modifier
	addd	tempW3
	;star speed
	addd	dot_ZSpd
	;add joystick y pos
	addd	tempW2
	std	dot_Z

dotMove2:
	;outside screen? - add new star
	lda	dot_Z
	cmpa	#0
	blt	dotRandom
	rts

dotMoveNeg:
	;move (reverse)
	ldd	dot_Z
	;z axis speed modifier
	subd	tempW3
	;star speed
	subd	dot_ZSpd
	;subtract joystick y pos
	subd	tempW2
	std	dot_Z

	bra	dotMove2

;*************************************************************************************************************************
;*************************************************************************************************************************
;scroll starfield left/right
dotMoveLR:
	;moving left?
	lda	Vec_Joy_1_X
	cmpa	#-32
	blt	dotMoveL

	lda	Vec_Joy_1_X
	cmpa	#32
	bgt	dotMoveR

	rts

dotMoveR:
	lda	dot_X
	suba	#8
	sta	dot_X
	rts
dotMoveL:
	lda	dot_X
	adda	#8
	sta	dot_X
	rts

;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;random star
dotRandom:
	jsr	dotRandomPos

	;moving backwards?
	lda	Vec_Joy_1_Y
	cmpa	#0
	blt	dotRandomZRev

	;reset Z pos
	ldd	#0
	std	dot_Z

dotRandomSpd:
	;Random Z Spd (-128to127)
	jsr 	Random
	tfr	a,b
	sex	
	std	dot_ZSpd
	rts

dotRandomZRev:
	;reset Z pos
	lda	#127
	sta	dot_Z
	;random speed
	bra	dotRandomSpd

;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
dotRandomPos:
	;50/50 chance of being 'true' random pos or random at edge (gives better screen coverage) - adjust to taste
	jsr Random
	cmpa	#0
	blt	dotRandomPosNew

	;truly random pos
	jsr Random_3
	sta	dot_Y
	jsr Random_3
	sta	dot_X
	rts

;*************************************************************************************************************************
;random pos (at edge of screen)
dotRandomPosNew:
	;random side of screen
	jsr Random
	anda	#3
	cmpa	#1
	beq	dotRandomPosTop
	cmpa	#2
	beq	dotRandomPosLeft
	cmpa	#3
	beq	dotRandomPosRight
dotRandomPosBottom:
	lda	#-127
	sta	dot_Y
	jsr	Random
	sta	dot_X
	rts
dotRandomPosTop:
	lda	#127
	sta	dot_Y
	jsr	Random
	sta	dot_X
	rts
dotRandomPosLeft:
	lda	#-127
	sta	dot_X
	jsr	Random
	sta	dot_Y
	rts
dotRandomPosRight:
	lda	#127
	sta	dot_X
	jsr	Random
	sta	dot_Y
	rts

;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;get z speed modifier from table and store in tempW3
dotZtoW3:
	ldx	#tblZSpd
	lda	#2
	ldb	dot_Z
	mul
	abx
	ldd	,x
	std	tempW3
	rts

;get speed modifier from joystick y axis and store in tempW2
dotsJoytoW2:
	;calc joystick speed
	lda	Vec_Joy_1_Y
	ldb	#4
	mul
	;store
	std	tempW2
	rts

;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************
;*************************************************************************************************************************




endofmain:
;***************************************************************************
;***************************************************************************
;***************************************************************************
;***************************************************************************
;* DATA SECTION ************************************************************
;***************************************************************************
;***************************************************************************
;***************************************************************************
;***************************************************************************
;***************************************************************************

                DATA                                                                      
                ORG     endofmain


tblZSpd:
	fcw	160,160,160,161,161,161,162,163,164,165,166,167,168,170,171,173,175,177,179,181,183,186,188,191,194,196,199,202,206,209,212,216,219,223,227
	fcw	231,235,239,243,248,252,257,261,266,271,276,281,286,291,297,302,308,313,319,325,331,337,343,349,356,362,368,375,382,388,395,402,409,416,423
	fcw	430,438,445,452,460,467,475,483,491,498,506,514,522,530,539,547,555,563,572,580,589,597,606,614,623,632,641,650,658,667,676,685,694,703,712
	fcw	722,731,740,749,758,768,777,786,796,805,814,824,833,843,852,862,871,881,890,900,909,919,928


;***************************************************************************
;***************************************************************************
; END DATA
;***************************************************************************

		END main
