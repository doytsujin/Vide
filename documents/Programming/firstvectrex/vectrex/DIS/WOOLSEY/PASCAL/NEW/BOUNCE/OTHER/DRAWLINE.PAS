PROCEDURE PUTDOT(X, Y: INTEGER; PENDOWN: INTEGER);

TYPE
  MASK = ARRAY[0 .. 5] OF BYTE;

CONST
  VDBCTL: BYTE = $9C;
  VDBDAT: BYTE = $9D;
  VDBGMK: BYTE = $60; (* GRAPHIC MASK *)
  VDBYCF: BYTE = $C0;
  ZZMASK: MASK = ($10, $20, 4, 8, 1, 2);

VAR
  BIT, CH: BYTE;

  PROCEDURE GOTOXY(X, Y: INTEGER);

  BEGIN
    PORT[VDBCTL] := VDBYCF OR Y;
    PORT[VDBCTL] := X;
  END;

BEGIN
  IF (X >= 0) AND (X <= 159) AND (Y >= 0) AND (Y <= 74) THEN
  BEGIN
    GOTOXY(X DIV 2, Y DIV 3);
    CH := PORT[VDBDAT];
    BIT := X MOD 2 + 2 * (Y MOD 3);
    CASE PENDOWN OF
    1: CASE BIT OF
         1, 2, 3, 4, 5: CH := (CH OR ZZMASK[BIT]) AND NOT VDBGMK;
         0: IF CH AND $80 = 0 THEN CH := ($80 OR NOT CH) AND NOT VDBGMK;
       END;
    0: CASE BIT OF
         1, 2, 3, 4, 5: CH := (CH AND NOT ZZMASK[BIT]) AND NOT VDBGMK;
         0: IF CH AND $80 = 80 THEN CH := (NOT CH) AND NOT VDBGMK;
       END;
    END;
    GOTOXY(X DIV 2, Y DIV 3);
    PORT[VDBDAT] := CH;
  END;
END;

PROCEDURE DRAWLINE(XSTART, YSTART, DELTAX, DELTAY: INTEGER; INK: INTEGER);

   VAR
      I, R, XINC, YINC, XDEC, YDEC: INTEGER;

BEGIN (*DRAWLINE*)
   XINC := 0; YINC := 1; XDEC := 1; YDEC := 0;
   IF DELTAX < 0 THEN BEGIN XDEC := - 1; DELTAX := - DELTAX END;
   IF DELTAY < 0 THEN BEGIN YINC := - 1; DELTAY := - DELTAY END;
   IF DELTAX < DELTAY THEN BEGIN I := DELTAX; DELTAX := DELTAY; DELTAY := I;
                      XINC := XDEC; XDEC := 0; YDEC := YINC; YINC := 0 END;
   R := DELTAX DIV 2; PUTDOT(XSTART, YSTART, INK);
   FOR I := 1 TO DELTAX DO
      BEGIN XSTART := XSTART + XDEC; R := R + DELTAY;
            YSTART := YSTART + YDEC;
            IF R > DELTAX THEN BEGIN XSTART := XSTART + XINC;
                               YSTART := YSTART + YINC; R := R - DELTAX END;
            PUTDOT(XSTART, YSTART, INK)
      END
END (* DRAWLINE *);
